{
  "version": 3,
  "sources": ["../../../engine/node_modules/.pnpm/gl-matrix@3.4.4/node_modules/gl-matrix/esm/common.js", "../../../engine/node_modules/.pnpm/gl-matrix@3.4.4/node_modules/gl-matrix/esm/mat3.js", "../../../engine/node_modules/.pnpm/gl-matrix@3.4.4/node_modules/gl-matrix/esm/vec3.js", "../../../engine/node_modules/.pnpm/gl-matrix@3.4.4/node_modules/gl-matrix/esm/vec4.js", "../../../engine/node_modules/.pnpm/gl-matrix@3.4.4/node_modules/gl-matrix/esm/vec2.js", "../../../engine/node_modules/.pnpm/gl-matrix@3.4.4/node_modules/gl-matrix/esm/index.js", "../../../engine/packages/client/dist/editor.js", "../../../engine/packages/client/dist/geometry.js", "../../../engine/packages/client/dist/images.js", "../../../engine/packages/client/dist/gl-utils.js", "../../../engine/packages/client/dist/sprite.js", "../../../engine/packages/client/dist/game.js", "../../../engine/packages/client/dist/coordinates.js", "../../../engine/packages/client/dist/map.js", "../../../engine/packages/client/dist/math.js", "../../../engine/packages/client/dist/resource-loader.js", "../../../engine/packages/client/dist/index.js", "../../../engine/packages/client/dist/gl-matrix.js", "../../../engine/packages/effects/dist/shaders/deferred-lighting.frag.js", "../../../engine/packages/effects/dist/shaders/deferred-lighting.vert.js", "../../../engine/packages/effects/dist/shaders/deferred-sprite.frag.js", "../../../engine/packages/effects/dist/shaders/deferred-sprite.vert.js", "../../../engine/packages/effects/dist/deferred-sprite-effect.js", "../../../engine/packages/effects/dist/shaders/sprite.frag.js", "../../../engine/packages/effects/dist/shaders/sprite.vert.js", "../../../engine/packages/effects/dist/sprite-effect.js", "../../../engine/packages/effects/dist/shaders/solid.frag.js", "../../../engine/packages/effects/dist/shaders/solid.vert.js", "../../../engine/packages/effects/dist/solid-effect.js", "../../../engine/packages/effects/dist/shaders/gaussian-blur.frag.js", "../../../engine/packages/effects/dist/shaders/quad.vert.js", "../../../engine/packages/effects/dist/gaussian-blur.js", "../../../engine/packages/effects/dist/index.js", "../../client/sprites/overworld.ts", "../../client/maps/overworld.ts", "../../client/shaders/nearest-blur.frag.ts", "../../client/nearest-blur.ts", "../../client/sprites/character.ts", "../../client/sprites/ui.ts", "../../client/shaders/water.frag.ts", "../../client/water-effect.ts", "../../client/index.ts", "../../../engine/packages/client/dist/game-runner.js", "../../../engine/packages/client/dist/entrypoint.js"],
  "sourcesContent": ["/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== \"undefined\" ? Float32Array : Array;\nexport var RANDOM = Math.random;\nexport var ANGLE_ORDER = \"zyx\";\n\n/**\n * Symmetric round\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\n *\n * @param {Number} a value to round\n */\nexport function round(a) {\n  if (a >= 0) return Math.round(a);\n  return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\n}\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\nvar radian = 180 / Math.PI;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Convert Radian To Degree\n *\n * @param {Number} a Angle in Radians\n */\nexport function toDegree(a) {\n  return a * radian;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a          The first number to test.\n * @param {Number} b          The second number to test.\n * @param {Number} tolerance  Absolute or relative tolerance (default glMatrix.EPSILON)\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  var tolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  return Math.abs(a - b) <= tolerance * Math.max(1, Math.abs(a), Math.abs(b));\n}", "import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n      a02 = a[2],\n      a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3 | null} out, or null if source matrix is not invertible\n */\nexport function invert(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b00 = b[0],\n    b01 = b[1],\n    b02 = b[2];\n  var b10 = b[3],\n    b11 = b[4],\n    b12 = b[5];\n  var b20 = b[6],\n    b21 = b[7],\n    b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a10 = a[3],\n    a11 = a[4],\n    a12 = a[5],\n    a20 = a[6],\n    a21 = a[7],\n    a22 = a[8],\n    x = v[0],\n    y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a10 = a[3],\n    a11 = a[4],\n    a12 = a[5],\n    a20 = a[6],\n    a21 = a[7],\n    a22 = a[8],\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  var x = v[0],\n    y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8]);\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7],\n    a8 = a[8];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function slerp(out, a, b, t) {\n  var angle = Math.acos(Math.min(Math.max(dot(a, b), -1), 1));\n  var sinTotal = Math.sin(angle);\n  var ratioA = Math.sin((1 - t) * angle) / sinTotal;\n  var ratioB = Math.sin(t * angle) / sinTotal;\n  out[0] = ratioA * a[0] + ratioB * b[0];\n  out[1] = ratioA * a[1] + ratioB * b[1];\n  out[2] = ratioA * a[2] + ratioB * b[2];\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    bx = b[0],\n    by = b[1],\n    bz = b[2],\n    mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz)),\n    cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 3;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  out[3] = glMatrix.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} out the receiving vector\n * @param {ReadonlyVec4} u the first vector\n * @param {ReadonlyVec4} v the second vector\n * @param {ReadonlyVec4} w the third vector\n * @returns {vec4} result\n */\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n    B = v[0] * w[2] - v[2] * w[0],\n    C = v[0] * w[3] - v[3] * w[0],\n    D = v[1] * w[2] - v[2] * w[1],\n    E = v[1] * w[3] - v[3] * w[1],\n    F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  var rand;\n  rand = glMatrix.RANDOM();\n  v1 = rand * 2 - 1;\n  v2 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s1 = v1 * v1 + v2 * v2;\n  rand = glMatrix.RANDOM();\n  v3 = rand * 2 - 1;\n  v4 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s2 = v3 * v3 + v4 * v4;\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 4;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0],\n    y = a[1];\n  return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x * x + y * y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n    p1 = a[1] - b[1],\n    sinC = Math.sin(rad),\n    cosC = Math.cos(rad);\n\n  //perform rotation and translate to correct position\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n\n/**\n * Get the smallest angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1];\n  return Math.abs(Math.atan2(ay * bx - ax * by, ax * bx + ay * by));\n}\n\n/**\n * Get the signed angle in the interval [-pi,pi] between two 2D vectors (positive if `a` is to the right of `b`)\n * \n * @param {ReadonlyVec2} a The first vector\n * @param {ReadonlyVec2} b The second vector\n * @returns {number} The signed angle in radians\n */\nexport function signedAngle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1];\n  return Math.atan2(ax * by - ay * bx, ax * bx + ay * by);\n}\n\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1];\n  var b0 = b[0],\n    b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 2;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };", "export class ClientEditorConnection {\n    #eventHandlers;\n    #requestBuffer;\n    #socket;\n    constructor() {\n        this.#eventHandlers = [];\n        this.#requestBuffer = [];\n        this.#socket = null;\n        this.#createSocket();\n    }\n    #createSocket() {\n        (this.#socket =\n            process.env.NODE_ENV === \"development\"\n                ? new WebSocket(`ws://${window.location.hostname}:${parseInt(window.location.port, 10) + 1}`)\n                : null),\n            this.#socket?.addEventListener(\"message\", (e) => {\n                for (const handler of this.#eventHandlers) {\n                    handler(JSON.parse(e.data));\n                }\n            });\n        this.#socket?.addEventListener(\"open\", () => {\n            console.log(`Connected to editor server, sending ${this.#requestBuffer.length} queued requests...`);\n            for (const request of this.#requestBuffer) {\n                this.send(request);\n            }\n            this.#requestBuffer = [];\n        });\n        this.#socket?.addEventListener(\"close\", () => {\n            console.error(\"Editor server disconnected\");\n            for (const handler of this.#eventHandlers) {\n                handler({\n                    type: \"EDITOR_DISCONNECTED\",\n                });\n            }\n            setTimeout(() => {\n                console.warn(\"Attempting to reconnect to editor server...\");\n                this.#socket = null;\n                this.#createSocket();\n            }, 1000);\n        });\n    }\n    send(action) {\n        if (this.#socket?.readyState === WebSocket.OPEN) {\n            this.#socket?.send(JSON.stringify(action));\n        }\n        else {\n            console.warn(`Editor server not connected, queueing request ${action.type}`);\n            this.#requestBuffer.push(action);\n        }\n    }\n    listen(cb) {\n        this.#eventHandlers.push(cb);\n    }\n    disconnect(cb) {\n        for (let i = this.#eventHandlers.length - 1; i >= 0; --i) {\n            if (cb === this.#eventHandlers[i]) {\n                this.#eventHandlers.splice(i, 1);\n            }\n        }\n    }\n}\n", "import { mat3 } from \"gl-matrix\";\nconst VP = mat3.create();\nmat3.translate(VP, VP, [-1.0, -1.0]);\nmat3.scale(VP, VP, [2.0, 2.0]);\nexport const SpriteViewProjection = VP;\nexport class Quad {\n    #vertexBuffer;\n    #gl;\n    #vao;\n    #vaoInstances;\n    #vaoHash;\n    constructor(gl) {\n        this.#gl = gl;\n        this.#vaoHash = \"\";\n        this.#vaoInstances = null;\n        this.#vao = this.#gl.createVertexArray();\n        const vertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n        this.#vertexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.#vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n    #getAttributes(program, attributes) {\n        const ptrs = {\n            position: program.inAttributes[attributes.position].location,\n        };\n        return { ...ptrs, hash: `${ptrs.position}` };\n    }\n    bind(program, attributes, scope) {\n        const a = this.#getAttributes(program, attributes);\n        this.#gl.bindVertexArray(this.#vao);\n        if (this.#vaoHash !== a.hash || this.#vaoInstances !== null) {\n            this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, this.#vertexBuffer);\n            this.#gl.enableVertexAttribArray(a.position);\n            this.#gl.vertexAttribPointer(a.position, 2, this.#gl.FLOAT, false, 0, 0);\n            this.#vaoHash = a.hash;\n            this.#vaoInstances = null;\n        }\n        scope(this);\n        this.#gl.bindVertexArray(null);\n    }\n    draw() {\n        this.#gl.drawArrays(this.#gl.TRIANGLE_STRIP, 0, 4);\n    }\n    bindInstances(program, attributes, instances, scope) {\n        const a = this.#getAttributes(program, attributes);\n        const instanceAttributesHash = instances.getAttributesHash(program);\n        const hash = `${a.hash}:${instanceAttributesHash}`;\n        this.#gl.bindVertexArray(this.#vao);\n        if (this.#vaoHash !== hash || this.#vaoInstances !== instances) {\n            this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, this.#vertexBuffer);\n            this.#gl.enableVertexAttribArray(a.position);\n            this.#gl.vertexAttribPointer(a.position, 2, this.#gl.FLOAT, false, 0, 0);\n            this.#vaoHash = hash;\n            this.#vaoInstances = instances.bind(program);\n        }\n        const instanceCount = instances.getInstanceCount();\n        scope({\n            draw: () => {\n                this.#gl.drawArraysInstanced(this.#gl.TRIANGLE_STRIP, 0, 4, instanceCount);\n            },\n        });\n        this.#gl.bindVertexArray(null);\n    }\n}\n", "export const TEXTURE = Symbol();\nfunction getImageState() {\n    return process.env.NODE_ENV === \"development\"\n        ? // @ts-ignore\n            window.__PIXELHEART_IMAGE_STATE__ ||\n                // @ts-ignore\n                (window.__PIXELHEART_IMAGE_STATE__ = new Map())\n        : null;\n}\nfunction registerImage(url, reload) {\n    const devImages = getImageState();\n    if (devImages) {\n        const index = url.indexOf(\"?v=\");\n        const urlKey = url.substring(0, index);\n        const images = devImages.get(urlKey);\n        if (!images) {\n            devImages.set(urlKey, [reload]);\n        }\n        else {\n            images.push(reload);\n        }\n    }\n}\nexport function reloadImage(spriteSheet) {\n    const devImages = getImageState();\n    if (devImages) {\n        const urls = Object.values(spriteSheet.urls);\n        for (let u of urls) {\n            const index = u.indexOf(\"?v=\");\n            const urlKey = u.substring(0, index);\n            const images = devImages.get(urlKey);\n            if (images) {\n                for (let reload of images) {\n                    reload(u);\n                }\n            }\n        }\n    }\n}\nexport async function loadTextureFromUrl(ctx, url, opts) {\n    const image = await loadImageFromUrl(url);\n    const value = {\n        [TEXTURE]: loadTextureFromImage(ctx, image, opts),\n        width: image.width,\n        height: image.height,\n    };\n    registerImage(url, (newUrl) => {\n        loadImageFromUrl(newUrl).then((image) => {\n            value[TEXTURE] = loadTextureFromImage(ctx, image, opts);\n            value.width = image.width;\n            value.height = image.height;\n        });\n    });\n    return value;\n}\nexport async function loadCPUReadableTextureFromUrl(ctx, url, opts) {\n    const image = await loadImageFromUrl(url);\n    const value = {\n        image,\n        [TEXTURE]: loadTextureFromImage(ctx, image, opts),\n        width: image.width,\n        height: image.height,\n    };\n    registerImage(url, (newUrl) => {\n        loadImageFromUrl(newUrl).then((image) => {\n            value.image = image;\n            value[TEXTURE] = loadTextureFromImage(ctx, image, opts);\n            value.width = image.width;\n            value.height = image.height;\n        });\n    });\n    return value;\n}\nfunction loadImageFromUrl(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = (err) => reject(err);\n        img.src = url;\n    });\n}\nfunction loadTextureFromImage(ctx, img, opts) {\n    const texture = ctx.gl.createTexture();\n    ctx.gl.activeTexture(ctx.gl.TEXTURE0);\n    ctx.gl.bindTexture(ctx.gl.TEXTURE_2D, texture);\n    ctx.gl.pixelStorei(ctx.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n    ctx.gl.pixelStorei(ctx.gl.UNPACK_FLIP_Y_WEBGL, true);\n    ctx.gl.texParameteri(ctx.gl.TEXTURE_2D, ctx.gl.TEXTURE_WRAP_S, opts?.wrap || ctx.gl.CLAMP_TO_EDGE);\n    ctx.gl.texParameteri(ctx.gl.TEXTURE_2D, ctx.gl.TEXTURE_WRAP_T, opts?.wrap || ctx.gl.CLAMP_TO_EDGE);\n    ctx.gl.texParameteri(ctx.gl.TEXTURE_2D, ctx.gl.TEXTURE_MIN_FILTER, opts?.filter || (opts?.mipmap ? ctx.gl.LINEAR_MIPMAP_LINEAR : ctx.gl.LINEAR));\n    ctx.gl.texParameteri(ctx.gl.TEXTURE_2D, ctx.gl.TEXTURE_MAG_FILTER, opts?.filter || (opts?.mipmap ? ctx.gl.LINEAR_MIPMAP_LINEAR : ctx.gl.LINEAR));\n    ctx.gl.texImage2D(ctx.gl.TEXTURE_2D, 0, ctx.gl.RGBA, ctx.gl.RGBA, ctx.gl.UNSIGNED_BYTE, img);\n    if (opts?.mipmap) {\n        ctx.gl.generateMipmap(ctx.gl.TEXTURE_2D);\n    }\n    ctx.gl.bindTexture(ctx.gl.TEXTURE_2D, null);\n    return texture;\n}\nlet offscreenPixel = null;\nexport function getPixelData(image) {\n    if (!offscreenPixel) {\n        offscreenPixel = new OffscreenCanvas(image.width, image.height).getContext(\"2d\", {\n            willReadFrequently: true,\n        });\n    }\n    offscreenPixel.canvas.width = Math.max(image.width, offscreenPixel.canvas.width);\n    offscreenPixel.canvas.height = Math.max(image.height, offscreenPixel.canvas.height);\n    offscreenPixel.drawImage(image, 0, 0, image.width, image.height);\n    return (x, y) => {\n        const pixelData = offscreenPixel.getImageData(x, y, 1, 1).data;\n        return pixelData;\n    };\n}\n", "import { TEXTURE, } from \"./images.js\";\nfunction getShaderState() {\n    return process.env.NODE_ENV === \"development\"\n        ? // @ts-ignore\n            window.__PIXELHEART_SHADER_STATE__ ||\n                // @ts-ignore\n                (window.__PIXELHEART_SHADER_STATE__ = {\n                    cache: new Map(),\n                    programs: new Map(),\n                })\n        : null;\n}\nfunction registerShader(vertexShaderSource, fragmentShaderSource, reload) {\n    const devShaders = getShaderState()?.programs;\n    if (devShaders) {\n        const vs = devShaders.get(vertexShaderSource.name);\n        if (vs) {\n            vs.push(reload);\n        }\n        else {\n            devShaders.set(vertexShaderSource.name, [reload]);\n        }\n        const fs = devShaders.get(fragmentShaderSource.name);\n        if (fs) {\n            fs.push(reload);\n        }\n        else {\n            devShaders.set(fragmentShaderSource.name, [reload]);\n        }\n    }\n}\nexport function reloadShader(shader, src) {\n    const state = getShaderState();\n    if (state) {\n        console.log(\"reloading shader\", shader);\n        state.cache.set(shader, src);\n        const shaderInstances = state.programs.get(shader);\n        if (shaderInstances) {\n            for (let reload of shaderInstances) {\n                reload();\n            }\n        }\n    }\n}\nexport class ShaderProgram {\n    #gl;\n    #program;\n    #vSource;\n    #fSource;\n    inAttributes;\n    outAttributes;\n    uniforms;\n    constructor(ctx, vertexShaderSource, fragmentShaderSource) {\n        this.#gl = ctx;\n        this.#vSource = vertexShaderSource;\n        this.#fSource = fragmentShaderSource;\n        this.inAttributes = {};\n        this.outAttributes = {};\n        this.uniforms = {};\n        this.#program = this.#createProgram(this.#vSource, this.#fSource);\n        this.setAttributesAndUniforms(this.#vSource, this.#fSource);\n        registerShader(vertexShaderSource, fragmentShaderSource, () => {\n            try {\n                this.#program = this.#createProgram(this.#vSource, this.#fSource);\n            }\n            catch (e) {\n                console.error(e);\n                return;\n            }\n            this.setAttributesAndUniforms(this.#vSource, this.#fSource);\n        });\n    }\n    setAttributesAndUniforms(vertexShaderSource, fragmentShaderSource) {\n        const attributeCount = this.#gl.getProgramParameter(this.#program, this.#gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; ++i) {\n            const info = this.#gl.getActiveAttrib(this.#program, i);\n            if (info) {\n                const key = info.name;\n                if (key in vertexShaderSource.inAttributes) {\n                    this.inAttributes[key] = {\n                        location: this.#gl.getAttribLocation(this.#program, info.name),\n                        type: vertexShaderSource.inAttributes[key].type,\n                    };\n                }\n            }\n        }\n        Object.keys(fragmentShaderSource.outAttributes).forEach((key) => {\n            const location = this.#gl.getFragDataLocation(this.#program, key);\n            this.outAttributes[key] = {\n                location,\n                type: fragmentShaderSource.outAttributes[key].type,\n            };\n        });\n        const uniformCount = this.#gl.getProgramParameter(this.#program, this.#gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; ++i) {\n            const info = this.#gl.getActiveUniform(this.#program, i);\n            if (info) {\n                const key = info.name;\n                if (key in vertexShaderSource.uniforms ||\n                    key in fragmentShaderSource.uniforms) {\n                    this.uniforms[info.name] = {\n                        location: this.#gl.getUniformLocation(this.#program, info.name),\n                        type: (vertexShaderSource.uniforms[key] ||\n                            fragmentShaderSource.uniforms[key]),\n                    };\n                }\n            }\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n            for (let key in vertexShaderSource.uniforms) {\n                if (!this.uniforms[key]) {\n                    console.warn(`Unused uniform ${key} in vertex shader ${vertexShaderSource.name}`);\n                }\n            }\n            for (let key in fragmentShaderSource.uniforms) {\n                if (!this.uniforms[key]) {\n                    console.warn(`Unused uniform ${key} in vertex shader ${vertexShaderSource.name}`);\n                }\n            }\n        }\n    }\n    #createProgram(vertexShaderSource, fragmentShaderSource) {\n        const program = this.#gl.createProgram();\n        const vertexShader = this.#gl.createShader(this.#gl.VERTEX_SHADER);\n        const vertexShaderSourceContent = getShaderState()?.cache?.get(vertexShaderSource.name) ||\n            vertexShaderSource.src;\n        this.#gl.shaderSource(vertexShader, vertexShaderSourceContent);\n        this.#gl.compileShader(vertexShader);\n        let output = \"\";\n        if (!this.#gl.getShaderParameter(vertexShader, this.#gl.COMPILE_STATUS)) {\n            let error = this.#gl.getShaderInfoLog(vertexShader);\n            if (error) {\n                if (process.env.NODE_ENV !== \"production\") {\n                    output += decorateError(`\\nVertex Shader: ${vertexShaderSource.name}`, vertexShaderSourceContent, error);\n                }\n                else {\n                    output += error + \"\\n\";\n                }\n            }\n        }\n        const fragmentShader = this.#gl.createShader(this.#gl.FRAGMENT_SHADER);\n        const fragmentShaderSourceContent = getShaderState()?.cache?.get(fragmentShaderSource.name) ||\n            fragmentShaderSource.src;\n        this.#gl.shaderSource(fragmentShader, fragmentShaderSourceContent);\n        this.#gl.compileShader(fragmentShader);\n        if (!this.#gl.getShaderParameter(fragmentShader, this.#gl.COMPILE_STATUS)) {\n            let error = this.#gl.getShaderInfoLog(fragmentShader);\n            if (error) {\n                if (process.env.NODE_ENV !== \"production\") {\n                    output += decorateError(`\\nFragment Shader: ${fragmentShaderSource.name}`, fragmentShaderSourceContent, error);\n                }\n                else {\n                    output += error + \"\\n\";\n                }\n            }\n        }\n        this.#gl.attachShader(program, vertexShader);\n        this.#gl.attachShader(program, fragmentShader);\n        if (output === \"\") {\n            this.#gl.linkProgram(program);\n            if (!this.#gl.getProgramParameter(program, this.#gl.LINK_STATUS)) {\n                const error = this.#gl.getProgramInfoLog(program);\n                if (error) {\n                    output += `\\nLinker: (${vertexShaderSource.name}, ${fragmentShaderSource.name}): ${error}`;\n                }\n            }\n        }\n        if (output !== \"\") {\n            throw new Error(`Shader compilation of [${vertexShaderSource.name}, ${fragmentShaderSource.name}] failed:\\n${output}`);\n        }\n        return program;\n    }\n    use(scope) {\n        this.#gl.useProgram(this.#program);\n        scope(this);\n        this.#gl.useProgram(null);\n    }\n    setUniforms(uniforms) {\n        let index = 0;\n        for (let u in uniforms) {\n            const value = uniforms[u];\n            const metadata = this.uniforms[u];\n            if (!metadata) {\n                // if a uniform isn't being used in the shader, it'll get\n                // optimized out, so there won't be any runtime metadata\n                // for it. we can safely ignore it.\n                continue;\n            }\n            else if (metadata.type === \"sampler2D\") {\n                // @ts-ignore\n                this.#gl.activeTexture(this.#gl[`TEXTURE${index}`]);\n                this.#gl.bindTexture(this.#gl.TEXTURE_2D, ((value && TEXTURE in value) ? value[TEXTURE] : value));\n                this.#gl.uniform1i(metadata.location, index++);\n            }\n            else if (metadata.type === \"float\") {\n                this.#gl.uniform1f(metadata.location, value);\n            }\n            else if (metadata.type === \"vec2\") {\n                this.#gl.uniform2fv(metadata.location, value);\n            }\n            else if (metadata.type === \"vec3\") {\n                this.#gl.uniform3fv(metadata.location, value);\n            }\n            else if (metadata.type === \"vec4\") {\n                this.#gl.uniform4fv(metadata.location, value);\n            }\n            else if (metadata.type === \"mat2\") {\n                this.#gl.uniformMatrix2fv(metadata.location, false, value);\n            }\n            else if (metadata.type === \"mat3\") {\n                this.#gl.uniformMatrix3fv(metadata.location, false, value);\n            }\n            else if (metadata.type === \"mat4\") {\n                this.#gl.uniformMatrix4fv(metadata.location, false, value);\n            }\n            else if (metadata.type === \"int\") {\n                this.#gl.uniform1i(metadata.location, value);\n            }\n        }\n        return this;\n    }\n}\nexport class InstanceBuffer {\n    #buffer;\n    #gl;\n    #instanceSize;\n    #instanceCount;\n    #attributeLayouts = [];\n    constructor(gl, program, attributes) {\n        this.#gl = gl;\n        this.#buffer = this.#gl.createBuffer();\n        this.#instanceCount = 0;\n        this.#instanceSize = 0;\n        this.#attributeLayouts = [];\n        for (let [attr, loader] of Object.entries(attributes)) {\n            const attributeType = program.inAttributes[attr].type;\n            if (attributeType === \"float\") {\n                this.#attributeLayouts.push({\n                    col: 1,\n                    row: 1,\n                    size: 1,\n                    name: attr,\n                    load: (b, o, i) => {\n                        b[o] = loader(i);\n                    },\n                });\n            }\n            else {\n                const partialLayout = {\n                    name: attr,\n                    load: (b, o, i) => b.set(loader(i), o),\n                };\n                switch (attributeType) {\n                    case \"vec2\":\n                        this.#attributeLayouts.push({\n                            col: 1,\n                            row: 2,\n                            size: 2,\n                            ...partialLayout,\n                        });\n                        break;\n                    case \"vec3\":\n                        this.#attributeLayouts.push({\n                            col: 1,\n                            row: 3,\n                            size: 3,\n                            ...partialLayout,\n                        });\n                        break;\n                    case \"vec4\":\n                        this.#attributeLayouts.push({\n                            col: 1,\n                            row: 4,\n                            size: 4,\n                            ...partialLayout,\n                        });\n                        break;\n                    case \"mat2\":\n                        this.#attributeLayouts.push({\n                            col: 2,\n                            row: 2,\n                            size: 4,\n                            ...partialLayout,\n                        });\n                        break;\n                    case \"mat3\":\n                        this.#attributeLayouts.push({\n                            col: 3,\n                            row: 3,\n                            size: 9,\n                            ...partialLayout,\n                        });\n                        break;\n                    case \"mat4\":\n                        this.#attributeLayouts.push({\n                            col: 4,\n                            row: 4,\n                            size: 16,\n                            ...partialLayout,\n                        });\n                        break;\n                    default:\n                        throw new Error(\"Unknown instance buffer attribute type\");\n                }\n            }\n            this.#instanceSize +=\n                this.#attributeLayouts[this.#attributeLayouts.length - 1].size;\n        }\n    }\n    load(instances) {\n        this.#instanceCount = instances.length;\n        const b = new Float32Array(instances.length * this.#instanceSize);\n        let offset = 0;\n        for (let i = 0; i < instances.length; ++i) {\n            for (let j = 0; j < this.#attributeLayouts.length; ++j) {\n                this.#attributeLayouts[j].load(b, offset, instances[i]);\n                offset += this.#attributeLayouts[j].size;\n            }\n        }\n        this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, this.#buffer);\n        this.#gl.bufferData(this.#gl.ARRAY_BUFFER, b, this.#gl.STREAM_DRAW);\n        this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, null);\n        return this;\n    }\n    getInstanceCount() {\n        return this.#instanceCount;\n    }\n    getAttributesHash(program) {\n        return this.#attributeLayouts\n            .map((a) => program.inAttributes[a.name].location)\n            .join(\"-\");\n    }\n    bind(program) {\n        this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, this.#buffer);\n        let offset = 0;\n        for (let i = 0; i < this.#attributeLayouts.length; ++i) {\n            const attrPtr = program.inAttributes[this.#attributeLayouts[i].name].location;\n            for (let col = 0; col < this.#attributeLayouts[i].col; ++col) {\n                this.#gl.enableVertexAttribArray(attrPtr + col);\n                this.#gl.vertexAttribPointer(attrPtr + col, this.#attributeLayouts[i].row, this.#gl.FLOAT, false, this.#instanceSize * 4, offset);\n                this.#gl.vertexAttribDivisor(attrPtr + col, 1);\n                offset += this.#attributeLayouts[i].row * 4;\n            }\n        }\n        return this;\n    }\n}\nexport class GBuffer {\n    #formats;\n    textures;\n    width;\n    height;\n    #gl;\n    constructor(gl, textures) {\n        this.#gl = gl;\n        this.#formats = textures;\n        this.textures = null;\n        this.width = 0;\n        this.height = 0;\n    }\n    use(opts, resizeScope) {\n        if (!this.textures ||\n            opts.width !== this.width ||\n            opts.height !== this.height) {\n            this.textures = Object.keys(this.#formats).reduce((t, key) => {\n                const format = this.#formats[key];\n                t[key] = {\n                    [TEXTURE]: createTexture(this.#gl, format.internalFormat, format.format, format.type, opts.width, opts.height, format.opts),\n                    width: opts.width,\n                    height: opts.height,\n                };\n                return t;\n            }, {});\n            this.height = opts.height;\n            this.width = opts.width;\n            resizeScope(this.textures);\n        }\n        return this.textures;\n    }\n}\nexport class FrameBuffer {\n    #gl;\n    #frameBuffer;\n    static #activeStack = [];\n    constructor(gl, program, attachments) {\n        this.#gl = gl;\n        this.#frameBuffer = this.#gl.createFramebuffer();\n        this.#gl.bindFramebuffer(this.#gl.FRAMEBUFFER, this.#frameBuffer);\n        const attachmentList = [];\n        Object.entries(attachments).forEach(([key, value]) => {\n            const location = program.outAttributes[key].location;\n            this.#gl.framebufferTexture2D(this.#gl.FRAMEBUFFER, \n            // @ts-ignore\n            this.#gl[`COLOR_ATTACHMENT${location}`], this.#gl.TEXTURE_2D, (value && TEXTURE in value) ? value[TEXTURE] : value, 0);\n            // @ts-ignore\n            attachmentList.push(this.#gl[`COLOR_ATTACHMENT${location}`]);\n        });\n        this.#gl.drawBuffers(attachmentList.sort((a, b) => a - b));\n        this.#gl.bindFramebuffer(this.#gl.FRAMEBUFFER, null);\n    }\n    bind(scope) {\n        FrameBuffer.#activeStack.push(this.#frameBuffer);\n        this.#gl.bindFramebuffer(this.#gl.FRAMEBUFFER, this.#frameBuffer);\n        scope();\n        FrameBuffer.#activeStack.pop();\n        if (FrameBuffer.#activeStack.length) {\n            this.#gl.bindFramebuffer(this.#gl.FRAMEBUFFER, FrameBuffer.#activeStack[FrameBuffer.#activeStack.length - 1]);\n        }\n        else {\n            this.#gl.bindFramebuffer(this.#gl.FRAMEBUFFER, null);\n        }\n    }\n}\nexport function createTexture(gl, internalFormat, format, type, width, height, opts) {\n    const texture = gl.createTexture();\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, opts?.wrap || gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, opts?.wrap || gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, opts?.filter || gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, opts?.filter || gl.LINEAR);\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, format, type, null);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return texture;\n}\nfunction decorateError(section, src, error) {\n    const lines = error.split(\"\\n\");\n    let output = \"\";\n    for (let line of lines) {\n        const match = line.match(/ERROR: (\\d+):(\\d+): (.*)/);\n        if (!match) {\n            line = line.trim();\n            if (line.length && line.codePointAt(0) !== 0) {\n                output += `${section} ${line}\\n`;\n            }\n        }\n        else {\n            const location = {\n                start: { line: parseInt(match[2], 10), column: parseInt(match[1], 10) },\n            };\n            output += codeFrameColumns(section, src, location, match[3]);\n        }\n    }\n    return output;\n}\nfunction codeFrameColumns(section, src, location, message) {\n    let output = `${section}\\n`;\n    const lines = src.split(\"\\n\");\n    const start = Math.max(location.start.line - 2, 0);\n    const end = Math.min(start + 6, lines.length);\n    const digits = String(end).length;\n    for (let i = start; i < end; ++i) {\n        const isCurrentLine = i === location.start.line - 1;\n        output += `${isCurrentLine ? \">\" : \" \"} ${(i + 1)\n            .toString()\n            .padEnd(digits, \" \")} | ${lines[i]}\\n`;\n        if (i === location.start.line - 1) {\n            let s = \"\";\n            for (let j = 0; j < location.start.column; ++j) {\n                s += \" \";\n            }\n            output += `  ${\"\".padEnd(digits, \" \")} | ${s}^ ${message}\\n`;\n        }\n    }\n    return output;\n}\n", "import { mat3, vec3, vec4 } from \"gl-matrix\";\nimport { TEXTURE } from \"./images.js\";\nexport const Tangent = vec3.set(vec3.create(), 0, 1, 0);\nexport const Normal = vec3.set(vec3.create(), 0, 0, 1);\nexport const Binormal = vec3.cross(vec3.create(), Tangent, Normal);\nexport const TBN = mat3.set(mat3.create(), Tangent[0], Binormal[0], Normal[0], Tangent[1], Binormal[1], Normal[1], Tangent[2], Binormal[2], Normal[2]);\nexport const ToTangentSpace = mat3.transpose(mat3.create(), TBN);\nfunction getSpriteState() {\n    return process.env.NODE_ENV === \"development\"\n        ? // @ts-ignore\n            window.__PIXELHEART_SPRITE_STATE__ ||\n                // @ts-ignore\n                (window.__PIXELHEART_SPRITE_STATE__ = new Map())\n        : null;\n}\nfunction registerSprite(spriteSheet, reload) {\n    const devSprites = getSpriteState();\n    if (devSprites) {\n        const sprite = devSprites.get(spriteSheet.name);\n        if (!sprite) {\n            devSprites.set(spriteSheet.name, {\n                config: spriteSheet,\n                reloaders: [reload],\n            });\n        }\n        else {\n            sprite.reloaders.push(reload);\n        }\n    }\n}\nexport function reloadSprite(spriteSheet) {\n    const devSprites = getSpriteState();\n    if (devSprites) {\n        const sprite = devSprites.get(spriteSheet.name);\n        if (sprite) {\n            // rebuild the sprite config but maintain the same object reference\n            Object.keys(sprite.config).forEach((k) => delete sprite.config[k]);\n            Object.assign(sprite.config, spriteSheet);\n            for (let reload of sprite.reloaders) {\n                reload(spriteSheet);\n            }\n        }\n    }\n}\nexport async function loadSpriteSheet(ctx, sheet, loader) {\n    const textures = await loader(ctx, sheet);\n    return loadSpriteSheetSync(ctx, sheet, textures);\n}\nexport function loadSpriteSheetSync(ctx, sheet, textures) {\n    const value = createSpriteFrames(sheet, textures);\n    registerSprite(sheet, (newSheet) => {\n        Object.keys(value).forEach((k) => delete value[k]);\n        Object.assign(value, createSpriteFrames(newSheet, textures));\n    });\n    return {\n        ...value,\n        [TEXTURE]: textures,\n    };\n}\nfunction createSpriteFrames(sheet, textures) {\n    return Object.keys(sheet.sprites).reduce((p, n) => {\n        const sprite = sheet.sprites[n];\n        const frames = sprite.frames.map((f) => vec4.fromValues(f.top, f.right, f.bottom, f.left));\n        p[n] = {\n            index: sprite.index,\n            width: sprite.width,\n            height: sprite.height,\n            frames,\n            draw: (effect, position, frame = 0) => {\n                effect.setTextures(textures);\n                effect.draw(position, frames[Math.floor(frame) % frames.length]);\n                return p[n];\n            },\n        };\n        return p;\n    }, {});\n}\nexport class SpriteAnimator {\n    #sheet;\n    #sprite;\n    #spriteName;\n    frameRate;\n    frame;\n    constructor(spriteSheet, sprite, frameRate) {\n        this.frameRate = frameRate;\n        this.frame = 0;\n        this.#sheet = spriteSheet;\n        this.#spriteName = sprite;\n        this.#sprite = spriteSheet[sprite];\n    }\n    tick(fixedDelta) {\n        this.frame += fixedDelta * this.frameRate;\n        if (this.frame > this.#sprite.frames.length) {\n            this.frame -= this.#sprite.frames.length;\n        }\n    }\n    getSprite() {\n        return this.#sprite;\n    }\n    getSpriteName() {\n        return this.#spriteName;\n    }\n    setSprite(sprite) {\n        const newSprite = this.#sheet[sprite];\n        if (newSprite !== this.#sprite) {\n            this.#sprite = newSprite;\n            this.#spriteName = sprite;\n            this.frame = 0;\n        }\n    }\n    setSpriteOrTick(sprite, fixedDelta) {\n        const newSprite = this.#sheet[sprite];\n        if (newSprite !== this.#sprite) {\n            this.#sprite = newSprite;\n            this.#spriteName = sprite;\n            this.frame = 0;\n        }\n        else {\n            this.tick(fixedDelta);\n        }\n    }\n    draw(effect, position, offset = 0) {\n        this.#sprite.draw(effect, position, this.frame + offset);\n    }\n}\n", "export {};\n", "import { vec2, vec4 } from \"gl-matrix\";\nexport const TILE_SIZE = 16;\nexport function toAbsoluteFromRelative(out, relative, screen) {\n    return vec2.add(out, relative, screen.absolutePosition);\n}\nexport function toRelativeFromAbsolute(out, absolute, screen) {\n    return vec2.subtract(out, absolute, screen.absolutePosition);\n}\nexport function toAbsoluteTileFromAbsolute(out, absolute) {\n    return vec4.set(out, Math.floor(absolute[0] / TILE_SIZE), Math.floor(absolute[1] / TILE_SIZE), Math.floor(absolute[0]) % TILE_SIZE, Math.floor(absolute[1]) % TILE_SIZE);\n}\nexport function pickAbsoluteTileFromRelative(out, relative, screen) {\n    const absolute = vec2.create();\n    toAbsoluteFromRelative(absolute, relative, screen);\n    return vec4.set(out, Math.floor(absolute[0] / TILE_SIZE), Math.floor(absolute[1] / TILE_SIZE), Math.floor(absolute[0]) % TILE_SIZE, Math.floor(absolute[1]) % TILE_SIZE);\n}\nexport function toScreenSpaceFromAbsoluteTile(out, absoluteTile, screen) {\n    toRelativeTileFromAbsoluteTile(out, absoluteTile, screen);\n    return screen.toScreenSpace(out, toRelativeFromRelativeTile(out, out));\n}\nexport function toRelativeTileFromAbsolute(out, absolute, screen) {\n    const relative = vec2.create();\n    toRelativeFromAbsolute(relative, absolute, screen);\n    return vec4.set(out, Math.floor(relative[0] / TILE_SIZE), Math.floor(relative[1] / TILE_SIZE), Math.floor(relative[0]) % TILE_SIZE, Math.floor(relative[1]) % TILE_SIZE);\n}\nexport function toRelativeTileFromAbsoluteTile(out, absoluteTile, screen) {\n    const ssp = toAbsoluteTileFromAbsolute(vec4.create(), screen.absolutePosition);\n    return vec4.set(out, absoluteTile[0] - ssp[0], absoluteTile[1] - ssp[1], ssp[2], ssp[3]);\n}\nexport function toRelativeTileFromRelative(out, relative, screen) {\n    const ssp = toAbsoluteTileFromAbsolute(vec4.create(), screen.absolutePosition);\n    pickAbsoluteTileFromRelative(out, relative, screen);\n    return vec4.set(out, out[0] - ssp[0], out[1] - ssp[1], ssp[2], ssp[3]);\n}\nexport function toRelativeFromRelativeTile(out, relativeTile, scale = 1) {\n    return vec4.set(out, relativeTile[1] * TILE_SIZE - relativeTile[3], relativeTile[0] * TILE_SIZE + TILE_SIZE * scale - relativeTile[2], relativeTile[1] * TILE_SIZE + TILE_SIZE * scale - relativeTile[3], relativeTile[0] * TILE_SIZE - relativeTile[2]);\n}\n", "import { vec2, vec4 } from \"gl-matrix\";\nimport * as coords from \"./coordinates.js\";\nimport { loadCPUReadableTextureFromUrl } from \"./images.js\";\nimport { loadSpriteSheet } from \"./sprite.js\";\nexport function decodeMapTile(buffer, index) {\n    return {\n        index: buffer[index],\n        triggerId: buffer[index + 1],\n        walkable: (buffer[index + 2] & 1) === 1,\n        spatialHash: (buffer[index + 2] & 2) === 2,\n        animated: (buffer[index + 2] & 4) === 4,\n    };\n}\nexport function encodeMapTile(buffer, index, value) {\n    buffer[index] = value.index;\n    buffer[index + 1] = value.triggerId;\n    buffer[index + 2] =\n        (value.walkable ? 1 : 0) |\n            (value.spatialHash ? 2 : 0) |\n            (value.animated ? 4 : 0);\n}\nexport async function loadMapContainer(ctx, tileSize, map, loader) {\n    const [sprite, m] = await Promise.all([\n        loadSpriteSheet(ctx, map.spriteSheet, loader),\n        loadCPUReadableTextureFromUrl(ctx, map.url),\n    ]);\n    return {\n        data: new MapData(ctx, tileSize, m),\n        name: map.name,\n        sprite,\n        spriteConfig: map.spriteSheet,\n    };\n}\nexport class MapData {\n    buffer;\n    width;\n    height;\n    tileSize;\n    bufferPosition;\n    lastScreenPosition;\n    lastScreenWidth;\n    lastScreenHeight;\n    offscreen;\n    constructor(ctx, tileSize, map) {\n        this.offscreen = new OffscreenCanvas(map.width, map.height).getContext(\"2d\", {\n            willReadFrequently: true,\n        });\n        this.offscreen.drawImage(map.image, 0, 0, map.width, map.height);\n        this.width = map.width;\n        this.height = map.height;\n        this.tileSize = tileSize;\n        this.buffer = new ImageData(ctx.screen.width / tileSize + 3, ctx.screen.height / tileSize + 3);\n        this.bufferPosition = vec4.create();\n        this.lastScreenPosition = vec2.create();\n        this.lastScreenWidth = 0;\n        this.lastScreenHeight = 0;\n    }\n    updateScreenBuffer(ctx, screenAbsolutePosition) {\n        if (this.lastScreenWidth !== ctx.screen.width ||\n            this.lastScreenHeight !== ctx.screen.height ||\n            this.lastScreenPosition[0] !== screenAbsolutePosition[0] ||\n            this.lastScreenPosition[1] !== screenAbsolutePosition[1]) {\n            const ssp = coords.toAbsoluteTileFromAbsolute(vec4.create(), screenAbsolutePosition);\n            this.bufferPosition = vec4.fromValues(ssp[0] - 1, ssp[1] - 1, ctx.screen.width / this.tileSize + 3, ctx.screen.height / this.tileSize + 3);\n            // read in all the onscreen tiles\n            this.buffer = this.offscreen.getImageData(this.bufferPosition[0], this.bufferPosition[1], this.bufferPosition[2], this.bufferPosition[3]);\n            this.lastScreenPosition = vec2.clone(screenAbsolutePosition);\n            this.lastScreenWidth = ctx.screen.width;\n            this.lastScreenHeight = ctx.screen.height;\n        }\n    }\n    read(x, y) {\n        if (x >= this.bufferPosition[0] &&\n            x < this.bufferPosition[0] + this.bufferPosition[2] &&\n            y >= this.bufferPosition[1] &&\n            y < this.bufferPosition[1] + this.bufferPosition[3]) {\n            // reading inside the visible screen buffer, fast case\n            x -= this.bufferPosition[0];\n            y -= this.bufferPosition[1];\n            const index = 4 * (this.buffer.width * y + x);\n            return decodeMapTile(this.buffer.data, index);\n        }\n        else {\n            // reading outside of the visible screen, slower, but less common\n            const buff = this.offscreen.getImageData(x, y, 1, 1);\n            return decodeMapTile(buff.data, 0);\n        }\n    }\n    write(x, y, value) {\n        if (x >= this.bufferPosition[0] &&\n            x < this.bufferPosition[0] + this.bufferPosition[2] &&\n            y >= this.bufferPosition[1] &&\n            y < this.bufferPosition[1] + this.bufferPosition[3]) {\n            x -= this.bufferPosition[0];\n            y -= this.bufferPosition[1];\n            const index = 4 * (this.buffer.width * y + x);\n            encodeMapTile(this.buffer.data, index, value);\n            this.offscreen.putImageData(this.buffer, this.bufferPosition[0], this.bufferPosition[1]);\n        }\n        else {\n            const buff = new ImageData(1, 1);\n            encodeMapTile(buff.data, 0, value);\n            this.offscreen.putImageData(buff, x, y);\n        }\n    }\n}\n", "export function smoothstep(edge0, edge1, x) {\n    x = Math.max(0, Math.min(1, (x - edge0) / (edge1 - edge0)));\n    return x * x * (3 - 2 * x);\n}\nexport function hash(x, y) {\n    const A = 48271;\n    const M = 2147483647;\n    const Q = M / A;\n    const R = M % A;\n    let temp = A * (x % Q) - R * Math.floor(x / Q);\n    if (temp >= 0)\n        x = temp;\n    else\n        x = temp + M;\n    temp = A * (y % Q) - R * Math.floor(y / Q);\n    if (temp >= 0)\n        y = temp;\n    else\n        y = temp + M;\n    return x ^ y;\n}\n", "export class ResourceLoader {\n    #values;\n    #promise;\n    ready;\n    constructor(resources) {\n        this.#values = {};\n        this.ready = false;\n        const keys = Object.keys(resources);\n        this.#promise = Promise.all(keys.map((key) => resources[key])).then((values) => {\n            keys.reduce((obj, key, index) => {\n                obj[key] = values[index];\n                return obj;\n            }, this.#values);\n            this.ready = true;\n            return this.#values;\n        });\n    }\n    ifReady(callback) {\n        if (this.ready) {\n            callback(this.#values);\n        }\n        return this.ready;\n    }\n    whenReady() {\n        return this.#promise;\n    }\n}\n", "export * from \"./game.js\";\nexport * from \"./editor.js\";\nexport * from \"./map.js\";\nexport * from \"./sprite.js\";\nexport * from \"./geometry.js\";\nexport * from \"./gl-utils.js\";\nexport * from \"./images.js\";\nexport * as coords from \"./coordinates.js\";\nexport * as math from \"./math.js\";\nexport * from \"./resource-loader.js\";\n", "export * from \"gl-matrix\";\n", "export var Constants;\n(function (Constants) {\n    Constants[Constants[\"LIGHTING_MODE_DIRECTIONAL\"] = 0] = \"LIGHTING_MODE_DIRECTIONAL\";\n    Constants[Constants[\"LIGHTING_MODE_POINT\"] = 1] = \"LIGHTING_MODE_POINT\";\n})(Constants || (Constants = {}));\nconst value = {\n    src: `#version 300 es\nprecision mediump float;in vec2 v_texCoord;in vec3 v_ambient;in vec3 v_diffuse;in vec3 v_direction;in float v_radius;uniform vec3 u_viewDirection;uniform int u_lightingMode;uniform sampler2D u_albedoTexture;uniform sampler2D u_normalTexture;uniform sampler2D u_specularTexture;uniform mat3 u_toTangentSpace;const int A=0;const int B=1;const float C=2.;const float D=32.;layout(location=0)out vec4 o_lighting;void main(){vec3 E=normalize(texture(u_normalTexture,v_texCoord).rgb*2.-1.);vec3 F=texture(u_albedoTexture,v_texCoord).rgb;vec3 G=texture(u_specularTexture,v_texCoord).rgb;vec3 H=v_ambient*F;vec3 I=u_lightingMode==A?v_direction:vec3(v_texCoord,0.)-v_direction;I.y*=u_lightingMode==A?1.:-1.;float J=u_lightingMode==A?1.:pow(1.-min(v_radius,length(I))/v_radius,C);vec3 K=normalize(I*-1.)*u_toTangentSpace;float L=max(dot(E,K),0.);vec3 M=F*v_diffuse*L*J;vec3 N=normalize(K+(u_viewDirection*-1.*u_toTangentSpace));float O=max(dot(E,N),0.);float P=pow(O,D);vec3 Q=v_diffuse*P*G*J;o_lighting=vec4(H+M+Q,1.);}`,\n    name: \"deferred-lighting.frag\",\n    inAttributes: {},\n    outAttributes: {\n        o_lighting: { type: \"vec4\", location: 0 }\n    },\n    uniforms: {\n        u_viewDirection: \"vec3\",\n        u_lightingMode: \"int\",\n        u_albedoTexture: \"sampler2D\",\n        u_normalTexture: \"sampler2D\",\n        u_specularTexture: \"sampler2D\",\n        u_toTangentSpace: \"mat3\"\n    },\n};\nexport default value;\n", "export var Constants;\n(function (Constants) {\n})(Constants || (Constants = {}));\nconst value = {\n    src: `#version 300 es\nin vec2 a_position;in mat3 a_mvp;in mat3 a_uv;in vec3 a_ambient;in vec3 a_diffuse;in vec3 a_direction;in float a_radius;out vec3 v_ambient;out vec3 v_diffuse;out vec3 v_direction;out float v_radius;out vec2 v_texCoord;void main(){vec3 A=a_uv*vec3(a_position,1.);v_texCoord=A.xy;v_ambient=a_ambient;v_diffuse=a_diffuse;v_direction=a_direction;v_radius=a_radius;vec3 B=a_mvp*vec3(a_position,1.);gl_Position=vec4(B.xy,0.,1.);}`,\n    name: \"deferred-lighting.vert\",\n    inAttributes: {\n        a_position: { type: \"vec2\" },\n        a_mvp: { type: \"mat3\" },\n        a_uv: { type: \"mat3\" },\n        a_ambient: { type: \"vec3\" },\n        a_diffuse: { type: \"vec3\" },\n        a_direction: { type: \"vec3\" },\n        a_radius: { type: \"float\" }\n    },\n    outAttributes: {},\n    uniforms: {},\n};\nexport default value;\n", "export var Constants;\n(function (Constants) {\n})(Constants || (Constants = {}));\nconst value = {\n    src: `#version 300 es\nprecision mediump float;in vec2 v_texCoord;uniform sampler2D u_diffuseTexture;uniform sampler2D u_normalTexture;uniform sampler2D u_specularTexture;uniform sampler2D u_emissiveTexture;layout(location=0)out vec4 o_normal;layout(location=1)out vec4 o_albedo;layout(location=2)out vec4 o_specular;layout(location=3)out vec4 o_lighting;layout(location=4)out vec4 o_mask;void main(){vec4 A=texture(u_diffuseTexture,v_texCoord);vec3 B=texture(u_normalTexture,v_texCoord).xyz;float C=texture(u_specularTexture,v_texCoord).x;vec3 D=texture(u_emissiveTexture,v_texCoord).xyz;float E=A.w<0.99?0.:1.;o_albedo=vec4(A.xyz*E,E);o_mask=o_albedo;o_normal=vec4(B,E);o_specular=vec4(C,C,C,E);o_lighting=vec4(D,E);}`,\n    name: \"deferred-sprite.frag\",\n    inAttributes: {},\n    outAttributes: {\n        o_normal: { type: \"vec4\", location: 0 },\n        o_albedo: { type: \"vec4\", location: 1 },\n        o_specular: { type: \"vec4\", location: 2 },\n        o_lighting: { type: \"vec4\", location: 3 },\n        o_mask: { type: \"vec4\", location: 4 }\n    },\n    uniforms: {\n        u_diffuseTexture: \"sampler2D\",\n        u_normalTexture: \"sampler2D\",\n        u_specularTexture: \"sampler2D\",\n        u_emissiveTexture: \"sampler2D\"\n    },\n};\nexport default value;\n", "export var Constants;\n(function (Constants) {\n})(Constants || (Constants = {}));\nconst value = {\n    src: `#version 300 es\nin vec2 a_position;in mat3 a_uv;in mat3 a_mvp;out vec2 v_texCoord;void main(){vec3 A=a_uv*vec3(a_position,1.);vec3 B=a_mvp*vec3(a_position,1.);v_texCoord=A.xy;gl_Position=vec4(B.xy,0.,1.);}`,\n    name: \"deferred-sprite.vert\",\n    inAttributes: {\n        a_position: { type: \"vec2\" },\n        a_uv: { type: \"mat3\" },\n        a_mvp: { type: \"mat3\" }\n    },\n    outAttributes: {},\n    uniforms: {},\n};\nexport default value;\n", "import { Quad, SpriteViewProjection, FrameBuffer, GBuffer, InstanceBuffer, ShaderProgram, TEXTURE, loadTextureFromUrl, SpriteAnimator, ToTangentSpace, } from \"@pixelheart/client\";\nimport { vec3, mat3 } from \"@pixelheart/client/gl-matrix\";\nimport lightingFragmentShader, { Constants as LightingConstants, } from \"./shaders/deferred-lighting.frag.js\";\nimport lightingVertexShader from \"./shaders/deferred-lighting.vert.js\";\nimport fragmentShader from \"./shaders/deferred-sprite.frag.js\";\nimport vertexShader from \"./shaders/deferred-sprite.vert.js\";\nexport class DeferredSpriteAnimator extends SpriteAnimator {\n}\nconst BLACK = vec3.fromValues(0, 0, 0);\nconst FULL_UV = mat3.create();\nexport async function deferredTextureLoader(ctx, sheet) {\n    const [diffuseTexture, normalTexture, specularTexture, emissiveTexture] = await Promise.all([\n        loadTextureFromUrl(ctx, sheet.urls.diffuse),\n        loadTextureFromUrl(ctx, sheet.urls.normal),\n        loadTextureFromUrl(ctx, sheet.urls.specular),\n        loadTextureFromUrl(ctx, sheet.urls.emissive),\n    ]);\n    return {\n        diffuseTexture,\n        normalTexture,\n        specularTexture,\n        emissiveTexture,\n    };\n}\nexport class DeferredSpriteEffect {\n    #gl;\n    #gBufferProgram;\n    #instanceBuffer;\n    #pending;\n    #lightingProgram;\n    #lightBuffer;\n    #pendingDirectionalLights;\n    #pendingPointLights;\n    #texture;\n    #quad;\n    #gBuffer;\n    #frameBuffers;\n    constructor(ctx) {\n        this.#gl = ctx.gl;\n        this.#gBufferProgram = new ShaderProgram(ctx.gl, vertexShader, fragmentShader);\n        this.#instanceBuffer = new InstanceBuffer(this.#gl, this.#gBufferProgram, {\n            a_mvp: (instance) => instance.mvp,\n            a_uv: (instance) => instance.uv,\n        });\n        this.#pending = [];\n        this.#lightingProgram = new ShaderProgram(ctx.gl, lightingVertexShader, lightingFragmentShader);\n        this.#lightBuffer = new InstanceBuffer(this.#gl, this.#lightingProgram, {\n            a_mvp: (instance) => instance.mvp,\n            a_uv: (instance) => instance.uv,\n            a_ambient: (instance) => instance.ambient,\n            a_diffuse: (instance) => instance.diffuse,\n            a_direction: (instance) => instance.direction,\n            a_radius: (instance) => instance.radius,\n        });\n        this.#pendingDirectionalLights = [];\n        this.#pendingPointLights = [];\n        this.#quad = new Quad(this.#gl);\n        this.#texture = null;\n        this.#frameBuffers = null;\n        this.#gBuffer = new GBuffer(this.#gl, {\n            normal: {\n                internalFormat: this.#gl.RGBA,\n                format: this.#gl.RGBA,\n                type: this.#gl.UNSIGNED_BYTE,\n            },\n            albedo: {\n                internalFormat: this.#gl.RGBA,\n                format: this.#gl.RGBA,\n                type: this.#gl.UNSIGNED_BYTE,\n            },\n            specular: {\n                internalFormat: this.#gl.RGBA,\n                format: this.#gl.RGBA,\n                type: this.#gl.UNSIGNED_BYTE,\n            },\n            lighting: {\n                internalFormat: this.#gl.RGBA,\n                format: this.#gl.RGBA,\n                type: this.#gl.UNSIGNED_BYTE,\n            },\n            mask: {\n                internalFormat: this.#gl.RGBA,\n                format: this.#gl.RGBA,\n                type: this.#gl.UNSIGNED_BYTE,\n            },\n        });\n    }\n    use(opts, fillScope, maskScope) {\n        const g = this.#gBuffer.use(opts, (gBuffer) => {\n            this.#frameBuffers = {\n                maskFrameBuffer: new FrameBuffer(this.#gl, this.#gBufferProgram, {\n                    o_normal: gBuffer.normal,\n                    o_albedo: gBuffer.albedo,\n                    o_specular: gBuffer.specular,\n                    o_lighting: gBuffer.lighting,\n                    o_mask: maskScope ? gBuffer.mask : null,\n                }),\n                noMaskFrameBuffer: new FrameBuffer(this.#gl, this.#gBufferProgram, {\n                    o_normal: gBuffer.normal,\n                    o_albedo: gBuffer.albedo,\n                    o_specular: gBuffer.specular,\n                    o_lighting: gBuffer.lighting,\n                    o_mask: null,\n                }),\n                lightingFrameBuffer: new FrameBuffer(this.#gl, this.#lightingProgram, {\n                    o_lighting: gBuffer.lighting,\n                }),\n            };\n        });\n        const f = this.#frameBuffers;\n        const vp = this.#gl.getParameter(this.#gl.VIEWPORT);\n        this.#gl.viewport(0, 0, this.#gBuffer.width, this.#gBuffer.height);\n        // render the base sprite layer\n        f.maskFrameBuffer.bind(() => {\n            this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n            this.#gBufferProgram.use(() => {\n                // only the base layer textures contribute to the mask\n                fillScope(this, 0);\n                this.#end();\n            });\n        });\n        if (maskScope) {\n            // finally, render the mask overlay & top layer of sprites\n            f.noMaskFrameBuffer.bind(() => {\n                maskScope(g.mask);\n                this.#gBufferProgram.use(() => {\n                    fillScope(this, 1);\n                    this.#end();\n                });\n            });\n        }\n        f.lightingFrameBuffer.bind(() => {\n            const previousBlend = this.#gl.getParameter(this.#gl.BLEND);\n            const previousBlendSrcFunc = this.#gl.getParameter(this.#gl.BLEND_SRC_ALPHA);\n            const previousBlendDestFunc = this.#gl.getParameter(this.#gl.BLEND_DST_ALPHA);\n            this.#gl.enable(this.#gl.BLEND);\n            this.#gl.blendFunc(this.#gl.ONE, this.#gl.ONE);\n            this.#lightingProgram.use((p) => {\n                p.setUniforms({\n                    u_albedoTexture: g.albedo,\n                    u_normalTexture: g.normal,\n                    u_specularTexture: g.specular,\n                    u_toTangentSpace: ToTangentSpace,\n                    u_viewDirection: vec3.fromValues(0, 0, -1),\n                });\n                if (this.#pendingDirectionalLights.length) {\n                    p.setUniforms({\n                        u_lightingMode: LightingConstants.LIGHTING_MODE_DIRECTIONAL,\n                    });\n                    this.#quad.bindInstances(p, { position: \"a_position\" }, this.#lightBuffer.load(this.#pendingDirectionalLights), (q) => q.draw());\n                    this.#pendingDirectionalLights.length = 0;\n                }\n                if (this.#pendingPointLights.length) {\n                    p.setUniforms({\n                        u_lightingMode: LightingConstants.LIGHTING_MODE_POINT,\n                    });\n                    this.#quad.bindInstances(p, { position: \"a_position\" }, this.#lightBuffer.load(this.#pendingPointLights), (q) => q.draw());\n                    this.#pendingPointLights.length = 0;\n                }\n            });\n            if (!previousBlend) {\n                this.#gl.disable(this.#gl.BLEND);\n            }\n            this.#gl.blendFunc(previousBlendSrcFunc, previousBlendDestFunc);\n        });\n        this.#gl.viewport(vp[0], vp[1], vp[2], vp[3]);\n    }\n    addDirectionalLight(light) {\n        this.#pendingDirectionalLights.push({\n            mvp: SpriteViewProjection,\n            uv: FULL_UV,\n            ambient: light.ambient,\n            diffuse: light.diffuse,\n            direction: light.direction,\n            radius: 0,\n        });\n        return this;\n    }\n    addPointLight(light) {\n        if (light.position[2] >= light.radius) {\n            // doesn't intersect the ground plane, so disregard the light\n            return this;\n        }\n        const intersectingRadius = Math.sqrt(light.radius * light.radius - light.position[2] * light.position[2]);\n        const mvp = mat3.create();\n        mat3.translate(mvp, mvp, [\n            light.position[0] - intersectingRadius,\n            light.position[1] - intersectingRadius,\n        ]);\n        mat3.scale(mvp, mvp, [intersectingRadius * 2, intersectingRadius * 2]);\n        mat3.mul(mvp, SpriteViewProjection, mvp);\n        const uv = mat3.create();\n        mat3.translate(uv, uv, [\n            light.position[0] - intersectingRadius,\n            light.position[1] - intersectingRadius,\n        ]);\n        mat3.scale(uv, uv, [intersectingRadius * 2, intersectingRadius * 2]);\n        this.#pendingPointLights.push({\n            mvp,\n            uv,\n            ambient: BLACK,\n            diffuse: light.diffuse,\n            direction: vec3.fromValues(light.position[0], light.position[1], light.position[2]),\n            radius: light.radius,\n        });\n        return this;\n    }\n    getLightingTexture() {\n        return this.#gBuffer.textures?.lighting;\n    }\n    setTextures(param) {\n        if (param === this.#texture) {\n            return this;\n        }\n        else if (this.#pending.length) {\n            this.#end();\n        }\n        this.#texture = param;\n        this.#gBufferProgram.setUniforms({\n            u_diffuseTexture: param.diffuseTexture[TEXTURE],\n            u_normalTexture: param.normalTexture[TEXTURE],\n            u_specularTexture: param.specularTexture[TEXTURE],\n            u_emissiveTexture: param.emissiveTexture[TEXTURE],\n        });\n        return this;\n    }\n    draw(screenSpaceRect, textureCoords) {\n        if (this.#texture) {\n            const mvp = mat3.create();\n            mat3.translate(mvp, mvp, [screenSpaceRect[3], screenSpaceRect[0]]);\n            mat3.scale(mvp, mvp, [\n                screenSpaceRect[1] - screenSpaceRect[3],\n                screenSpaceRect[2] - screenSpaceRect[0],\n            ]);\n            mat3.multiply(mvp, SpriteViewProjection, mvp);\n            const uv = mat3.create();\n            mat3.translate(uv, uv, [\n                textureCoords[3] / this.#texture.diffuseTexture.width,\n                textureCoords[0] / this.#texture.diffuseTexture.height,\n            ]);\n            mat3.scale(uv, uv, [\n                (textureCoords[1] - textureCoords[3]) /\n                    this.#texture.diffuseTexture.width,\n                (textureCoords[2] - textureCoords[0]) /\n                    this.#texture.diffuseTexture.height,\n            ]);\n            this.#pending.push({ mvp, uv });\n        }\n        return this;\n    }\n    #end() {\n        if (!this.#pending.length) {\n            return;\n        }\n        this.#quad.bindInstances(this.#gBufferProgram, { position: \"a_position\" }, this.#instanceBuffer.load(this.#pending), (q) => q.draw());\n        this.#pending.length = 0;\n        this.#texture = null;\n    }\n}\n", "export var Constants;\n(function (Constants) {\n})(Constants || (Constants = {}));\nconst value = {\n    src: `#version 300 es\nprecision mediump float;in vec2 v_texCoord;in float v_alpha;uniform sampler2D u_texture;out vec4 outColor;void main(){outColor=texture(u_texture,v_texCoord);outColor.a*=v_alpha;}`,\n    name: \"sprite.frag\",\n    inAttributes: {},\n    outAttributes: {\n        outColor: { type: \"vec4\" }\n    },\n    uniforms: {\n        u_texture: \"sampler2D\"\n    },\n};\nexport default value;\n", "export var Constants;\n(function (Constants) {\n})(Constants || (Constants = {}));\nconst value = {\n    src: `#version 300 es\nin vec2 a_position;in mat3 a_uv;in mat3 a_mvp;in float a_alpha;out vec2 v_texCoord;out float v_alpha;void main(){vec3 A=a_uv*vec3(a_position,1.);vec3 B=a_mvp*vec3(a_position,1.);v_alpha=a_alpha;v_texCoord=A.xy;gl_Position=vec4(B.xy,0.,1.);}`,\n    name: \"sprite.vert\",\n    inAttributes: {\n        a_position: { type: \"vec2\" },\n        a_uv: { type: \"mat3\" },\n        a_mvp: { type: \"mat3\" },\n        a_alpha: { type: \"float\" }\n    },\n    outAttributes: {},\n    uniforms: {},\n};\nexport default value;\n", "import { InstanceBuffer, Quad, ShaderProgram, SpriteAnimator, SpriteViewProjection, loadTextureFromUrl, } from \"@pixelheart/client\";\nimport { mat3 } from \"@pixelheart/client/gl-matrix\";\nimport fragmentShader from \"./shaders/sprite.frag.js\";\nimport vertexShader from \"./shaders/sprite.vert.js\";\nexport class SimpleSpriteAnimator extends SpriteAnimator {\n}\nexport async function simpleTextureLoader(ctx, sheet) {\n    return await loadTextureFromUrl(ctx, sheet.urls.diffuse);\n}\nexport class SimpleSpriteEffect {\n    #gl;\n    #program;\n    #instanceBuffer;\n    #quad;\n    #texture;\n    #pending;\n    #alpha;\n    constructor(ctx) {\n        this.#gl = ctx.gl;\n        this.#program = new ShaderProgram(ctx.gl, vertexShader, fragmentShader);\n        this.#instanceBuffer = new InstanceBuffer(this.#gl, this.#program, {\n            a_mvp: (instance) => instance.mvp,\n            a_uv: (instance) => instance.uv,\n            a_alpha: (instance) => instance.alpha,\n        });\n        this.#quad = new Quad(this.#gl);\n        this.#pending = [];\n        this.#texture = null;\n        this.#alpha = 1.0;\n    }\n    use(scope) {\n        this.#program.use(() => {\n            this.#alpha = 1.0;\n            scope(this);\n            this.#end();\n        });\n    }\n    setTextures(param) {\n        if (param === this.#texture) {\n            return this;\n        }\n        else if (this.#pending.length) {\n            this.#end();\n        }\n        this.#texture = param;\n        this.#program.setUniforms({\n            u_texture: param,\n        });\n        return this;\n    }\n    setAlpha(alpha) {\n        this.#alpha = alpha;\n        return this;\n    }\n    draw(rect, textureCoords) {\n        if (this.#texture) {\n            const mvp = mat3.create();\n            mat3.translate(mvp, mvp, [rect[3], rect[0]]);\n            mat3.scale(mvp, mvp, [rect[1] - rect[3], rect[2] - rect[0]]);\n            mat3.multiply(mvp, SpriteViewProjection, mvp);\n            const uv = mat3.create();\n            mat3.translate(uv, uv, [\n                textureCoords[3] / this.#texture.width,\n                textureCoords[0] / this.#texture.height,\n            ]);\n            mat3.scale(uv, uv, [\n                (textureCoords[1] - textureCoords[3]) / this.#texture.width,\n                (textureCoords[2] - textureCoords[0]) / this.#texture.height,\n            ]);\n            this.#pending.push({ mvp, uv, alpha: this.#alpha });\n        }\n        return this;\n    }\n    #end() {\n        this.#quad.bindInstances(this.#program, { position: \"a_position\" }, this.#instanceBuffer.load(this.#pending), (q) => {\n            q.draw();\n        });\n        this.#pending = [];\n        this.#texture = null;\n    }\n}\n", "export var Constants;\n(function (Constants) {\n})(Constants || (Constants = {}));\nconst value = {\n    src: `#version 300 es\nprecision mediump float;uniform vec2 u_border;in vec2 v_localPosition;in vec4 v_bounds;in vec4 v_fillColor;in vec4 v_borderColor;out vec4 outColor;void main(){vec2 A=v_localPosition;if(A.x<v_bounds.w+u_border.x||A.y<v_bounds.x+u_border.y||A.x>v_bounds.y-u_border.x||A.y>v_bounds.z-u_border.y){outColor=v_borderColor;}else{outColor=v_fillColor;}}`,\n    name: \"solid.frag\",\n    inAttributes: {},\n    outAttributes: {\n        outColor: { type: \"vec4\" }\n    },\n    uniforms: {\n        u_border: \"vec2\"\n    },\n};\nexport default value;\n", "export var Constants;\n(function (Constants) {\n})(Constants || (Constants = {}));\nconst value = {\n    src: `#version 300 es\nuniform mat3 u_vp;in vec2 a_position;in vec4 a_fillColor;in vec4 a_borderColor;in mat3 a_m;in vec4 a_bounds;out vec2 v_localPosition;out vec4 v_bounds;out vec4 v_fillColor;out vec4 v_borderColor;void main(){vec3 A=a_m*vec3(a_position,1.);vec3 B=u_vp*A;v_localPosition=A.xy;v_bounds=a_bounds;v_fillColor=a_fillColor;v_borderColor=a_borderColor;gl_Position=vec4(B.xy,0.,1.);}`,\n    name: \"solid.vert\",\n    inAttributes: {\n        a_position: { type: \"vec2\" },\n        a_fillColor: { type: \"vec4\" },\n        a_borderColor: { type: \"vec4\" },\n        a_m: { type: \"mat3\" },\n        a_bounds: { type: \"vec4\" }\n    },\n    outAttributes: {},\n    uniforms: {\n        u_vp: \"mat3\"\n    },\n};\nexport default value;\n", "import { Quad, SpriteViewProjection, InstanceBuffer, ShaderProgram, } from \"@pixelheart/client\";\nimport { vec2, mat3, vec4 } from \"@pixelheart/client/gl-matrix\";\nimport fragmentShader from \"./shaders/solid.frag.js\";\nimport vertexShader from \"./shaders/solid.vert.js\";\nexport class SolidEffect {\n    #gl;\n    #program;\n    #instanceBuffer;\n    #quad;\n    #pending;\n    constructor(ctx) {\n        this.#gl = ctx.gl;\n        this.#program = new ShaderProgram(ctx.gl, vertexShader, fragmentShader);\n        this.#instanceBuffer = new InstanceBuffer(this.#gl, this.#program, {\n            a_m: (instance) => instance.m,\n            a_bounds: (instance) => instance.bounds,\n            a_fillColor: (instance) => instance.fillColor,\n            a_borderColor: (instance) => instance.borderColor,\n        });\n        this.#quad = new Quad(this.#gl);\n        this.#pending = [];\n    }\n    use(scope) {\n        this.#program.use(() => {\n            this.#program.setUniforms({\n                u_border: vec2.fromValues(0, 0),\n                u_vp: SpriteViewProjection,\n            });\n            scope(this);\n            this.#end();\n        });\n    }\n    setBorder(screen, width) {\n        this.#program.setUniforms({\n            u_border: vec2.fromValues(width / screen.width, width / screen.height),\n        });\n    }\n    draw(bounds, fillColor, borderColor) {\n        const m = mat3.create();\n        mat3.translate(m, m, [bounds[3], bounds[0]]);\n        mat3.scale(m, m, [bounds[1] - bounds[3], bounds[2] - bounds[0]]);\n        this.#pending.push({ m, bounds: vec4.clone(bounds), fillColor, borderColor: borderColor || fillColor });\n        return this;\n    }\n    #end() {\n        this.#quad.bindInstances(this.#program, { position: \"a_position\" }, this.#instanceBuffer.load(this.#pending), (q) => q.draw());\n        this.#pending = [];\n    }\n}\n", "export var Constants;\n(function (Constants) {\n    Constants[Constants[\"KERNEL_SIZE\"] = 9] = \"KERNEL_SIZE\";\n})(Constants || (Constants = {}));\nconst value = {\n    src: `#version 300 es\nprecision mediump float;uniform sampler2D u_blur;uniform vec2 u_blurSize;uniform vec2 u_blurDirection;uniform float u_blurStrength;in vec2 v_texCoord;out vec4 o_color;\n#define A  9\nconst float B[A]=float[](0.0625,0.0625,0.125,0.125,0.25,0.125,0.125,0.0625,0.0625);const int C=A/2;void main(){vec4 D=texture(u_blur,v_texCoord);vec4 E=vec4(0.);for(int F=0;F<A;++F){vec2 G=v_texCoord+((vec2(F-C,F-C)*u_blurDirection*u_blurStrength)/u_blurSize);vec4 H=texture(u_blur,G);E+=H*B[F];}o_color=E;}`,\n    name: \"gaussian-blur.frag\",\n    inAttributes: {},\n    outAttributes: {\n        o_color: { type: \"vec4\" }\n    },\n    uniforms: {\n        u_blur: \"sampler2D\",\n        u_blurSize: \"vec2\",\n        u_blurDirection: \"vec2\",\n        u_blurStrength: \"float\"\n    },\n};\nexport default value;\n", "export var Constants;\n(function (Constants) {\n})(Constants || (Constants = {}));\nconst value = {\n    src: `#version 300 es\nin vec2 a_position;out vec2 v_texCoord;void main(){v_texCoord=a_position;gl_Position=vec4(a_position*2.-1.,0.,1.);}`,\n    name: \"quad.vert\",\n    inAttributes: {\n        a_position: { type: \"vec2\" }\n    },\n    outAttributes: {},\n    uniforms: {},\n};\nexport default value;\n", "import { FrameBuffer, Quad, ShaderProgram, TEXTURE, createTexture, } from \"@pixelheart/client\";\nimport fragmentShader from \"./shaders/gaussian-blur.frag.js\";\nimport vertexShader from \"./shaders/quad.vert.js\";\nexport class GaussianBlurEffect {\n    #gl;\n    #program;\n    #quad;\n    #blurBuffer;\n    constructor(ctx) {\n        this.#gl = ctx.gl;\n        this.#program = new ShaderProgram(ctx.gl, vertexShader, fragmentShader);\n        this.#quad = new Quad(this.#gl);\n        this.#blurBuffer = null;\n    }\n    draw(input, blurStrength, scale = 1.0) {\n        if (!this.#blurBuffer ||\n            this.#blurBuffer.textures[0].width !== input.width * scale ||\n            this.#blurBuffer.textures[0].height !== input.height * scale) {\n            const textures = [];\n            for (let i = 0; i < 2; i++) {\n                textures.push({\n                    [TEXTURE]: createTexture(this.#gl, this.#gl.RGBA, this.#gl.RGBA, this.#gl.UNSIGNED_BYTE, input.width * scale, input.height * scale),\n                    width: input.width * scale,\n                    height: input.height * scale,\n                });\n            }\n            const fb = new FrameBuffer(this.#gl, this.#program, {\n                o_color: textures[1][TEXTURE],\n            });\n            this.#blurBuffer = {\n                textures,\n                frameBuffers: [\n                    fb,\n                    new FrameBuffer(this.#gl, this.#program, {\n                        o_color: textures[0][TEXTURE],\n                    }),\n                    fb,\n                ],\n            };\n        }\n        const b = this.#blurBuffer;\n        this.#program.use((p) => {\n            this.#gl.viewport(0, 0, input.width * scale, input.height * scale);\n            if (scale !== 1.0) {\n                // no blur, input as input, set output to textures 1\n                p.setUniforms({\n                    u_blur: input[TEXTURE],\n                    u_blurSize: [input.width, input.height],\n                    u_blurDirection: [0, 0],\n                    u_blurStrength: blurStrength,\n                });\n                b.frameBuffers[0].bind(() => {\n                    this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n                    this.#quad.bind(this.#program, { position: \"a_position\" }, (q) => {\n                        q.draw();\n                    });\n                });\n            }\n            // y axis blur, textures 1 or input as input, set output to textures 0\n            const scaledInput = scale !== 1.0 ? b.textures[1] : input;\n            p.setUniforms({\n                u_blur: scaledInput[TEXTURE],\n                u_blurSize: [scaledInput.width, scaledInput.height],\n                u_blurDirection: [0, 1],\n                u_blurStrength: blurStrength,\n            });\n            b.frameBuffers[1].bind(() => {\n                this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n                this.#quad.bind(this.#program, { position: \"a_position\" }, (q) => {\n                    q.draw();\n                });\n            });\n            // x axis blur, textures 0 as input, set output to textures 1\n            p.setUniforms({\n                u_blur: b.textures[0][TEXTURE],\n                u_blurSize: [b.textures[0].width, b.textures[0].height],\n                u_blurDirection: [1, 0],\n            });\n            b.frameBuffers[2].bind(() => {\n                this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n                this.#quad.bind(this.#program, { position: \"a_position\" }, (q) => {\n                    q.draw();\n                });\n            });\n            this.#gl.viewport(0, 0, input.width, input.height);\n        });\n        return this;\n    }\n    getBlurTexture() {\n        return this.#blurBuffer.textures[1];\n    }\n}\n", "export * from \"./deferred-sprite-effect.js\";\nexport * from \"./sprite-effect.js\";\nexport * from \"./solid-effect.js\";\nexport * from \"./gaussian-blur.js\";\n", "const Sheet = {\n  \"name\": \"overworld\",\n  \"sprites\": {\n    \"grass_b\": {\n      \"index\": 1,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 224,\n          \"left\": 0,\n          \"bottom\": 208,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_bl\": {\n      \"index\": 2,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 208,\n          \"left\": 0,\n          \"bottom\": 192,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_br\": {\n      \"index\": 3,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 192,\n          \"left\": 0,\n          \"bottom\": 176,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_i_bl\": {\n      \"index\": 4,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 176,\n          \"left\": 0,\n          \"bottom\": 160,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_i_br\": {\n      \"index\": 5,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 160,\n          \"left\": 0,\n          \"bottom\": 144,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_t\": {\n      \"index\": 6,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 144,\n          \"left\": 0,\n          \"bottom\": 128,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_tl\": {\n      \"index\": 7,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 128,\n          \"left\": 0,\n          \"bottom\": 112,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_tr\": {\n      \"index\": 8,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 112,\n          \"left\": 0,\n          \"bottom\": 96,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_i_tl\": {\n      \"index\": 9,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 96,\n          \"left\": 0,\n          \"bottom\": 80,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_i_tr\": {\n      \"index\": 10,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 80,\n          \"left\": 0,\n          \"bottom\": 64,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_l\": {\n      \"index\": 11,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 64,\n          \"left\": 0,\n          \"bottom\": 48,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass_r\": {\n      \"index\": 12,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 48,\n          \"left\": 0,\n          \"bottom\": 32,\n          \"right\": 16\n        }\n      ]\n    },\n    \"grass\": {\n      \"index\": 13,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 32,\n          \"left\": 0,\n          \"bottom\": 16,\n          \"right\": 16\n        },\n        {\n          \"top\": 32,\n          \"left\": 16,\n          \"bottom\": 16,\n          \"right\": 32\n        },\n        {\n          \"top\": 32,\n          \"left\": 32,\n          \"bottom\": 16,\n          \"right\": 48\n        },\n        {\n          \"top\": 32,\n          \"left\": 48,\n          \"bottom\": 16,\n          \"right\": 64\n        }\n      ]\n    },\n    \"water\": {\n      \"index\": 14,\n      \"width\": 16,\n      \"height\": 16,\n      \"frames\": [\n        {\n          \"top\": 16,\n          \"left\": 0,\n          \"bottom\": 0,\n          \"right\": 16\n        },\n        {\n          \"top\": 16,\n          \"left\": 16,\n          \"bottom\": 0,\n          \"right\": 32\n        },\n        {\n          \"top\": 16,\n          \"left\": 32,\n          \"bottom\": 0,\n          \"right\": 48\n        },\n        {\n          \"top\": 16,\n          \"left\": 48,\n          \"bottom\": 0,\n          \"right\": 64\n        },\n        {\n          \"top\": 16,\n          \"left\": 64,\n          \"bottom\": 0,\n          \"right\": 80\n        },\n        {\n          \"top\": 16,\n          \"left\": 80,\n          \"bottom\": 0,\n          \"right\": 96\n        },\n        {\n          \"top\": 16,\n          \"left\": 96,\n          \"bottom\": 0,\n          \"right\": 112\n        },\n        {\n          \"top\": 16,\n          \"left\": 112,\n          \"bottom\": 0,\n          \"right\": 128\n        }\n      ]\n    }\n  },\n  \"indexes\": [\n    \"\",\n    \"grass_b\",\n    \"grass_bl\",\n    \"grass_br\",\n    \"grass_i_bl\",\n    \"grass_i_br\",\n    \"grass_t\",\n    \"grass_tl\",\n    \"grass_tr\",\n    \"grass_i_tl\",\n    \"grass_i_tr\",\n    \"grass_l\",\n    \"grass_r\",\n    \"grass\",\n    \"water\"\n  ],\n  \"urls\": {\n    \"diffuse\": \"/sprites/overworld-diffuse.png?v=0f8c2ff20f23384811f70a22403a972cf8c3e7c72e07dadafce582ce58018e37\",\n    \"emissive\": \"/sprites/overworld-emissive.png?v=7e964b09ced6bc0c687bf7ecdb19a52cb3292c73da1ab2b7ef5d5a58b36ddfaa\",\n    \"normal\": \"/sprites/overworld-normal.png?v=44d5501815dee57e4abd24590a5d30c80358dd2bdb90e0da5d8a9c4fbd1b6c5f\",\n    \"specular\": \"/sprites/overworld-specular.png?v=55f7d8c380b7ae96744f2a603c471cac28960f274676126a554b1600db787175\"\n  }\n};\nexport default Sheet;", "\n    import SpriteSheet from \"../sprites/overworld.js\";\n    const Map = {...{\"width\":100,\"height\":100,\"startPosition\":{\"x\":10,\"y\":10},\"spriteSheet\":\"overworld\",\"version\":\"a68b7830972bce04b3310c5aed3acf5fa734e922fc3eceef06abc07fee6a13d7\",\"url\":\"/maps/overworld.png?v=a68b7830972bce04b3310c5aed3acf5fa734e922fc3eceef06abc07fee6a13d7\",\"name\":\"overworld\"}, spriteSheet: SpriteSheet,\n    };\nexport default Map;", "\ntype InAttributeTypes = {\n\n}\n\ntype OutAttributeTypes = {\n   o_color: {type: \"vec4\"}\n}\n\ntype UniformTypes = {\n   u_blur: \"sampler2D\";\n   u_blurSize: \"vec2\";\n   u_blurDirection: \"vec2\";\n   u_blurStrength: \"float\"\n}\n\nexport const enum Constants {\n   offset = 16\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nprecision mediump float;uniform sampler2D u_blur;uniform vec2 u_blurSize;uniform vec2 u_blurDirection;uniform float u_blurStrength;in vec2 v_texCoord;out vec4 o_color;const int A=16;void main(){float B=texture(u_blur,v_texCoord).a;vec3 C=vec3(0.);for(int D=0;D<A;++D){vec2 E=v_texCoord+((vec2(-D,-D)*u_blurDirection)/u_blurSize);vec4 F=texture(u_blur,E);float G=F.a*pow(float(A-D)/float(A),u_blurStrength);B=max(B,G);C=length(C)<length(F.rgb)?F.rgb:C;vec2 H=v_texCoord+((vec2(D,D)*u_blurDirection)/u_blurSize);vec4 I=texture(u_blur,H);float J=I.a*pow(float(A-D)/float(A),u_blurStrength);B=max(B,J);C=length(C)<length(I.rgb)?I.rgb:C;}o_color=vec4(C,B);}`,\n  name: \"nearest-blur.frag\",\n  inAttributes: {\n\n  },\n  outAttributes: {\n   o_color: {type: \"vec4\"}\n  },\n  uniforms: {\n   u_blur: \"sampler2D\",\n   u_blurSize: \"vec2\",\n   u_blurDirection: \"vec2\",\n   u_blurStrength: \"float\"\n  },\n};\nexport default value;\n", "import {\n  FrameBuffer,\n  GPUTexture,\n  GameContext,\n  Quad,\n  ShaderProgram,\n  TEXTURE,\n  createTexture,\n} from \"@pixelheart/client\";\nimport vertexShader from \"@pixelheart/effects/shaders/quad.vert\";\n\nimport fragmentShader from \"./shaders/nearest-blur.frag.js\";\n\nexport class NearestBlurEffect {\n  #gl: WebGL2RenderingContext;\n  #program: ShaderProgram<typeof vertexShader, typeof fragmentShader>;\n  #quad: Quad;\n  #blurBuffer: {\n    frameBuffers: Array<FrameBuffer<typeof fragmentShader>>;\n    textures: Array<GPUTexture>;\n  } | null;\n\n  constructor(ctx: GameContext) {\n    this.#gl = ctx.gl;\n    this.#program = new ShaderProgram(ctx.gl, vertexShader, fragmentShader)!;\n    this.#quad = new Quad(this.#gl);\n    this.#blurBuffer = null;\n  }\n\n  draw(input: GPUTexture, blurStrength: number): NearestBlurEffect {\n    if (\n      !this.#blurBuffer ||\n      this.#blurBuffer.textures[0].width !== input.width ||\n      this.#blurBuffer.textures[0].height !== input.height\n    ) {\n      const textures: Array<GPUTexture> = [];\n      for (let i = 0; i < 2; i++) {\n        textures.push({\n          [TEXTURE]: createTexture(\n            this.#gl,\n            this.#gl.RGBA,\n            this.#gl.RGBA,\n            this.#gl.UNSIGNED_BYTE,\n            input.width,\n            input.height\n          ),\n          width: input.width,\n          height: input.height,\n        });\n      }\n      this.#blurBuffer = {\n        textures,\n        frameBuffers: [\n          new FrameBuffer(this.#gl, this.#program, {\n            o_color: textures[0],\n          }),\n          new FrameBuffer(this.#gl, this.#program, {\n            o_color: textures[1],\n          }),\n        ],\n      };\n    }\n\n    const previousBlend = this.#gl.getParameter(this.#gl.BLEND);\n    this.#gl.disable(this.#gl.BLEND);\n\n    const b = this.#blurBuffer;\n    this.#program.use((p) => {\n      this.#gl.viewport(0, 0, input.width, input.height);\n      // y axis blur, input as input, set output to textures 0\n      p.setUniforms({\n        u_blur: input[TEXTURE],\n        u_blurSize: [input.width, input.height],\n        u_blurDirection: [0, 1],\n        u_blurStrength: blurStrength,\n      });\n      b.frameBuffers[0].bind(() => {\n        this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n        this.#quad.bind(this.#program, { position: \"a_position\" }, (q) => {\n          q.draw();\n        });\n      });\n      // x axis blur, textures 0 as input, set output to textures 1\n      p.setUniforms({\n        u_blur: b.textures[0][TEXTURE],\n        u_blurSize: [b.textures[0].width, b.textures[0].height],\n        u_blurDirection: [1, 0],\n      });\n      b.frameBuffers[1].bind(() => {\n        this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n        this.#quad.bind(this.#program, { position: \"a_position\" }, (q) => {\n          q.draw();\n        });\n      });\n      this.#gl.viewport(0, 0, input.width, input.height);\n    });\n\n    if (previousBlend) {\n      this.#gl.enable(this.#gl.BLEND);\n    }\n    return this;\n  }\n\n  getBlurTexture(): GPUTexture {\n    return this.#blurBuffer!.textures[1];\n  }\n}\n", "const Sheet = {\n  \"name\": \"character\",\n  \"sprites\": {\n    \"walk_d\": {\n      \"index\": 1,\n      \"width\": 16,\n      \"height\": 32,\n      \"frames\": [\n        {\n          \"top\": 128,\n          \"left\": 0,\n          \"bottom\": 96,\n          \"right\": 16\n        },\n        {\n          \"top\": 128,\n          \"left\": 16,\n          \"bottom\": 96,\n          \"right\": 32\n        },\n        {\n          \"top\": 128,\n          \"left\": 32,\n          \"bottom\": 96,\n          \"right\": 48\n        },\n        {\n          \"top\": 128,\n          \"left\": 48,\n          \"bottom\": 96,\n          \"right\": 64\n        }\n      ]\n    },\n    \"walk_u\": {\n      \"index\": 2,\n      \"width\": 16,\n      \"height\": 32,\n      \"frames\": [\n        {\n          \"top\": 96,\n          \"left\": 0,\n          \"bottom\": 64,\n          \"right\": 16\n        },\n        {\n          \"top\": 96,\n          \"left\": 16,\n          \"bottom\": 64,\n          \"right\": 32\n        },\n        {\n          \"top\": 96,\n          \"left\": 32,\n          \"bottom\": 64,\n          \"right\": 48\n        },\n        {\n          \"top\": 96,\n          \"left\": 48,\n          \"bottom\": 64,\n          \"right\": 64\n        }\n      ]\n    },\n    \"walk_l\": {\n      \"index\": 3,\n      \"width\": 16,\n      \"height\": 32,\n      \"frames\": [\n        {\n          \"top\": 64,\n          \"left\": 0,\n          \"bottom\": 32,\n          \"right\": 16\n        },\n        {\n          \"top\": 64,\n          \"left\": 16,\n          \"bottom\": 32,\n          \"right\": 32\n        },\n        {\n          \"top\": 64,\n          \"left\": 32,\n          \"bottom\": 32,\n          \"right\": 48\n        },\n        {\n          \"top\": 64,\n          \"left\": 48,\n          \"bottom\": 32,\n          \"right\": 64\n        }\n      ]\n    },\n    \"walk_r\": {\n      \"index\": 4,\n      \"width\": 16,\n      \"height\": 32,\n      \"frames\": [\n        {\n          \"top\": 32,\n          \"left\": 0,\n          \"bottom\": 0,\n          \"right\": 16\n        },\n        {\n          \"top\": 32,\n          \"left\": 16,\n          \"bottom\": 0,\n          \"right\": 32\n        },\n        {\n          \"top\": 32,\n          \"left\": 32,\n          \"bottom\": 0,\n          \"right\": 48\n        },\n        {\n          \"top\": 32,\n          \"left\": 48,\n          \"bottom\": 0,\n          \"right\": 64\n        }\n      ]\n    }\n  },\n  \"indexes\": [\n    \"\",\n    \"walk_d\",\n    \"walk_u\",\n    \"walk_l\",\n    \"walk_r\"\n  ],\n  \"urls\": {\n    \"diffuse\": \"/sprites/character-diffuse.png?v=26b65f0388e68f1215898c95b2eb5ebc38671434ad2b744b91c31a089630061f\",\n    \"emissive\": \"/sprites/character-emissive.png?v=269513c7efa74adea87bfedc176d2edce2df1c754a8fbcc31665f1a9a0238bf0\",\n    \"normal\": \"/sprites/character-normal.png?v=5564d03c4253751462f1379a60c9abcf48ce0dc122efb197b636402f59502e86\",\n    \"specular\": \"/sprites/character-specular.png?v=95699c39d4b7ad9a82ce1258ae71017af7b1be063056ae756702429b6683c859\"\n  }\n};\nexport default Sheet;", "const Sheet = {\n  \"name\": \"ui\",\n  \"sprites\": {\n    \"touch\": {\n      \"index\": 1,\n      \"width\": 64,\n      \"height\": 64,\n      \"frames\": [\n        {\n          \"top\": 64,\n          \"left\": 0,\n          \"bottom\": 0,\n          \"right\": 64\n        }\n      ]\n    }\n  },\n  \"indexes\": [\n    \"\",\n    \"touch\"\n  ],\n  \"urls\": {\n    \"diffuse\": \"/sprites/ui-diffuse.png?v=e5957b7c38c750fbb5ed223b2286211e7e7ebe6d4ca66960527a40ad4caf79a9\",\n    \"emissive\": \"/sprites/ui-emissive.png?v=ebb17149ce1cf937cadfb8e903b2812b9a0ecc366eb7705e40e3c73461dc082f\",\n    \"normal\": \"/sprites/ui-normal.png?v=cbc9c3b8b286807faad22c32142729281692bad97abd6edab4499e8248d68cb8\",\n    \"specular\": \"/sprites/ui-specular.png?v=01c6ec306f27fa4865bd1f3105fca42b0b9da17a429013e82bf32f1bf88a1944\"\n  }\n};\nexport default Sheet;", "\ntype InAttributeTypes = {\n\n}\n\ntype OutAttributeTypes = {\n   o_normal: {type: \"vec4\",location:0};\n   o_albedo: {type: \"vec4\",location:1};\n   o_specular: {type: \"vec4\",location:2};\n   o_lighting: {type: \"vec4\",location:3};\n   o_mask: {type: \"vec4\",location:4}\n}\n\ntype UniformTypes = {\n   u_mask: \"sampler2D\";\n   u_depth: \"sampler2D\";\n   u_time: \"float\";\n   u_scale: \"vec2\";\n   u_offset: \"vec2\";\n   u_normal: \"vec3\";\n   u_tangent: \"vec3\";\n   u_binormal: \"vec3\";\n   u_toTangentSpace: \"mat3\"\n}\n\nexport const enum Constants {\n   nwaves = 12\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nprecision mediump float;layout(location=0)out vec4 o_normal;layout(location=1)out vec4 o_albedo;layout(location=2)out vec4 o_specular;layout(location=3)out vec4 o_lighting;layout(location=4)out vec4 o_mask;in vec2 v_texCoord;uniform sampler2D u_mask;uniform sampler2D u_depth;uniform float u_time;uniform vec2 u_scale;uniform vec2 u_offset;uniform vec3 u_normal;uniform vec3 u_tangent;uniform vec3 u_binormal;uniform mat3 u_toTangentSpace;const float A=acos(-1.);const vec2 B=vec2(1.,0.);const int C=12;const float D=1000.;const float E=0.06;float F(vec2 G){return fract(sin(dot(G.xy,vec2(12.9898,78.233)))*43758.5453);}void H(in int I,out float J,out float K,out vec2 L,out float M,out float N){J=abs(0.05*F(vec2(I,I)));K=.02+.01*F(vec2(float(I+5)));L=(vec2(F(vec2(I,I+1)),F(vec2(I-2,I+2))));M=30.+82.*F(vec2(float(I+5)));N=(2.5+4.2*F(vec2(float(I+4))))*0.00045;}float O(float P){return round(P*D)/D;}void Q(in vec2 R,in float S,in float T,out vec3 U,out vec3 V){U=vec3(R,0.);V=B.yyy;float J,M,N,K;vec2 L;for(int I=0;I<C;++I){H(I,J,K,L,M,N);J+=S*0.1;K+=S*0.3;float W=dot(L,R);U+=vec3(J*K*L*cos(M*W+O(N)*T*A*2.),K*sin(M*W+O(N)*T*A*2.));}for(int I=0;I<C;++I){H(I,J,K,L,M,N);V+=vec3(-L*M*K*cos(M*dot(L,U.xy)+O(N)*T*A*2.),1.-J*M*K*sin(M*dot(L,U.xy)+O(N)*T*A*2.));}V=normalize(V);}void main(){vec2 X=v_texCoord*u_scale*E;vec2 Y=u_offset*u_scale*E;vec4 Z=texture(u_mask,v_texCoord);vec4 a=texture(u_depth,v_texCoord);float S=smoothstep(0.,1.,a.a);float b=1.-Z.a;vec3 c=B.yyx,d=1.*B.xyy,e=1.*B.yxy+B.yyx,W=normalize(cross(e,d)),f=c+(X.x+Y.x)*d+(X.y+Y.y)*e;vec3 g=(B.yyx-3.*B.yxy),h=mat3(B.yxy,B.yyx,1./W.z,-W.x/W.z,-W.y/W.z)*f,i,U;Q(h.xy,S,u_time,U,i);vec3 j=normalize(cross(i.x*u_normal+u_binormal,i.y*u_normal+u_tangent))*u_toTangentSpace;o_albedo=vec4(50./255.+S*0.5,124./255.+S*0.5,U.z/255.+224./255.+S,b);if(S<0.99){vec4 k=texture(u_depth,X-i.xy*4.);if(k.r>0.001){o_albedo=vec4(k.rgb*S/2.+o_albedo.rgb*(1.-S/2.),b);}}o_normal=vec4(j,b);o_specular=vec4(1.,1.,1.,b);o_lighting=vec4(0.,0.,0.,0.);o_mask=vec4(0.,0.,0.,0.);}`,\n  name: \"water.frag\",\n  inAttributes: {\n\n  },\n  outAttributes: {\n   o_normal: {type: \"vec4\",location:0},\n   o_albedo: {type: \"vec4\",location:1},\n   o_specular: {type: \"vec4\",location:2},\n   o_lighting: {type: \"vec4\",location:3},\n   o_mask: {type: \"vec4\",location:4}\n  },\n  uniforms: {\n   u_mask: \"sampler2D\",\n   u_depth: \"sampler2D\",\n   u_time: \"float\",\n   u_scale: \"vec2\",\n   u_offset: \"vec2\",\n   u_normal: \"vec3\",\n   u_tangent: \"vec3\",\n   u_binormal: \"vec3\",\n   u_toTangentSpace: \"mat3\"\n  },\n};\nexport default value;\n", "import {\n  Binormal,\n  GPUTexture,\n  GameContext,\n  Normal,\n  Quad,\n  ShaderProgram,\n  TEXTURE,\n  coords,\n  Tangent,\n  ToTangentSpace,\n} from \"@pixelheart/client\";\nimport { vec2 } from \"@pixelheart/client/gl-matrix\";\nimport vertexShader from \"@pixelheart/effects/shaders/quad.vert\";\n\nimport fragmentShader from \"./shaders/water.frag.js\";\n\nexport class WaterEffect {\n  #gl: WebGL2RenderingContext;\n  #program: ShaderProgram<typeof vertexShader, typeof fragmentShader>;\n  #quad: Quad;\n\n  constructor(ctx: GameContext) {\n    this.#gl = ctx.gl;\n    this.#program = new ShaderProgram(ctx.gl, vertexShader, fragmentShader)!;\n    this.#quad = new Quad(this.#gl);\n  }\n\n  draw(\n    time: number,\n    offset: vec2,\n    screen: { width: number, height: number },\n    mask: GPUTexture,\n    depth: GPUTexture\n  ): WaterEffect {\n    this.#program.use((p) => {\n      p.setUniforms({\n        u_normal: Normal,\n        u_tangent: Tangent,\n        u_binormal: Binormal,\n        u_toTangentSpace: ToTangentSpace,\n        u_time: time,\n        u_scale: vec2.fromValues(screen.width / coords.TILE_SIZE, screen.height / coords.TILE_SIZE),\n        u_offset: offset,\n        u_mask: mask[TEXTURE],\n        u_depth: depth[TEXTURE],\n      });\n      this.#quad.bind(this.#program, { position: \"a_position\" }, (q) => {\n        q.draw();\n      });\n    });\n    return this;\n  }\n}\n", "import {\n  GameClient,\n  GameContext,\n  MapContainer,\n  ResourceLoader,\n  coords,\n  loadMapContainer,\n  loadSpriteSheet,\n  math,\n} from \"@pixelheart/client\";\nimport { ReadonlyVec2, vec2, vec3, vec4 } from \"@pixelheart/client/gl-matrix\";\nimport {\n  DeferredSpriteAnimator,\n  DeferredSpriteEffect,\n  DeferredSpriteSheet,\n  DeferredSpriteTextures,\n  SimpleSpriteEffect,\n  SimpleSpriteSheet,\n  SolidEffect,\n  deferredTextureLoader,\n  simpleTextureLoader,\n} from \"@pixelheart/effects\";\n\nimport overworldMap from \"./maps/overworld.js\";\nimport { NearestBlurEffect } from \"./nearest-blur.js\";\nimport characterSprite from \"./sprites/character.js\";\nimport uiSprite from \"./sprites/ui.js\";\nimport { WaterEffect } from \"./water-effect.js\";\n\nconst CONTROLLER_DEADZONE = 0.25;\nconst TOUCH_DEADZONE = 5;\nconst CURRENT_SERIALIZATION_VERSION = 2;\nconst MAX_TIME = 1000;\n\nexport interface PersistentState {\n  version: number;\n  mapVersion?: string;\n  character: {\n    position: [number, number];\n    direction: string;\n  };\n}\n\nexport interface GameState {\n  spriteEffect: DeferredSpriteEffect;\n  simpleSpriteEffect: SimpleSpriteEffect;\n  solidEffect: SolidEffect;\n  resources: ResourceLoader<{\n    ui: SimpleSpriteSheet;\n    map: MapContainer<DeferredSpriteTextures>;\n    character: {\n      sprite: DeferredSpriteSheet;\n      animator: DeferredSpriteAnimator;\n      position: vec2;\n      relativePosition: vec2;\n      speed: number;\n      boundingBox: vec4;\n    };\n  }>;\n  screen: {\n    absolutePosition: vec2;\n  };\n  animationTimer: number;\n  waterEffect: WaterEffect;\n  blurEffect: NearestBlurEffect;\n  moveTouch: { id: number; startPosition: ReadonlyVec2 } | null;\n  directionalLighting: Array<{\n    ambient: vec3;\n    direction: vec3;\n    diffuse: vec3;\n  }>;\n  day: number;\n}\n\nexport default class Game implements GameClient<GameState, PersistentState> {\n  constructor() {}\n\n  onStart(ctx: GameContext, previousState?: PersistentState): GameState {\n    if (\n      previousState &&\n      previousState.version !== CURRENT_SERIALIZATION_VERSION\n    ) {\n      // if its possible to gracefully handle loading a previous version, do so\n      // otherwise, throw an error\n      throw new Error(`Invalid save version ${previousState.version}`);\n    }\n\n    const state: GameState = {\n      spriteEffect: new DeferredSpriteEffect(ctx),\n      simpleSpriteEffect: new SimpleSpriteEffect(ctx),\n      solidEffect: new SolidEffect(ctx),\n      resources: new ResourceLoader({\n        ui: loadSpriteSheet(ctx, uiSprite, simpleTextureLoader),\n        map: loadMapContainer(\n          ctx,\n          coords.TILE_SIZE,\n          overworldMap,\n          deferredTextureLoader,\n        ),\n        character: (async () => {\n          const c = await loadSpriteSheet(\n            ctx,\n            characterSprite,\n            deferredTextureLoader,\n          );\n          return {\n            sprite: c,\n            animator: new DeferredSpriteAnimator(\n              c,\n              previousState ? previousState.character.direction : \"walk_d\",\n              8 / 1000,\n            ),\n            position:\n              previousState && previousState.mapVersion === overworldMap.version\n                ? vec2.fromValues(\n                    previousState.character.position[0],\n                    previousState.character.position[1],\n                  )\n                : vec2.fromValues(\n                    overworldMap.startPosition.x * coords.TILE_SIZE,\n                    overworldMap.startPosition.y * coords.TILE_SIZE,\n                  ),\n            relativePosition: vec2.create(),\n            boundingBox: vec4.fromValues(\n              c.walk_u.height - 14,\n              c.walk_u.width - 2,\n              c.walk_u.height - 4,\n              2,\n            ),\n            speed: 1,\n          };\n        })(),\n      }),\n\n      waterEffect: new WaterEffect(ctx),\n      blurEffect: new NearestBlurEffect(ctx),\n      animationTimer: 0,\n      screen: {\n        absolutePosition: vec2.create(),\n      },\n      moveTouch: null,\n      directionalLighting: [],\n      day: 0,\n    };\n\n    return state;\n  }\n\n  onSave(state: GameState): PersistentState | null {\n    let result = null;\n    state.resources.ifReady((r) => {\n      result = {\n        version: CURRENT_SERIALIZATION_VERSION,\n        mapVersion: overworldMap.version,\n        character: {\n          position: [r.character.position[0], r.character.position[1]],\n          direction: r.character.animator.getSpriteName(),\n        },\n      };\n    });\n    return result;\n  }\n\n  onUpdate(ctx: GameContext, state: GameState, fixedDelta: number) {\n    state.resources.ifReady((r) => {\n      const direction: { [key: string]: boolean } = {};\n\n      // gamepad input\n      const gp = ctx.getGamepad();\n      if (gp) {\n        if (\n          gp.buttons[12].pressed ||\n          Math.min(0.0, gp.axes[1] + CONTROLLER_DEADZONE) < 0\n        ) {\n          direction.up = true;\n        }\n        if (\n          gp.buttons[13].pressed ||\n          Math.max(0.0, gp.axes[1] - CONTROLLER_DEADZONE) > 0\n        ) {\n          direction.down = true;\n        }\n        if (\n          gp.buttons[14].pressed ||\n          Math.min(0.0, gp.axes[0] + CONTROLLER_DEADZONE) < 0\n        ) {\n          direction.left = true;\n        }\n        if (\n          gp.buttons[15].pressed ||\n          Math.max(0.0, gp.axes[0] - CONTROLLER_DEADZONE) > 0\n        ) {\n          direction.right = true;\n        }\n      }\n\n      // keyboard input\n      if (ctx.keys.pressed.has(\"f\") && ctx.keys.down.has(\"Control\")) {\n        if (!document.fullscreenElement) {\n          ctx.canvas.requestFullscreen();\n        } else if (document.exitFullscreen) {\n          document.exitFullscreen();\n        }\n      }\n      if (ctx.keys.down.has(\"w\") || ctx.keys.down.has(\"ArrowUp\")) {\n        direction.up = true;\n      }\n      if (ctx.keys.down.has(\"s\") || ctx.keys.down.has(\"ArrowDown\")) {\n        direction.down = true;\n      }\n      if (ctx.keys.down.has(\"a\") || ctx.keys.down.has(\"ArrowLeft\")) {\n        direction.left = true;\n      }\n      if (ctx.keys.down.has(\"d\") || ctx.keys.down.has(\"ArrowRight\")) {\n        direction.right = true;\n      }\n\n      // touch input\n      for (let [k, v] of ctx.touches.down) {\n        if (state.moveTouch === null && Date.now() - v.started > 250) {\n          state.moveTouch = {\n            id: k,\n            startPosition: vec2.clone(v.position),\n          };\n        }\n      }\n      for (let [k, _] of ctx.touches.ended) {\n        if (state.moveTouch !== null && k === state.moveTouch.id) {\n          state.moveTouch = null;\n        }\n      }\n      if (state.moveTouch !== null) {\n        const currentTouch = ctx.touches.down.get(state.moveTouch.id);\n        if (currentTouch) {\n          if (\n            currentTouch.position[0] - state.moveTouch.startPosition[0] <\n            -TOUCH_DEADZONE\n          ) {\n            direction.left = true;\n          }\n          if (\n            currentTouch.position[0] - state.moveTouch.startPosition[0] >\n            TOUCH_DEADZONE\n          ) {\n            direction.right = true;\n          }\n          if (\n            currentTouch.position[1] - state.moveTouch.startPosition[1] <\n            -TOUCH_DEADZONE\n          ) {\n            direction.up = true;\n          }\n          if (\n            currentTouch.position[1] - state.moveTouch.startPosition[1] >\n            TOUCH_DEADZONE\n          ) {\n            direction.down = true;\n          }\n        } else {\n          state.moveTouch = null;\n        }\n      }\n\n      let newDirection: keyof typeof characterSprite.sprites | null = null;\n      // direction animations are mutually exclusive\n      if (direction.left) {\n        newDirection = \"walk_l\";\n      } else if (direction.right) {\n        newDirection = \"walk_r\";\n      } else if (direction.up) {\n        newDirection = \"walk_u\";\n      } else if (direction.down) {\n        newDirection = \"walk_d\";\n      }\n\n      if (newDirection) {\n        r.character.animator.setSpriteOrTick(newDirection, fixedDelta);\n      }\n\n      // provide a stable looping animation\n      state.animationTimer += fixedDelta / 10;\n      if (state.animationTimer > MAX_TIME) {\n        state.animationTimer -= MAX_TIME;\n      }\n\n      // but movement is not\n      const movement = vec2.create();\n      if (direction.left) {\n        movement[0]--;\n      }\n      if (direction.right) {\n        movement[0]++;\n      }\n      if (direction.up) {\n        movement[1]--;\n      }\n      if (direction.down) {\n        movement[1]++;\n      }\n      // make sure angular movement isn't faster than up/down/left/right\n      vec2.normalize(movement, movement);\n      vec2.scale(movement, movement, r.character.speed);\n      vec2.add(movement, movement, r.character.position);\n\n      const renderOffset = vec2.fromValues(\n        r.character.animator.getSprite().width / 2,\n        r.character.animator.getSprite().height / 2,\n      );\n\n      // check the characters bounding box against the map\n      // top left\n      const isWalkable =\n        r.map.data.read(\n          Math.floor(\n            (movement[0] - renderOffset[0] + r.character.boundingBox[3]) /\n              coords.TILE_SIZE,\n          ),\n          Math.floor(\n            (movement[1] - renderOffset[1] + r.character.boundingBox[0]) /\n              coords.TILE_SIZE,\n          ),\n        ).walkable &&\n        // top right\n        r.map.data.read(\n          Math.floor(\n            (movement[0] - renderOffset[0] + r.character.boundingBox[1]) /\n              coords.TILE_SIZE,\n          ),\n          Math.floor(\n            (movement[1] - renderOffset[1] + r.character.boundingBox[0]) /\n              coords.TILE_SIZE,\n          ),\n        ).walkable &&\n        // bottom left\n        r.map.data.read(\n          Math.floor(\n            (movement[0] - renderOffset[0] + r.character.boundingBox[3]) /\n              coords.TILE_SIZE,\n          ),\n          Math.floor(\n            (movement[1] - renderOffset[1] + r.character.boundingBox[2]) /\n              coords.TILE_SIZE,\n          ),\n        ).walkable &&\n        // bottom right\n        r.map.data.read(\n          Math.floor(\n            (movement[0] - renderOffset[0] + r.character.boundingBox[1]) /\n              coords.TILE_SIZE,\n          ),\n          Math.floor(\n            (movement[1] - renderOffset[1] + r.character.boundingBox[2]) /\n              coords.TILE_SIZE,\n          ),\n        ).walkable;\n\n      if (isWalkable) {\n        const renderOffset = vec2.fromValues(\n          r.character.animator.getSprite().width / 2,\n          r.character.animator.getSprite().height / 2,\n        );\n        const mapSize = vec2.fromValues(\n          r.map.data.width * coords.TILE_SIZE,\n          r.map.data.height * coords.TILE_SIZE,\n        );\n        vec2.subtract(mapSize, mapSize, renderOffset);\n        vec2.min(r.character.position, movement, mapSize);\n        vec2.max(r.character.position, r.character.position, renderOffset);\n      }\n\n      // character position relative to the top left of the screen\n      r.character.relativePosition[0] =\n        r.character.position[0] < ctx.screen.width / 2\n          ? r.character.position[0]\n          : r.character.position[0] >\n              r.map.data.width * coords.TILE_SIZE - ctx.screen.width / 2\n            ? r.character.position[0] -\n              r.map.data.width * coords.TILE_SIZE +\n              ctx.screen.width\n            : ctx.screen.width / 2;\n      r.character.relativePosition[1] =\n        r.character.position[1] < ctx.screen.height / 2\n          ? r.character.position[1]\n          : r.character.position[1] >\n              r.map.data.height * coords.TILE_SIZE - ctx.screen.height / 2\n            ? r.character.position[1] -\n              r.map.data.height * coords.TILE_SIZE +\n              ctx.screen.height\n            : ctx.screen.height / 2;\n\n      // Record the scroll offset of the screen\n      vec2.subtract(\n        state.screen.absolutePosition,\n        r.character.position,\n        r.character.relativePosition,\n      );\n\n      r.map.data.updateScreenBuffer(ctx, state.screen.absolutePosition);\n    });\n\n    let sin = Math.sin(state.animationTimer);\n    sin = Math.min(1.0, sin + 0.5);\n\n    state.day =\n      state.animationTimer < MAX_TIME * 0.25\n        ? math.smoothstep(0, MAX_TIME * 0.25, state.animationTimer)\n        : state.animationTimer < MAX_TIME * 0.5\n          ? 1.0\n          : state.animationTimer < MAX_TIME * 0.75\n            ? 1.0 -\n              math.smoothstep(\n                MAX_TIME * 0.5,\n                MAX_TIME * 0.75,\n                state.animationTimer,\n              )\n            : 0.0;\n    const sunDirection = Math.cos(\n      (Math.min(state.animationTimer, MAX_TIME * 0.75) * Math.PI) /\n        (MAX_TIME * 0.75),\n    );\n\n    state.directionalLighting = [\n      {\n        ambient: vec3.fromValues(\n          0.2 + state.day * 0.3,\n          0.2 + state.day * 0.3,\n          0.4 + state.day * 0.1,\n        ),\n        direction: vec3.fromValues(sunDirection, state.day * 0.3 + 0.2, -1.0),\n        diffuse: vec3.fromValues(\n          Math.pow(state.day, 0.25) * (1 - state.day) + state.day * 0.5,\n          state.day * 0.5,\n          state.day * 0.45,\n        ),\n      },\n      {\n        ambient: vec3.create(),\n        direction: vec3.fromValues(0.0, (1 - state.day) * 0.5, -1.0),\n        diffuse: vec3.fromValues(\n          (1 - state.day) * 0.2,\n          (1 - state.day) * 0.2,\n          (1 - state.day) * 0.2,\n        ),\n      },\n    ];\n  }\n\n  onDraw(ctx: GameContext, state: GameState, _delta: number) {\n    ctx.gl.enable(ctx.gl.BLEND);\n    ctx.gl.blendFunc(ctx.gl.SRC_ALPHA, ctx.gl.ONE_MINUS_SRC_ALPHA);\n\n    const ssp = coords.toAbsoluteTileFromAbsolute(\n      vec4.create(),\n      state.screen.absolutePosition,\n    );\n\n    for (const l of state.directionalLighting) {\n      state.spriteEffect.addDirectionalLight(l);\n    }\n    state.spriteEffect\n      .addPointLight({\n        diffuse: vec3.fromValues(\n          0.6 * (1 - state.day),\n          0.6 * (1 - state.day),\n          0.3 * (1 - state.day),\n        ),\n        position: vec3.fromValues(\n          ctx.mouse.position[0] / ctx.screen.width,\n          ctx.mouse.position[1] / ctx.screen.height,\n          0.1,\n        ),\n        radius: 0.5,\n      })\n      .use(\n        {\n          width: ctx.screen.width,\n          height: ctx.screen.height,\n        },\n        (s, pass) => {\n          state.resources.ifReady((r) => {\n            const tileWidth =\n              (ctx.screen.width + 2 * coords.TILE_SIZE) / coords.TILE_SIZE;\n            const tileHeight =\n              (ctx.screen.height + 2 * coords.TILE_SIZE) / coords.TILE_SIZE;\n            if (pass === 0) {\n              // overdraw the screen by 1 tile at each edge to prevent tile pop-in\n              for (let x = -1; x <= tileWidth; ++x) {\n                for (let y = -1; y <= tileHeight; ++y) {\n                  const mapX = x + ssp[0];\n                  const mapY = y + ssp[1];\n\n                  const position = ctx.screen.toScreenSpace(\n                    vec4.create(),\n                    vec4.fromValues(\n                      y * coords.TILE_SIZE - ssp[3],\n                      x * coords.TILE_SIZE + coords.TILE_SIZE - ssp[2],\n                      y * coords.TILE_SIZE + coords.TILE_SIZE - ssp[3],\n                      x * coords.TILE_SIZE - ssp[2],\n                    ),\n                  );\n\n                  const tile = r.map.data.read(mapX, mapY);\n                  if (tile.index !== 0) {\n                    const tileName = r.map.spriteConfig.indexes[tile.index];\n                    r.map.sprite[tileName].draw(\n                      s,\n                      position,\n                      tile.spatialHash ? math.hash(mapX, mapY) : undefined,\n                    );\n                  }\n                }\n              }\n            } else {\n              const offset = vec2.fromValues(\n                r.character.animator.getSprite().width / 2,\n                r.character.animator.getSprite().height / 2,\n              );\n\n              r.character.animator.draw(\n                s,\n                ctx.screen.toScreenSpace(\n                  vec4.create(),\n                  vec4.fromValues(\n                    Math.floor(r.character.relativePosition[1]) - offset[1],\n                    Math.floor(r.character.relativePosition[0]) + offset[0],\n                    Math.floor(r.character.relativePosition[1]) + offset[1],\n                    Math.floor(r.character.relativePosition[0]) - offset[0],\n                  ),\n                ),\n              );\n            }\n          });\n        },\n        (mask) => {\n          const pos = vec2.clone(state.screen.absolutePosition);\n          vec2.div(\n            pos,\n            pos,\n            vec2.fromValues(ctx.screen.width, ctx.screen.height),\n          );\n          state.blurEffect.draw(mask, 3.0);\n          state.waterEffect.draw(\n            state.animationTimer,\n            pos,\n            ctx.screen,\n            mask,\n            state.blurEffect.getBlurTexture(),\n          );\n        },\n      );\n\n    // draw the accumulated deferred lighting texture to the screen\n    state.simpleSpriteEffect.use((s) => {\n      const lightingTexture = state.spriteEffect.getLightingTexture();\n      if (lightingTexture) {\n        s.setTextures(lightingTexture);\n        s.draw(\n          vec4.fromValues(0.0, 1.0, 1.0, 0.0),\n          vec4.fromValues(0, lightingTexture.width, lightingTexture.height, 0),\n        );\n      }\n\n      if (state.moveTouch !== null) {\n        const moveTouch = state.moveTouch;\n        s.setAlpha(0.5);\n        state.resources.ifReady((r) => {\n          r.ui.touch.draw(\n            s,\n            ctx.screen.toScreenSpace(\n              vec4.create(),\n              vec4.fromValues(\n                Math.round(moveTouch.startPosition[1]) - 32,\n                Math.round(moveTouch.startPosition[0]) + 32,\n                Math.round(moveTouch.startPosition[1]) + 32,\n                Math.round(moveTouch.startPosition[0]) - 32,\n              ),\n            ),\n          );\n        });\n      }\n    });\n  }\n}\n", "import { vec2, vec4 } from \"gl-matrix\";\nimport { ClientEditorConnection, } from \"./editor.js\";\nimport { Quad } from \"./geometry.js\";\nimport { FrameBuffer, GBuffer, reloadShader } from \"./gl-utils.js\";\nimport { ShaderProgram } from \"./gl-utils.js\";\nimport { reloadImage } from \"./images.js\";\nimport { reloadSprite } from \"./sprite.js\";\nconst QuadVert = {\n    src: `#version 300 es\nin vec2 a_position;\nout vec2 v_texCoord;\nvoid main() {\n  v_texCoord = a_position;\n  gl_Position = vec4(a_position * 2.0 - 1.0, 0.0, 1.0);\n}`,\n    name: \"quad.vert\",\n    inAttributes: { a_position: { type: \"vec2\" } },\n    outAttributes: { v_texCoord: { type: \"vec2\" } },\n    uniforms: {},\n};\nconst BackBufferFrag = {\n    src: `#version 300 es\nprecision mediump float;\nin vec2 v_texCoord;\nuniform sampler2D u_texture;\nout vec4 outColor;\nvoid main() {\n  outColor = texture(u_texture, v_texCoord);\n}`,\n    name: \"backbuffer.frag\",\n    inAttributes: { v_texCoord: { type: \"vec2\" } },\n    outAttributes: { outColor: { type: \"vec4\" } },\n    uniforms: { u_texture: \"sampler2D\" },\n};\nexport default function GameRunner(props) {\n    let game = props.game;\n    const editor = props.editor;\n    const canvas = document.createElement(\"canvas\");\n    canvas.style.position = \"relative\";\n    canvas.style.transform = \"scaleY(-1)\";\n    const target = canvas.getContext(\"bitmaprenderer\");\n    const renderer = new Renderer();\n    const contextScreen = {\n        width: 1,\n        height: 1,\n    };\n    const contextSafeScreen = {\n        offsetLeft: 0,\n        offsetTop: 0,\n        width: 1,\n        height: 1,\n    };\n    let selectedGamepadIndex = null;\n    const context = {\n        gl: renderer.gl,\n        editorServer: new ClientEditorConnection(),\n        createRenderTarget: (width, height) => {\n            const c = document.createElement(\"canvas\");\n            c.width = width;\n            c.height = height;\n            return c.getContext(\"bitmaprenderer\");\n        },\n        canvas,\n        getGamepad: () => {\n            if (selectedGamepadIndex !== null) {\n                return navigator.getGamepads()[selectedGamepadIndex];\n            }\n            return null;\n        },\n        keys: {\n            down: new Set(),\n            pressed: new Set(),\n        },\n        mouse: {\n            position: vec2.create(),\n            wheel: vec2.create(),\n            down: [],\n            clicked: [],\n        },\n        touches: {\n            down: new Map(),\n            ended: new Map(),\n        },\n        screen: {\n            get width() {\n                return contextScreen.width;\n            },\n            get height() {\n                return contextScreen.height;\n            },\n            safeArea: {\n                get width() {\n                    return contextScreen.width;\n                },\n                get height() {\n                    return contextScreen.height;\n                },\n                get boundingRect() {\n                    return vec4.fromValues(contextSafeScreen.offsetTop, contextSafeScreen.offsetLeft + contextSafeScreen.width, contextSafeScreen.offsetTop + contextSafeScreen.height, contextSafeScreen.offsetLeft);\n                },\n            },\n            toScreenSpace: (out, relativeRect) => vec4.set(out, relativeRect[0] / contextScreen.height, relativeRect[1] / contextScreen.width, relativeRect[2] / contextScreen.height, relativeRect[3] / contextScreen.width),\n        },\n    };\n    let pixelMultiplier = 1;\n    window.addEventListener(\"gamepadconnected\", (e) => {\n        selectedGamepadIndex = e.gamepad.index;\n    });\n    window.addEventListener(\"gamepaddisconnected\", (_) => {\n        selectedGamepadIndex = null;\n    });\n    window.addEventListener(\"keydown\", (e) => {\n        context.keys.down.add(e.key);\n        if (e.altKey || e.shiftKey || e.ctrlKey) {\n            e.preventDefault();\n        }\n    });\n    window.addEventListener(\"keyup\", (e) => {\n        if (context.keys.down.has(e.key)) {\n            context.keys.pressed.add(e.key);\n        }\n        context.keys.down.delete(e.key);\n        if (e.altKey || e.shiftKey || e.ctrlKey) {\n            e.preventDefault();\n        }\n    });\n    canvas.addEventListener(\"wheel\", (e) => {\n        if (e.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n            vec2.set(context.mouse.wheel, e.deltaX, e.deltaY);\n        }\n    });\n    canvas.addEventListener(\"mousemove\", (e) => {\n        const rect = canvas.getBoundingClientRect();\n        vec2.set(context.mouse.position, (e.clientX - rect.left) / pixelMultiplier, (e.clientY - rect.top) / pixelMultiplier);\n    });\n    canvas.addEventListener(\"mousedown\", (e) => {\n        context.mouse.down[e.button] = true;\n    });\n    canvas.addEventListener(\"mouseup\", (e) => {\n        if (context.mouse.down[e.button]) {\n            context.mouse.clicked[e.button] = true;\n        }\n        context.mouse.down[e.button] = false;\n    });\n    canvas.addEventListener(\"contextmenu\", (e) => {\n        e.preventDefault();\n    });\n    canvas.addEventListener(\"touchstart\", (e) => {\n        const rect = canvas.getBoundingClientRect();\n        for (let i = 0; i < e.changedTouches.length; ++i) {\n            const touch = e.changedTouches[i];\n            const newTouch = vec2.fromValues((touch.clientX - rect.left) / pixelMultiplier, (touch.clientY - rect.top) / pixelMultiplier);\n            if (newTouch[0] >= 0 &&\n                newTouch[1] >= 0 &&\n                newTouch[0] <= context.screen.width &&\n                newTouch[1] <= context.screen.height) {\n                context.touches.down.set(touch.identifier, {\n                    started: Date.now(),\n                    position: newTouch,\n                });\n            }\n        }\n        e.preventDefault();\n    });\n    canvas.addEventListener(\"touchmove\", (e) => {\n        const rect = canvas.getBoundingClientRect();\n        for (let i = 0; i < e.changedTouches.length; ++i) {\n            const touch = e.changedTouches[i];\n            const existingTouch = context.touches.down.get(touch.identifier);\n            if (existingTouch) {\n                vec2.set(existingTouch.position, (touch.clientX - rect.left) / pixelMultiplier, (touch.clientY - rect.top) / pixelMultiplier);\n            }\n        }\n        e.preventDefault();\n    });\n    canvas.addEventListener(\"touchend\", (e) => {\n        const rect = canvas.getBoundingClientRect();\n        for (let i = 0; i < e.changedTouches.length; ++i) {\n            const touch = e.changedTouches[i];\n            const existingTouch = context.touches.down.get(touch.identifier);\n            if (existingTouch) {\n                vec2.set(existingTouch.position, (touch.clientX - rect.left) / pixelMultiplier, (touch.clientY - rect.top) / pixelMultiplier);\n                context.touches.down.delete(touch.identifier);\n                context.touches.ended.set(touch.identifier, {\n                    position: existingTouch.position,\n                });\n            }\n        }\n        e.preventDefault();\n    });\n    canvas.addEventListener(\"touchcancel\", (e) => {\n        for (let i = 0; i < e.changedTouches.length; ++i) {\n            const touch = e.changedTouches[i];\n            const existingTouch = context.touches.down.get(touch.identifier);\n            if (existingTouch) {\n                context.touches.down.delete(touch.identifier);\n            }\n        }\n        e.preventDefault();\n    });\n    let lastTime = performance.now();\n    const startup = () => {\n        const saveState = localStorage.getItem(props.saveKey);\n        const editorSaveState = localStorage.getItem(`${props.saveKey}-editor`);\n        lastTime = performance.now();\n        const gameState = (() => {\n            try {\n                return game.onStart(context, saveState ? JSON.parse(saveState) : undefined);\n            }\n            catch (ex) {\n                console.warn(ex);\n                return game.onStart(context);\n            }\n        })();\n        const editorState = editor\n            ? (() => {\n                try {\n                    editor?.onEnd(context, props.container);\n                    return editor?.onStart(context, gameState, props.container, editorSaveState\n                        ? JSON.parse(editorSaveState)\n                        : undefined);\n                }\n                catch (ex) {\n                    console.warn(ex);\n                    editor?.onEnd(context, props.container);\n                    return editor?.onStart(context, gameState, props.container);\n                }\n            })()\n            : null;\n        return {\n            gameState,\n            editorState,\n        };\n    };\n    context.editorServer.listen((e) => {\n        switch (e.type) {\n            case \"RELOAD_SHADER\": {\n                reloadShader(e.shader, e.src);\n                break;\n            }\n            case \"RELOAD_SPRITESHEET\": {\n                reloadImage(e.spriteSheet);\n                reloadSprite(e.spriteSheet);\n                break;\n            }\n            case \"RELOAD_STATIC\": {\n                const links = document.head.querySelectorAll(\"link\");\n                for (let l of links) {\n                    const href = l.getAttribute(\"href\");\n                    const hrefBase = href?.split(\"?\")[0];\n                    const match = hrefBase ? e.resources[hrefBase] : null;\n                    if (match && href !== match) {\n                        console.log(`Reloading stylesheet ${hrefBase}...`);\n                        const newLink = document.createElement(\"link\");\n                        newLink.rel = \"stylesheet\";\n                        newLink.href = match;\n                        newLink.onload = () => {\n                            document.head.removeChild(l);\n                        };\n                        document.head.appendChild(newLink);\n                    }\n                }\n            }\n        }\n    });\n    if (editor) {\n        let v = 1;\n        new EventSource(\"/esbuild\").addEventListener(\"change\", (e) => {\n            const message = JSON.parse(e.data);\n            if (message.updated.find((f) => f === \"/js/entrypoint.js\")) {\n                console.log(\"Saving state before reloading game plugin...\");\n                const savedState = game.onSave(result.gameState);\n                if (savedState) {\n                    localStorage.setItem(props.saveKey, JSON.stringify(savedState));\n                }\n                import(\"/js/entrypoint.js?v=\" + v++).then((module) => {\n                    game = module.createGameClient();\n                    console.log(\"Reloaded game plugin.\");\n                });\n            }\n        });\n    }\n    let contextLost = false;\n    const result = {\n        ...startup(),\n        canvas,\n    };\n    canvas.addEventListener(\"webglcontextlost\", (e) => {\n        e.preventDefault();\n        contextLost = true;\n        console.warn(\"WebGL context lost, saving state...\");\n        if (result.gameState) {\n            localStorage.setItem(props.saveKey, JSON.stringify(game.onSave(result.gameState)));\n        }\n        if (result.editorState && editor) {\n            localStorage.setItem(`${props.saveKey}-editor`, JSON.stringify(editor.onSave(result.editorState)));\n        }\n    }, false);\n    canvas.addEventListener(\"webglcontextrestored\", (e) => {\n        e.preventDefault();\n        context.gl = canvas.getContext(\"webgl2\");\n        console.warn(\"WebGL context restored, loading state...\");\n        // maintain the same object reference, but reload all the properties.\n        // of the state. This is necessary so that the editor can refer to the\n        // new state as we can't pass in a new reference to the editor.\n        Object.keys(result.gameState).forEach((key) => {\n            delete result.gameState[key];\n        });\n        if (result.editorState) {\n            Object.keys(result.editorState).forEach((key) => {\n                delete result.editorState[key];\n            });\n        }\n        Object.assign(result, startup());\n        contextLost = false;\n    }, false);\n    let currentParent = canvas.parentElement;\n    let accumulatedTime = 0;\n    let nextFrame = null;\n    const renderToTarget = (renderTarget, callback) => {\n        const width = renderTarget.canvas.width;\n        const height = renderTarget.canvas.height;\n        if (\"style\" in renderTarget.canvas) {\n            renderTarget.canvas.style.transform = \"scaleY(-1)\";\n        }\n        renderTarget.transferFromImageBitmap(renderer.use({ width, height }, callback));\n    };\n    const render = () => {\n        if (currentParent) {\n            const currentTime = performance.now();\n            const frameTime = currentTime - lastTime;\n            lastTime = currentTime;\n            accumulatedTime += frameTime;\n            while (accumulatedTime >= props.fixedUpdate) {\n                game.onUpdate(context, result.gameState, props.fixedUpdate);\n                if (result.editorState) {\n                    editor?.onUpdate(context, result.gameState, result.editorState, props.fixedUpdate);\n                }\n                context.mouse.clicked = [];\n                vec2.set(context.mouse.wheel, 0, 0);\n                context.touches.ended.clear();\n                context.keys.pressed.clear();\n                accumulatedTime -= props.fixedUpdate;\n            }\n            if (!contextLost) {\n                const scene = renderer.useScaled(context.screen, pixelMultiplier, () => {\n                    game.onDraw(context, result.gameState, frameTime);\n                    if (result.editorState) {\n                        editor?.onDraw(context, result.gameState, result.editorState, frameTime);\n                    }\n                });\n                target.transferFromImageBitmap(scene);\n                if (result.editorState) {\n                    editor?.onDrawExtra(context, result.gameState, result.editorState, frameTime, renderToTarget);\n                }\n            }\n        }\n        nextFrame = requestAnimationFrame(render);\n    };\n    nextFrame = requestAnimationFrame(render);\n    const handlePersist = () => {\n        if (document.visibilityState === \"hidden\") {\n            console.warn(\"Visibility changing, saving state...\");\n            const savedState = game.onSave(result.gameState);\n            if (savedState) {\n                localStorage.setItem(props.saveKey, JSON.stringify(savedState));\n            }\n            if (result.editorState) {\n                const savedState = editor?.onSave(result.editorState);\n                if (savedState) {\n                    localStorage.setItem(`${props.saveKey}-editor`, JSON.stringify(savedState));\n                }\n            }\n            if (nextFrame) {\n                cancelAnimationFrame(nextFrame);\n            }\n        }\n        else {\n            lastTime = performance.now();\n            accumulatedTime = 0;\n            nextFrame = requestAnimationFrame(render);\n        }\n    };\n    window.addEventListener(\"visibilitychange\", handlePersist);\n    const handleResize = () => {\n        const parent = canvas.parentElement || props.container;\n        pixelMultiplier = 1;\n        if (parent.clientWidth >= parent.clientHeight) {\n            contextScreen.width =\n                Math.min(props.screen.preferredWidthIncrements, Math.floor(parent.clientWidth / props.screen.incrementSize)) * props.screen.incrementSize;\n            while (contextScreen.width * (pixelMultiplier + 1) < parent.clientWidth) {\n                ++pixelMultiplier;\n            }\n            contextScreen.height =\n                Math.floor(parent.clientHeight / (props.screen.incrementSize * pixelMultiplier)) * props.screen.incrementSize;\n        }\n        else {\n            contextScreen.height =\n                Math.min(props.screen.preferredHeightIncrements, Math.floor(parent.clientHeight / props.screen.incrementSize)) * props.screen.incrementSize;\n            while (contextScreen.height * (pixelMultiplier + 1) <\n                parent.clientHeight) {\n                ++pixelMultiplier;\n            }\n            contextScreen.width =\n                Math.floor(parent.clientWidth / (props.screen.incrementSize * pixelMultiplier)) * props.screen.incrementSize;\n        }\n        while (contextScreen.width * pixelMultiplier < parent.clientWidth) {\n            contextScreen.width += props.screen.incrementSize;\n        }\n        while (contextScreen.height * pixelMultiplier < parent.clientHeight) {\n            contextScreen.height += props.screen.incrementSize;\n        }\n        const xOffset = (contextScreen.width - parent.clientWidth / pixelMultiplier) / 2;\n        const yOffset = (contextScreen.height - parent.clientHeight / pixelMultiplier) / 2;\n        contextSafeScreen.offsetLeft = Math.ceil(xOffset);\n        contextSafeScreen.offsetTop = Math.ceil(yOffset);\n        contextSafeScreen.width =\n            contextScreen.width - contextSafeScreen.offsetLeft * 2;\n        contextSafeScreen.height =\n            contextScreen.height - contextSafeScreen.offsetTop * 2;\n        canvas.style.top = -(pixelMultiplier * yOffset) + \"px\";\n        canvas.style.left = -(pixelMultiplier * xOffset) + \"px\";\n        canvas.style.width = canvas.style.minWidth =\n            pixelMultiplier * contextScreen.width + \"px\";\n        canvas.style.height = canvas.style.minHeight =\n            pixelMultiplier * contextScreen.height + \"px\";\n    };\n    const resizeObserver = new ResizeObserver((entries) => {\n        for (let entry of entries) {\n            if (entry.target === currentParent) {\n                handleResize();\n            }\n        }\n    });\n    setInterval(() => {\n        const newParent = canvas.parentElement;\n        if (newParent != currentParent) {\n            if (currentParent) {\n                resizeObserver.unobserve(currentParent);\n            }\n            currentParent = newParent;\n            if (currentParent) {\n                // once its added to the DOM, we can set the initial size relative\n                // to the parent container and can start listening for resize events.\n                handleResize();\n                resizeObserver.observe(currentParent);\n            }\n        }\n    }, 100);\n    if (!result.editorState) {\n        props.container.appendChild(canvas);\n    }\n    return result;\n}\nclass Renderer {\n    gl;\n    #gBuffer;\n    #quad;\n    #backBufferProgram;\n    #frameBuffer;\n    #offscreenCanvas;\n    constructor() {\n        this.#frameBuffer = null;\n        this.#offscreenCanvas = new OffscreenCanvas(1, 1);\n        this.gl = this.#offscreenCanvas.getContext(\"webgl2\", {\n            alpha: false,\n            premultipliedAlpha: false,\n        });\n        if (!this.gl) {\n            console.error(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\n        }\n        this.#gBuffer = new GBuffer(this.gl, {\n            color: {\n                internalFormat: this.gl.RGBA,\n                format: this.gl.RGBA,\n                type: this.gl.UNSIGNED_BYTE,\n                opts: {\n                    filter: this.gl.NEAREST,\n                },\n            },\n        });\n        this.#quad = new Quad(this.gl);\n        this.#backBufferProgram = new ShaderProgram(this.gl, QuadVert, BackBufferFrag);\n    }\n    useScaled({ width, height }, pixelMultiplier, cb) {\n        if (!width || !height) {\n            return null;\n        }\n        this.#offscreenCanvas.width = width * pixelMultiplier;\n        this.#offscreenCanvas.height = height * pixelMultiplier;\n        const { color } = this.#gBuffer.use({ width, height }, (textures) => {\n            this.#frameBuffer = new FrameBuffer(this.gl, {\n                outAttributes: { o_color: { type: \"vec4\", location: 0 } },\n            }, {\n                o_color: textures.color,\n            });\n        });\n        this.gl.viewport(0, 0, width, height);\n        this.#frameBuffer.bind(cb);\n        this.gl.viewport(0, 0, width * pixelMultiplier, height * pixelMultiplier);\n        this.#backBufferProgram.use((s) => {\n            s.setUniforms({ u_texture: color });\n            this.#quad.bind(s, { position: \"a_position\" }, (q) => q.draw());\n        });\n        return this.#offscreenCanvas.transferToImageBitmap();\n    }\n    use({ width, height }, cb) {\n        this.#offscreenCanvas.width = width;\n        this.#offscreenCanvas.height = height;\n        this.gl.viewport(0, 0, width, height);\n        cb();\n        return this.#offscreenCanvas.transferToImageBitmap();\n    }\n}\n", "import GameRunner from \"./game-runner.js\";\nexport function createGameClient() {\n    // @ts-ignore\n    return new (require(process.env.GAME_CLIENT).default)();\n}\nexport function createEditorClient() {\n    if (process.env.NODE_ENV === \"development\") {\n        // @ts-ignore\n        return new (require(process.env.GAME_EDITOR).default)();\n    }\n    else {\n        return null;\n    }\n}\n// @ts-ignore\nif (!window.__PIXELHEART__) {\n    // @ts-ignore\n    window.__PIXELHEART__ = true;\n    const root = document.getElementById(\"root\");\n    if (root) {\n        // @ts-ignore\n        const props = {\n            fixedUpdate: 1000 / 60,\n            saveKey: \"pixelheart\",\n            // @ts-ignore\n            game: createGameClient(),\n            editor: createEditorClient(),\n            screen: {\n                incrementSize: 16,\n                preferredWidthIncrements: 20,\n                preferredHeightIncrements: 13,\n            },\n            container: root,\n        };\n        GameRunner(props);\n    }\n}\n"],
  "mappings": "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AC,EAAA,kBAAMH,GAAQ,CACZ,KAAQ,YACR,QAAW,CACT,QAAW,CACT,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,IACP,KAAQ,EACR,OAAU,IACV,MAAS,EACX,CACF,CACF,EACA,SAAY,CACV,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,IACP,KAAQ,EACR,OAAU,IACV,MAAS,EACX,CACF,CACF,EACA,SAAY,CACV,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,IACP,KAAQ,EACR,OAAU,IACV,MAAS,EACX,CACF,CACF,EACA,WAAc,CACZ,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,IACP,KAAQ,EACR,OAAU,IACV,MAAS,EACX,CACF,CACF,EACA,WAAc,CACZ,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,IACP,KAAQ,EACR,OAAU,IACV,MAAS,EACX,CACF,CACF,EACA,QAAW,CACT,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,IACP,KAAQ,EACR,OAAU,IACV,MAAS,EACX,CACF,CACF,EACA,SAAY,CACV,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,IACP,KAAQ,EACR,OAAU,IACV,MAAS,EACX,CACF,CACF,EACA,SAAY,CACV,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,IACP,KAAQ,EACR,OAAU,GACV,MAAS,EACX,CACF,CACF,EACA,WAAc,CACZ,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,GACP,KAAQ,EACR,OAAU,GACV,MAAS,EACX,CACF,CACF,EACA,WAAc,CACZ,MAAS,GACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,GACP,KAAQ,EACR,OAAU,GACV,MAAS,EACX,CACF,CACF,EACA,QAAW,CACT,MAAS,GACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,GACP,KAAQ,EACR,OAAU,GACV,MAAS,EACX,CACF,CACF,EACA,QAAW,CACT,MAAS,GACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,GACP,KAAQ,EACR,OAAU,GACV,MAAS,EACX,CACF,CACF,EACA,MAAS,CACP,MAAS,GACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,GACP,KAAQ,EACR,OAAU,GACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,GACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,GACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,GACV,MAAS,EACX,CACF,CACF,EACA,MAAS,CACP,MAAS,GACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,GACP,KAAQ,EACR,OAAU,EACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,EACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,EACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,EACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,EACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,EACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,EACV,MAAS,GACX,EACA,CACE,IAAO,GACP,KAAQ,IACR,OAAU,EACV,MAAS,GACX,CACF,CACF,CACF,EACA,QAAW,CACT,GACA,UACA,WACA,WACA,aACA,aACA,UACA,WACA,WACA,aACA,aACA,UACA,UACA,QACA,OACF,EACA,KAAQ,CACN,QAAW,oGACX,SAAY,qGACZ,OAAU,mGACV,SAAY,oGACd,CACF,EACOC,GAAQD,KC9Qf,IAEUI,GAEHC,GAJPC,GAAAC,EAAA,kBACID,KACMF,GAAM,CAAK,MAAQ,IAAI,OAAS,IAAI,cAAgB,CAAC,EAAI,GAAG,EAAI,EAAE,EAAE,YAAc,YAAY,QAAU,mEAAmE,IAAM,yFAAyF,K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S,EACX,CACF,CACF,EACA,OAAU,CACR,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,GACP,KAAQ,EACR,OAAU,GACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,GACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,GACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,GACV,MAAS,EACX,CACF,CACF,EACA,OAAU,CACR,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,GACP,KAAQ,EACR,OAAU,GACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,GACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,GACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,GACV,MAAS,EACX,CACF,CACF,EACA,OAAU,CACR,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,GACP,KAAQ,EACR,OAAU,EACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,EACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,EACV,MAAS,EACX,EACA,CACE,IAAO,GACP,KAAQ,GACR,OAAU,EACV,MAAS,EACX,CACF,CACF,CACF,EACA,QAAW,CACT,GACA,SACA,SACA,SACA,QACF,EACA,KAAQ,CACN,QAAW,oGACX,SAAY,qGACZ,OAAU,mGACV,SAAY,oGACd,CACF,EACOC,GAAQD,KC9If,IAAMI,GA4BCC,GA5BPC,GAAAC,EAAA,kBAAMH,GAAQ,CACZ,KAAQ,KACR,QAAW,CACT,MAAS,CACP,MAAS,EACT,MAAS,GACT,OAAU,GACV,OAAU,CACR,CACE,IAAO,GACP,KAAQ,EACR,OAAU,EACV,MAAS,EACX,CACF,CACF,CACF,EACA,QAAW,CACT,GACA,OACF,EACA,KAAQ,CACN,QAAW,6FACX,SAAY,8FACZ,OAAU,4FACV,SAAY,6FACd,CACF,EACOC,GAA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",
  "names": ["round", "a", "EPSILON", "ARRAY_TYPE", "RANDOM", "degree", "radian", "init_common", "__esmMin", "mat3_exports", "__export", "add", "adjoint", "clone", "copy", "create", "determinant", "equals", "exactEquals", "frob", "fromMat2d", "fromMat4", "fromQuat", "fromRotation", "fromScaling", "fromTranslation", "fromValues", "identity", "invert", "mul", "multiply", "multiplyScalar", "multiplyScalarAndAdd", "normalFromMat4", "projection", "rotate", "scale", "set", "str", "sub", "subtract", "translate", "transpose", "out", "ARRAY_TYPE", "a", "m00", "m01", "m02", "m10", "m11", "m12", "m20", "m21", "m22", "a01", "a02", "a12", "a00", "a10", "a11", "a20", "a21", "a22", "b01", "b11", "b21", "det", "b", "b00", "b02", "b10", "b12", "b20", "b22", "v", "x", "y", "rad", "s", "c", "q", "z", "w", "x2", "y2", "z2", "xx", "yx", "yy", "zx", "zy", "zz", "wx", "wy", "wz", "a03", "a13", "a23", "a30", "a31", "a32", "a33", "b03", "b04", "b05", "b06", "b07", "b08", "b09", "width", "height", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "EPSILON", "init_mat3", "__esmMin", "init_common", "vec3_exports", "__export", "add", "angle", "bezier", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "hermite", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "rotateX", "rotateY", "rotateZ", "round", "scale", "scaleAndAdd", "set", "slerp", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat3", "transformMat4", "transformQuat", "zero", "out", "ARRAY_TYPE", "a", "x", "y", "z", "b", "ax", "ay", "az", "bx", "by", "bz", "t", "sinTotal", "ratioA", "ratioB", "c", "d", "factorTimes2", "factor1", "factor2", "factor3", "factor4", "inverseFactor", "inverseFactorTimesTwo", "RANDOM", "zScale", "m", "w", "q", "qx", "qy", "qz", "qw", "vx", "vy", "vz", "tx", "ty", "tz", "rad", "p", "r", "mag", "cosine", "a0", "a1", "a2", "b0", "b1", "b2", "EPSILON", "init_vec3", "__esmMin", "init_common", "vec", "stride", "offset", "count", "fn", "arg", "i", "l", "vec4_exports", "__export", "add", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat4", "transformQuat", "zero", "out", "ARRAY_TYPE", "a", "x", "y", "z", "w", "b", "u", "v", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "t", "ax", "ay", "az", "aw", "v1", "v2", "v3", "v4", "s1", "s2", "rand", "RANDOM", "d", "m", "q", "qx", "qy", "qz", "qw", "vx", "vy", "vz", "tx", "ty", "tz", "a0", "a1", "a2", "a3", "b0", "b1", "b2", "b3", "EPSILON", "init_vec4", "__esmMin", "init_common", "vec", "stride", "offset", "count", "fn", "arg", "i", "l", "vec2_exports", "__export", "add", "angle", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "rotate", "round", "scale", "scaleAndAdd", "set", "signedAngle", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat2", "transformMat2d", "transformMat3", "transformMat4", "zero", "out", "ARRAY_TYPE", "a", "x", "y", "b", "z", "t", "ax", "ay", "RANDOM", "m", "rad", "p0", "p1", "sinC", "cosC", "bx", "by", "a0", "a1", "b0", "b1", "EPSILON", "init_vec2", "__esmMin", "init_common", "vec", "stride", "offset", "count", "fn", "arg", "i", "l", "init_esm", "__esmMin", "init_mat3", "init_vec2", "init_vec3", "init_vec4", "ClientEditorConnection", "init_editor", "__esmMin", "#eventHandlers", "#requestBuffer", "#socket", "#createSocket", "e", "handler", "request", "action", "cb", "i", "VP", "SpriteViewProjection", "Quad", "init_geometry", "__esmMin", "init_esm", "mat3_exports", "#vertexBuffer", "#gl", "#vao", "#vaoInstances", "#vaoHash", "gl", "vertices", "#getAttributes", "program", "attributes", "ptrs", "scope", "a", "instances", "instanceAttributesHash", "hash", "instanceCount", "getImageState", "registerImage", "url", "reload", "devImages", "index", "urlKey", "images", "reloadImage", "spriteSheet", "urls", "u", "loadTextureFromUrl", "ctx", "opts", "image", "loadImageFromUrl", "value", "TEXTURE", "loadTextureFromImage", "newUrl", "loadCPUReadableTextureFromUrl", "resolve", "reject", "img", "err", "texture", "init_images", "__esmMin", "getShaderState", "registerShader", "vertexShaderSource", "fragmentShaderSource", "reload", "devShaders", "vs", "fs", "reloadShader", "shader", "src", "state", "shaderInstances", "createTexture", "gl", "internalFormat", "format", "type", "width", "height", "opts", "texture", "ShaderProgram", "InstanceBuffer", "GBuffer", "FrameBuffer", "init_gl_utils", "__esmMin", "init_images", "#gl", "#program", "#vSource", "#fSource", "ctx", "#createProgram", "e", "attributeCount", "i", "info", "key", "location", "uniformCount", "program", "vertexShader", "vertexShaderSourceContent", "output", "error", "fragmentShader", "fragmentShaderSourceContent", "scope", "uniforms", "index", "u", "value", "metadata", "TEXTURE", "#buffer", "#instanceSize", "#instanceCount", "#attributeLayouts", "attributes", "attr", "loader", "attributeType", "b", "o", "partialLayout", "instances", "offset", "j", "a", "attrPtr", "col", "#formats", "textures", "resizeScope", "t", "_FrameBuffer", "#frameBuffer", "#activeStack", "attachments", "attachmentList", "getSpriteState", "registerSprite", "spriteSheet", "reload", "devSprites", "sprite", "reloadSprite", "k", "loadSpriteSheet", "ctx", "sheet", "loader", "textures", "loadSpriteSheetSync", "value", "createSpriteFrames", "newSheet", "TEXTURE", "p", "n", "frames", "f", "vec4_exports", "effect", "position", "frame", "Tangent", "Normal", "Binormal", "TBN", "ToTangentSpace", "SpriteAnimator", "init_sprite", "__esmMin", "init_esm", "init_images", "vec3_exports", "mat3_exports", "#sheet", "#sprite", "#spriteName", "frameRate", "fixedDelta", "newSprite", "offset", "init_game", "__esmMin", "coordinates_exports", "__export", "TILE_SIZE", "pickAbsoluteTileFromRelative", "toAbsoluteFromRelative", "toAbsoluteTileFromAbsolute", "toRelativeFromAbsolute", "toRelativeFromRelativeTile", "toRelativeTileFromAbsolute", "toRelativeTileFromAbsoluteTile", "toRelativeTileFromRelative", "toScreenSpaceFromAbsoluteTile", "out", "relative", "screen", "vec2_exports", "absolute", "vec4_exports", "absoluteTile", "ssp", "relativeTile", "scale", "init_coordinates", "__esmMin", "init_esm", "decodeMapTile", "buffer", "index", "encodeMapTile", "value", "loadMapContainer", "ctx", "tileSize", "map", "loader", "sprite", "m", "loadSpriteSheet", "loadCPUReadableTextureFromUrl", "MapData", "init_map", "__esmMin", "init_esm", "init_coordinates", "init_images", "init_sprite", "vec4_exports", "vec2_exports", "screenAbsolutePosition", "ssp", "toAbsoluteTileFromAbsolute", "x", "y", "buff", "math_exports", "__export", "hash", "smoothstep", "edge0", "edge1", "x", "y", "Q", "R", "temp", "init_math", "__esmMin", "ResourceLoader", "init_resource_loader", "__esmMin", "#values", "#promise", "resources", "keys", "key", "values", "obj", "index", "callback", "init_dist", "__esmMin", "init_game", "init_editor", "init_map", "init_sprite", "init_geometry", "init_gl_utils", "init_images", "init_coordinates", "init_math", "init_resource_loader", "init_gl_matrix", "__esmMin", "init_esm", "Constants", "value", "deferred_lighting_frag_default", "init_deferred_lighting_frag", "__esmMin", "Constants", "value", "deferred_lighting_vert_default", "init_deferred_lighting_vert", "__esmMin", "Constants", "value", "deferred_sprite_frag_default", "init_deferred_sprite_frag", "__esmMin", "Constants", "value", "deferred_sprite_vert_default", "init_deferred_sprite_vert", "__esmMin", "deferredTextureLoader", "ctx", "sheet", "diffuseTexture", "normalTexture", "specularTexture", "emissiveTexture", "loadTextureFromUrl", "DeferredSpriteAnimator", "BLACK", "FULL_UV", "DeferredSpriteEffect", "init_deferred_sprite_effect", "__esmMin", "init_dist", "init_gl_matrix", "init_deferred_lighting_frag", "init_deferred_lighting_vert", "init_deferred_sprite_frag", "init_deferred_sprite_vert", "SpriteAnimator", "vec3_exports", "mat3_exports", "#gl", "#gBufferProgram", "#instanceBuffer", "#pending", "#lightingProgram", "#lightBuffer", "#pendingDirectionalLights", "#pendingPointLights", "#texture", "#quad", "#gBuffer", "#frameBuffers", "ShaderProgram", "deferred_sprite_vert_default", "deferred_sprite_frag_default", "InstanceBuffer", "instance", "deferred_lighting_vert_default", "deferred_lighting_frag_default", "Quad", "GBuffer", "opts", "fillScope", "maskScope", "g", "gBuffer", "FrameBuffer", "f", "vp", "#end", "previousBlend", "previousBlendSrcFunc", "previousBlendDestFunc", "p", "ToTangentSpace", "Constants", "q", "light", "SpriteViewProjection", "intersectingRadius", "mvp", "uv", "param", "TEXTURE", "screenSpaceRect", "textureCoords", "Constants", "value", "sprite_frag_default", "init_sprite_frag", "__esmMin", "Constants", "value", "sprite_vert_default", "init_sprite_vert", "__esmMin", "simpleTextureLoader", "ctx", "sheet", "loadTextureFromUrl", "SimpleSpriteEffect", "init_sprite_effect", "__esmMin", "init_dist", "init_gl_matrix", "init_sprite_frag", "init_sprite_vert", "#gl", "#program", "#instanceBuffer", "#quad", "#texture", "#pending", "#alpha", "ShaderProgram", "sprite_vert_default", "sprite_frag_default", "InstanceBuffer", "instance", "Quad", "scope", "#end", "param", "alpha", "rect", "textureCoords", "mvp", "mat3_exports", "SpriteViewProjection", "uv", "q", "Constants", "value", "solid_frag_default", "init_solid_frag", "__esmMin", "Constants", "value", "solid_vert_default", "init_solid_vert", "__esmMin", "SolidEffect", "init_solid_effect", "__esmMin", "init_dist", "init_gl_matrix", "init_solid_frag", "init_solid_vert", "#gl", "#program", "#instanceBuffer", "#quad", "#pending", "ctx", "ShaderProgram", "solid_vert_default", "solid_frag_default", "InstanceBuffer", "instance", "Quad", "scope", "vec2_exports", "SpriteViewProjection", "#end", "screen", "width", "bounds", "fillColor", "borderColor", "m", "mat3_exports", "vec4_exports", "q", "Constants", "init_gaussian_blur_frag", "__esmMin", "Constants", "value", "quad_vert_default", "init_quad_vert", "__esmMin", "init_gaussian_blur", "__esmMin", "init_dist", "init_gaussian_blur_frag", "init_quad_vert", "init_dist", "__esmMin", "init_deferred_sprite_effect", "init_sprite_effect", "init_solid_effect", "init_gaussian_blur", "Sheet", "overworld_default", "init_overworld", "__esmMin", "Map", "overworld_default", "init_overworld", "__esmMin", "value", "nearest_blur_frag_default", "init_nearest_blur_frag", "__esmMin", "NearestBlurEffect", "init_nearest_blur", "__esmMin", "init_dist", "init_quad_vert", "init_nearest_blur_frag", "#gl", "#program", "#quad", "#blurBuffer", "ctx", "ShaderProgram", "quad_vert_default", "nearest_blur_frag_default", "Quad", "input", "blurStrength", "textures", "i", "TEXTURE", "createTexture", "FrameBuffer", "previousBlend", "b", "p", "q", "Sheet", "character_default", "init_character", "__esmMin", "Sheet", "ui_default", "init_ui", "__esmMin", "value", "water_frag_default", "init_water_frag", "__esmMin", "WaterEffect", "init_water_effect", "__esmMin", "init_dist", "init_gl_matrix", "init_quad_vert", "init_water_frag", "#gl", "#program", "#quad", "ctx", "ShaderProgram", "quad_vert_default", "water_frag_default", "Quad", "time", "offset", "screen", "mask", "depth", "p", "Normal", "Tangent", "Binormal", "ToTangentSpace", "vec2_exports", "coordinates_exports", "TEXTURE", "q", "client_exports", "__export", "Game", "CONTROLLER_DEADZONE", "TOUCH_DEADZONE", "CURRENT_SERIALIZATION_VERSION", "MAX_TIME", "init_client", "__esmMin", "init_dist", "init_gl_matrix", "init_overworld", "init_nearest_blur", "init_character", "init_ui", "init_water_effect", "ctx", "previousState", "DeferredSpriteEffect", "SimpleSpriteEffect", "SolidEffect", "ResourceLoader", "loadSpriteSheet", "ui_default", "simpleTextureLoader", "loadMapContainer", "coordinates_exports", "overworld_default", "deferredTextureLoader", "c", "character_default", "DeferredSpriteAnimator", "vec2_exports", "vec4_exports", "WaterEffect", "NearestBlurEffect", "state", "result", "r", "fixedDelta", "direction", "gp", "k", "v", "_", "currentTouch", "newDirection", "movement", "renderOffset", "mapSize", "sin", "math_exports", "sunDirection", "vec3_exports", "_delta", "ssp", "l", "s", "pass", "tileWidth", "tileHeight", "x", "y", "mapX", "mapY", "position", "tile", "tileName", "offset", "mask", "pos", "lightingTexture", "moveTouch", "init_esm", "init_editor", "init_geometry", "init_gl_utils", "init_images", "init_sprite", "QuadVert", "BackBufferFrag", "GameRunner", "props", "game", "editor", "canvas", "target", "renderer", "Renderer", "contextScreen", "contextSafeScreen", "selectedGamepadIndex", "context", "ClientEditorConnection", "width", "height", "c", "vec2_exports", "vec4_exports", "out", "relativeRect", "pixelMultiplier", "e", "_", "rect", "i", "touch", "newTouch", "existingTouch", "lastTime", "startup", "saveState", "editorSaveState", "gameState", "ex", "editorState", "reloadShader", "reloadImage", "reloadSprite", "links", "l", "href", "hrefBase", "match", "newLink", "v", "f", "savedState", "result", "module", "contextLost", "key", "currentParent", "accumulatedTime", "nextFrame", "renderToTarget", "renderTarget", "callback", "render", "currentTime", "frameTime", "scene", "handlePersist", "handleResize", "parent", "xOffset", "yOffset", "resizeObserver", "entries", "entry", "newParent", "#gBuffer", "#quad", "#backBufferProgram", "#frameBuffer", "#offscreenCanvas", "GBuffer", "Quad", "ShaderProgram", "cb", "color", "textures", "FrameBuffer", "q", "createGameClient", "createEditorClient", "root", "props", "GameRunner"]
}
