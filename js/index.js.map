{
  "version": 3,
  "sources": ["../../node_modules/gl-matrix/esm/common.js", "../../node_modules/gl-matrix/esm/mat3.js", "../../node_modules/gl-matrix/esm/vec3.js", "../../node_modules/gl-matrix/esm/vec4.js", "../../node_modules/gl-matrix/esm/vec2.js", "../../src/client/game-runner.ts", "../../src/client/images.ts", "../../src/client/sprite-common.ts", "../../src/client/geometry.ts", "../../src/client/gl-utils.ts", "../../src/client/generated/shaders/deferred-sprite.vert.ts", "../../src/client/generated/shaders/deferred-sprite.frag.ts", "../../src/client/generated/shaders/deferred-lighting.vert.ts", "../../src/client/generated/shaders/deferred-lighting.frag.ts", "../../src/client/deferred-sprite-effect.ts", "../../src/client/generated/shaders/sprite.vert.ts", "../../src/client/generated/shaders/sprite.frag.ts", "../../src/client/sprite-effect.ts", "../../src/client/generated/shaders/quad.vert.ts", "../../src/client/generated/shaders/water.frag.ts", "../../src/client/water-effect.ts", "../../src/client/generated/shaders/nearest-blur.frag.ts", "../../src/client/nearest-blur.ts", "../../src/client/generated/shaders/solid.vert.ts", "../../src/client/generated/shaders/solid.frag.ts", "../../src/client/solid-effect.ts", "../../src/shared/generated/sprites/overworld.ts", "../../src/shared/generated/maps/overworld.ts", "../../src/shared/generated/sprites/character.ts", "../../src/shared/generated/sprites/ui.ts", "../../src/client/coordinates.ts", "../../src/shared/map-format.ts", "../../src/client/map.ts", "../../src/client/game.ts", "../../src/client/index.ts"],
  "sourcesContent": ["/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();", "import { vec4, vec2, ReadonlyVec4 } from \"gl-matrix\";\n\nexport interface GameContext {\n  gl: WebGL2RenderingContext;\n  createOffscreenCanvas: (\n    width: number,\n    height: number,\n    settings?: CanvasRenderingContext2DSettings\n  ) => CanvasRenderingContext2D;\n  canvas: HTMLCanvasElement;\n  getGamepad: () => Gamepad | null;\n  keys: {\n    down: Set<string>;\n    pressed: Set<string>;\n  };\n  mouse: {\n    position: vec2;\n    wheel: vec2;\n    down: Array<boolean>;\n    clicked: Array<boolean>;\n  };\n  touches: {\n    down: Map<number, { started: number; position: vec2 }>;\n    ended: Map<number, { position: vec2 }>;\n  };\n  screen: {\n    width: number;\n    height: number;\n    safeArea: {\n      width: number;\n      height: number;\n      boundingRect: vec4;\n    };\n    toScreenSpace: (out: vec4, relativeRect: ReadonlyVec4) => vec4;\n  };\n}\n\ninterface GameProps<T, U> {\n  fixedUpdate: number;\n  start: (ctx: GameContext, previousState?: U) => Promise<T>;\n  saveKey: string;\n  save: (state: T) => U;\n  update: (ctx: GameContext, state: T, fixedDelta: number) => void;\n  draw: (ctx: GameContext, state: T, delta: number) => void;\n  screen: {\n    incrementSize: number;\n    preferredWidthIncrements: number;\n    preferredHeightIncrements: number;\n  };\n}\n\nexport default function GameRunner<T, U>(\n  props: GameProps<T, U>\n): HTMLCanvasElement | null {\n  const canvas = document.createElement(\"canvas\");\n  canvas.style.imageRendering = \"pixelated\";\n\n  const gl = canvas.getContext(\"webgl2\", {\n    alpha: false,\n    premultipliedAlpha: false,\n  });\n\n  if (!gl) {\n    console.error(\n      \"Unable to initialize WebGL. Your browser or machine may not support it.\"\n    );\n    return null;\n  }\n\n  let selectedGamepadIndex: number | null = null;\n\n  const contextScreen = {\n    width: 1,\n    height: 1,\n  };\n  const contextSafeScreen = {\n    offsetLeft: 0,\n    offsetTop: 0,\n    width: 1,\n    height: 1,\n  };\n\n  const context: GameContext = {\n    gl,\n    createOffscreenCanvas: (\n      width: number,\n      height: number,\n      settings?: CanvasRenderingContext2DSettings\n    ) => {\n      const offscreenCanvas = document.createElement(\"canvas\");\n      offscreenCanvas.width = width;\n      offscreenCanvas.height = height;\n      const offscreen = offscreenCanvas.getContext(\"2d\", settings);\n      if (!offscreen) {\n        console.error(\n          \"Unable to initialize OffscreenCanvas. Your browser or machine may not support it.\"\n        );\n      }\n      return offscreen!;\n    },\n    canvas,\n    getGamepad: () => {\n      if (selectedGamepadIndex !== null) {\n        return navigator.getGamepads()[selectedGamepadIndex];\n      }\n      return null;\n    },\n    keys: {\n      down: new Set<string>(),\n      pressed: new Set<string>(),\n    },\n    mouse: {\n      position: vec2.create(),\n      wheel: vec2.create(),\n      down: [],\n      clicked: [],\n    },\n    touches: {\n      down: new Map(),\n      ended: new Map(),\n    },\n    screen: {\n      get width(): number {\n        return contextScreen.width;\n      },\n      get height(): number {\n        return contextScreen.height;\n      },\n      safeArea: {\n        get width(): number {\n          return contextScreen.width;\n        },\n        get height(): number {\n          return contextScreen.height;\n        },\n        get boundingRect(): vec4 {\n          return vec4.fromValues(\n            contextSafeScreen.offsetTop,\n            contextSafeScreen.offsetLeft + contextSafeScreen.width,\n            contextSafeScreen.offsetTop + contextSafeScreen.height,\n            contextSafeScreen.offsetLeft\n          );\n        },\n      },\n      toScreenSpace: (out: vec4, relativeRect: ReadonlyVec4) =>\n        vec4.set(\n          out,\n          relativeRect[0] / contextScreen.height,\n          relativeRect[1] / contextScreen.width,\n          relativeRect[2] / contextScreen.height,\n          relativeRect[3] / contextScreen.width\n        ),\n    },\n  };\n\n  let pixelMultiplier = 1;\n\n  window.addEventListener(\"gamepadconnected\", (e) => {\n    selectedGamepadIndex = e.gamepad.index;\n  });\n  window.addEventListener(\"gamepaddisconnected\", (_) => {\n    selectedGamepadIndex = null;\n  });\n  window.addEventListener(\"keydown\", (e) => {\n    context.keys.down.add(e.key);\n    if (e.altKey || e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n  });\n  window.addEventListener(\"keyup\", (e) => {\n    if (context.keys.down.has(e.key)) {\n      context.keys.pressed.add(e.key);\n    }\n    context.keys.down.delete(e.key);\n    if (e.altKey || e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n  });\n  canvas.addEventListener(\"wheel\", (e) => {\n    if (e.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      vec2.set(context.mouse.wheel, e.deltaX, e.deltaY);\n    }\n  });\n  canvas.addEventListener(\"mousemove\", (e) => {\n    const rect = canvas.getBoundingClientRect();\n    vec2.set(\n      context.mouse.position,\n      (e.clientX - rect.left) / pixelMultiplier,\n      (e.clientY - rect.top) / pixelMultiplier\n    );\n  });\n  canvas.addEventListener(\"mousedown\", (e) => {\n    context.mouse.down[e.button] = true;\n  });\n  canvas.addEventListener(\"mouseup\", (e) => {\n    if (context.mouse.down[e.button]) {\n      context.mouse.clicked[e.button] = true;\n    }\n    context.mouse.down[e.button] = false;\n  });\n  canvas.addEventListener(\"contextmenu\", (e) => {\n    e.preventDefault();\n  });\n  canvas.addEventListener(\"touchstart\", (e) => {\n    const rect = canvas.getBoundingClientRect();\n    for (let i = 0; i < e.changedTouches.length; ++i) {\n      const touch = e.changedTouches[i];\n      const newTouch = vec2.fromValues(\n        (touch.clientX - rect.left) / pixelMultiplier,\n        (touch.clientY - rect.top) / pixelMultiplier\n      );\n      if (\n        newTouch[0] >= 0 &&\n        newTouch[1] >= 0 &&\n        newTouch[0] <= context.screen.width &&\n        newTouch[1] <= context.screen.height\n      ) {\n        context.touches.down.set(touch.identifier, {\n          started: Date.now(),\n          position: newTouch,\n        });\n      }\n    }\n    e.preventDefault();\n  });\n  canvas.addEventListener(\"touchmove\", (e) => {\n    const rect = canvas.getBoundingClientRect();\n    for (let i = 0; i < e.changedTouches.length; ++i) {\n      const touch = e.changedTouches[i];\n      const existingTouch = context.touches.down.get(touch.identifier);\n      if (existingTouch) {\n        vec2.set(\n          existingTouch.position,\n          (touch.clientX - rect.left) / pixelMultiplier,\n          (touch.clientY - rect.top) / pixelMultiplier\n        );\n      }\n    }\n    e.preventDefault();\n  });\n  canvas.addEventListener(\"touchend\", (e) => {\n    const rect = canvas.getBoundingClientRect();\n    for (let i = 0; i < e.changedTouches.length; ++i) {\n      const touch = e.changedTouches[i];\n      const existingTouch = context.touches.down.get(touch.identifier);\n      if (existingTouch) {\n        vec2.set(\n          existingTouch.position,\n          (touch.clientX - rect.left) / pixelMultiplier,\n          (touch.clientY - rect.top) / pixelMultiplier\n        );\n        context.touches.down.delete(touch.identifier);\n        context.touches.ended.set(touch.identifier, {\n          position: existingTouch.position,\n        });\n      }\n    }\n    e.preventDefault();\n  });\n  canvas.addEventListener(\"touchcancel\", (e) => {\n    for (let i = 0; i < e.changedTouches.length; ++i) {\n      const touch = e.changedTouches[i];\n      const existingTouch = context.touches.down.get(touch.identifier);\n      if (existingTouch) {\n        context.touches.down.delete(touch.identifier);\n      }\n    }\n    e.preventDefault();\n  });\n\n  let lastTime = performance.now();\n  let contextLost = false;\n  let state: T | null = null;\n\n  const startup = async () => {\n    const saveState = localStorage.getItem(props.saveKey);\n    try {\n      state = await props.start(\n        context,\n        saveState ? (JSON.parse(saveState) as U) : undefined\n      );\n      lastTime = performance.now();\n    } catch (ex) {\n      console.warn(ex);\n      // if the saved state fails to load, try again with a fresh state\n      state = await props.start(context);\n      lastTime = performance.now();\n    }\n  };\n\n  canvas.addEventListener(\n    \"webglcontextlost\",\n    (e) => {\n      e.preventDefault();\n      contextLost = true;\n      console.warn(\"WebGL context lost, saving state...\");\n      if (state) {\n        localStorage.setItem(props.saveKey, JSON.stringify(props.save(state)));\n      }\n    },\n    false\n  );\n  canvas.addEventListener(\n    \"webglcontextrestored\",\n    (e) => {\n      e.preventDefault();\n      context.gl = canvas.getContext(\"webgl2\")!;\n      console.warn(\"WebGL context restored, loading state...\");\n      startup().then((_) => {\n        contextLost = false;\n      });\n    },\n    false\n  );\n\n  startup();\n\n  let accumulatedTime = 0;\n  let nextFrame: number | null = null;\n  const render = () => {\n    if (state) {\n      const currentTime = performance.now();\n      const frameTime = currentTime - lastTime;\n      lastTime = currentTime;\n      accumulatedTime += frameTime;\n\n      while (accumulatedTime >= props.fixedUpdate) {\n        props.update(context, state, props.fixedUpdate);\n        context.mouse.clicked = [];\n        vec2.set(context.mouse.wheel, 0, 0);\n        context.touches.ended.clear();\n        context.keys.pressed.clear();\n        accumulatedTime -= props.fixedUpdate;\n      }\n\n      if (!contextLost) {\n        props.draw(context, state, frameTime);\n      }\n    }\n    nextFrame = requestAnimationFrame(render);\n  };\n\n  nextFrame = requestAnimationFrame(render);\n\n  const handlePersist = () => {\n    if (document.visibilityState === \"hidden\") {\n      if (state) {\n        console.warn(\"Visibility changing, saving state...\");\n        localStorage.setItem(props.saveKey, JSON.stringify(props.save(state)));\n      }\n      if (nextFrame) {\n        cancelAnimationFrame(nextFrame);\n      }\n    } else {\n      lastTime = performance.now();\n      accumulatedTime = 0;\n      nextFrame = requestAnimationFrame(render);\n    }\n  };\n  window.addEventListener(\"visibilitychange\", handlePersist);\n\n  const handleResize = () => {\n    pixelMultiplier = 1;\n    if (window.innerWidth >= window.innerHeight) {\n      contextScreen.width =\n        Math.min(\n          props.screen.preferredWidthIncrements,\n          Math.floor(window.innerWidth / props.screen.incrementSize)\n        ) * props.screen.incrementSize;\n      while (contextScreen.width * (pixelMultiplier + 1) < window.innerWidth) {\n        ++pixelMultiplier;\n      }\n      contextScreen.height =\n        Math.floor(\n          window.innerHeight / (props.screen.incrementSize * pixelMultiplier)\n        ) * props.screen.incrementSize;\n    } else {\n      contextScreen.height =\n        Math.min(\n          props.screen.preferredHeightIncrements,\n          Math.floor(window.innerHeight / props.screen.incrementSize)\n        ) * props.screen.incrementSize;\n      while (\n        contextScreen.height * (pixelMultiplier + 1) <\n        window.innerHeight\n      ) {\n        ++pixelMultiplier;\n      }\n      contextScreen.width =\n        Math.floor(\n          window.innerWidth / (props.screen.incrementSize * pixelMultiplier)\n        ) * props.screen.incrementSize;\n    }\n    while (contextScreen.width * pixelMultiplier < window.innerWidth) {\n      contextScreen.width += props.screen.incrementSize;\n    }\n    while (contextScreen.height * pixelMultiplier < window.innerHeight) {\n      contextScreen.height += props.screen.incrementSize;\n    }\n\n    const xOffset =\n      (contextScreen.width * pixelMultiplier - window.innerWidth) / 2;\n    const yOffset =\n      (contextScreen.height * pixelMultiplier - window.innerHeight) / 2;\n\n    contextSafeScreen.offsetLeft = xOffset;\n    contextSafeScreen.offsetTop = yOffset;\n    contextSafeScreen.width = contextScreen.width - xOffset * 2;\n    contextSafeScreen.height = contextScreen.height - yOffset * 2;\n\n    if (canvas) {\n      canvas.setAttribute(\"width\", contextScreen.width.toString());\n      canvas.setAttribute(\"height\", contextScreen.height.toString());\n\n      canvas.style.top = -yOffset + \"px\";\n      canvas.style.left = -xOffset + \"px\";\n      canvas.style.width = pixelMultiplier * contextScreen.width + \"px\";\n      canvas.style.height = pixelMultiplier * contextScreen.height + \"px\";\n    }\n  };\n\n  handleResize();\n  window.addEventListener(\"resize\", handleResize);\n\n  return canvas;\n}\n", "import { GameContext } from \"./game-runner\";\n\nexport const TEXTURE = Symbol();\n\nexport interface GPUTexture {\n  [TEXTURE]: WebGLTexture;\n  width: number;\n  height: number;\n}\n\nexport interface CPUReadableTexture extends GPUTexture {\n  image: HTMLImageElement;\n}\n\nexport function loadImageFromUrl(url: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = (err) => reject(err);\n    img.src = url;\n  });\n}\n\nexport async function loadTextureFromUrl(\n  ctx: GameContext,\n  url: string,\n  opts?: {\n    filter?: number;\n    wrap?: number;\n  }\n): Promise<GPUTexture> {\n  const image = await loadImageFromUrl(url);\n  return {\n    [TEXTURE]: loadTextureFromImage(ctx, image, opts),\n    width: image.width,\n    height: image.height,\n  };\n}\n\nexport async function loadCPUReadableTextureFromUrl(\n  ctx: GameContext,\n  url: string,\n  opts?: {\n    filter?: number;\n    wrap?: number;\n  }\n): Promise<CPUReadableTexture> {\n  const image = await loadImageFromUrl(url);\n  return {\n    image,\n    [TEXTURE]: loadTextureFromImage(ctx, image, opts),\n    width: image.width,\n    height: image.height,\n  };\n}\n\nexport function loadTextureFromImage(\n  ctx: GameContext,\n  img: HTMLImageElement,\n  opts?: {\n    filter?: number;\n    wrap?: number;\n  }\n): WebGLTexture {\n  const texture = ctx.gl.createTexture();\n  ctx.gl.activeTexture(ctx.gl.TEXTURE0);\n  ctx.gl.bindTexture(ctx.gl.TEXTURE_2D, texture);\n  ctx.gl.pixelStorei(ctx.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n  ctx.gl.texParameteri(\n    ctx.gl.TEXTURE_2D,\n    ctx.gl.TEXTURE_WRAP_S,\n    opts?.wrap || ctx.gl.CLAMP_TO_EDGE\n  );\n  ctx.gl.texParameteri(\n    ctx.gl.TEXTURE_2D,\n    ctx.gl.TEXTURE_WRAP_T,\n    opts?.wrap || ctx.gl.CLAMP_TO_EDGE\n  );\n  ctx.gl.texParameteri(\n    ctx.gl.TEXTURE_2D,\n    ctx.gl.TEXTURE_MIN_FILTER,\n    opts?.wrap || ctx.gl.LINEAR\n  );\n  ctx.gl.texParameteri(\n    ctx.gl.TEXTURE_2D,\n    ctx.gl.TEXTURE_MAG_FILTER,\n    opts?.wrap || ctx.gl.LINEAR\n  );\n  ctx.gl.texImage2D(\n    ctx.gl.TEXTURE_2D,\n    0,\n    ctx.gl.RGBA,\n    ctx.gl.RGBA,\n    ctx.gl.UNSIGNED_BYTE,\n    img\n  );\n  ctx.gl.bindTexture(ctx.gl.TEXTURE_2D, null);\n  return texture!;\n}\n\nlet offscreenPixel: CanvasRenderingContext2D | null = null;\n\nexport function getPixelData(\n  ctx: GameContext,\n  image: HTMLImageElement\n): (x: number, y: number) => Uint8ClampedArray | null {\n  if (!offscreenPixel) {\n    offscreenPixel = ctx.createOffscreenCanvas(image.width,image.height, { willReadFrequently: true});\n  }\n  offscreenPixel.canvas.width = Math.max(\n    image.width,\n    offscreenPixel.canvas.width\n  );\n  offscreenPixel.canvas.height = Math.max(\n    image.height,\n    offscreenPixel.canvas.height\n  );\n  offscreenPixel.drawImage(image, 0, 0, image.width, image.height);\n\n  return (x: number, y: number) => {\n    const pixelData = offscreenPixel!.getImageData(x, y, 1, 1).data;\n    return pixelData;\n  };\n}\n", "import { vec3, mat3, vec4, ReadonlyVec4 } from \"gl-matrix\";\nimport { GameContext } from \"./game-runner\";\n\nexport const Tangent = vec3.set(vec3.create(), 0, 1, 0);\nexport const Normal = vec3.set(vec3.create(), 0, 0, 1);\nexport const Binormal = vec3.cross(vec3.create(), Tangent, Normal);\n\nexport const TBN = mat3.set(\n  mat3.create(),\n  Tangent[0],\n  Binormal[0],\n  Normal[0],\n  Tangent[1],\n  Binormal[1],\n  Normal[1],\n  Tangent[2],\n  Binormal[2],\n  Normal[2]\n);\n\nexport const ToTangentSpace = mat3.transpose(mat3.create(), TBN);\n\nexport interface SpriteConfig {\n  readonly width: number;\n  readonly height: number;\n  readonly index: number;\n  readonly frames: Array<{\n    readonly top: number;\n    readonly left: number;\n    readonly bottom: number;\n    readonly right: number;\n  }>;\n}\n\nexport interface SpriteSheetConfig {\n  urls: {\n    diffuse: string;\n    normal: string;\n    specular: string;\n    emissive: string;\n  };\n  indexes: Array<string>;\n  sprites: Record<string, SpriteConfig>;\n}\n\nexport interface Sprite<T> {\n  readonly index: number;\n  readonly width: number;\n  readonly height: number;\n  readonly frames: Array<ReadonlyVec4>;\n  draw(\n    effect: SpriteEffect<T>,\n    position: ReadonlyVec4,\n    frame?: number\n  ): Sprite<T>;\n}\n\nexport interface SpriteSheet<T> extends Record<string, Sprite<T>> {}\n\nexport interface SpriteEffect<T> {\n  setTextures(texture: T): SpriteEffect<T>;\n  draw(rect: ReadonlyVec4, textureCoords: ReadonlyVec4): SpriteEffect<T>;\n}\n\nexport async function loadSpriteSheet<T>(\n  ctx: GameContext,\n  sheet: SpriteSheetConfig,\n  loader: (ctx: GameContext, sheet: SpriteSheetConfig) => Promise<T>\n): Promise<SpriteSheet<T>> {\n  const textures = await loader(ctx, sheet);\n  return {\n    ...Object.keys(sheet.sprites).reduce(\n      (p: Record<string, Sprite<T>>, n: string) => {\n        const sprite = sheet.sprites[n];\n        const frames = sprite.frames.map((f) =>\n          vec4.fromValues(f.top, f.right, f.bottom, f.left)\n        );\n        p[n] = {\n          index: sprite.index,\n          width: sprite.width,\n          height: sprite.height,\n          frames,\n          draw: (\n            effect: SpriteEffect<T>,\n            position: ReadonlyVec4,\n            frame: number = 0\n          ) => {\n            effect.setTextures(textures);\n            effect.draw(position, frames[Math.floor(frame) % frames.length]);\n            return p[n];\n          },\n        };\n        return p;\n      },\n      {}\n    ),\n  };\n}\n\nexport type SpriteIndex = Array<{\n  readonly sprite: string;\n  readonly index: number;\n  readonly frames: Array<ReadonlyVec4>;\n}>;\n\nexport function createSpriteIndex(\n  sheet: SpriteSheetConfig\n): SpriteIndex {\n  return sheet.indexes.map((s: string, i: number) => {\n    return i == 0\n      ? { sprite: \"\", index: i, frames: [] }\n      : {\n          sprite: s,\n          index: i,\n          frames: sheet.sprites[s].frames.map((f) =>\n            vec4.fromValues(f.top, f.right, f.bottom, f.left)\n          ),\n        };\n  });\n}\n\nexport class SpriteAnimator<T> {\n  #sheet: SpriteSheet<T>;\n  #sprite: Sprite<T>;\n  #spriteName: string;\n  frameRate: number;\n  frame: number;\n\n  constructor(spriteSheet: SpriteSheet<T>, sprite: string, frameRate: number) {\n    this.frameRate = frameRate;\n    this.frame = 0;\n    this.#sheet = spriteSheet;\n    this.#spriteName = sprite;\n    this.#sprite = spriteSheet[sprite];\n  }\n\n  tick(fixedDelta: number): void {\n    this.frame += fixedDelta * this.frameRate;\n    if (this.frame > this.#sprite.frames.length) {\n      this.frame -= this.#sprite.frames.length;\n    }\n  }\n\n  getSprite(): Sprite<T> {\n    return this.#sprite;\n  }\n\n  getSpriteName(): string {\n    return this.#spriteName;\n  }\n\n  setSprite(sprite: string) {\n    const newSprite = this.#sheet[sprite];\n    if (newSprite !== this.#sprite) {\n      this.#sprite = newSprite;\n      this.#spriteName = sprite;\n      this.frame = 0;\n    }\n  }\n\n  setSpriteOrTick(sprite: string, fixedDelta: number) {\n    const newSprite = this.#sheet[sprite];\n    if (newSprite !== this.#sprite) {\n      this.#sprite = newSprite;\n      this.#spriteName = sprite;\n      this.frame = 0;\n    } else {\n      this.tick(fixedDelta);\n    }\n  }\n\n  draw(effect: SpriteEffect<T>, position: ReadonlyVec4, offset: number = 0) {\n    this.#sprite.draw(effect, position, this.frame + offset);\n  }\n}\n", "import { mat3 } from \"gl-matrix\";\nimport {\n  Geometry,\n  AttributeType,\n  ShaderProgram,\n  ShaderSource,\n  InstanceBuffer,\n} from \"./gl-utils\";\n\nconst VP = mat3.create();\nmat3.scale(VP, VP, [1.0, -1.0]);\nmat3.translate(VP, VP, [-1.0, -1.0]);\nmat3.scale(VP, VP, [2.0, 2.0]);\n\nexport const SpriteViewProjection = VP;\n\n\ntype QuadAttributes<TVertParams extends ShaderSource> = {\n  position: AttributeType<TVertParams, \"vec2\">;\n};\n\nexport class Quad {\n  #vertexBuffer: WebGLBuffer;\n  #gl: WebGL2RenderingContext;\n  #vao: WebGLVertexArrayObject;\n  #vaoInstances: Object | null;\n  #vaoHash: string;\n\n  constructor(gl: WebGL2RenderingContext) {\n    this.#gl = gl;\n    this.#vaoHash = \"\";\n    this.#vaoInstances = null;\n    this.#vao = this.#gl.createVertexArray()!;\n\n    const vertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    this.#vertexBuffer = gl.createBuffer()!;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.#vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n\n  #getAttributes<TVertParams extends ShaderSource>(\n    program: ShaderProgram<TVertParams, any>,\n    attributes: QuadAttributes<TVertParams>\n  ): {\n    position: number;\n    hash: string;\n  } {\n    const ptrs = {\n      position: program.inAttributes[attributes.position].location,\n    };\n    return { ...ptrs, hash: `${ptrs.position}` };\n  }\n\n  bind<TVertParams extends ShaderSource>(\n    program: ShaderProgram<TVertParams, any>,\n    attributes: QuadAttributes<TVertParams>,\n    scope: (geometry: Geometry) => void\n  ): void {\n    const a = this.#getAttributes(program, attributes);\n\n    this.#gl.bindVertexArray(this.#vao);\n    if (this.#vaoHash !== a.hash || this.#vaoInstances !== null) {\n      this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, this.#vertexBuffer);\n      this.#gl.enableVertexAttribArray(a.position);\n      this.#gl.vertexAttribPointer(a.position, 2, this.#gl.FLOAT, false, 0, 0);\n      this.#vaoHash = a.hash;\n      this.#vaoInstances = null;\n    }\n\n    scope({\n      draw: () => {\n        this.#gl.drawArrays(this.#gl.TRIANGLE_STRIP, 0, 4);\n      },\n    });\n    this.#gl.bindVertexArray(null);\n  }\n\n  bindInstances<TVertParams extends ShaderSource, TInstance>(\n    program: ShaderProgram<TVertParams, any>,\n    attributes: QuadAttributes<TVertParams>,\n    instances: InstanceBuffer<TVertParams, TInstance>,\n    scope: (geometry: Geometry) => void\n  ): void {\n    const a = this.#getAttributes(program, attributes);\n    const instanceAttributesHash = instances.getAttributesHash(program);\n    const hash = `${a.hash}:${instanceAttributesHash}`;\n\n    this.#gl.bindVertexArray(this.#vao);\n    if (this.#vaoHash !== hash || this.#vaoInstances !== instances) {\n      this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, this.#vertexBuffer);\n      this.#gl.enableVertexAttribArray(a.position);\n      this.#gl.vertexAttribPointer(a.position, 2, this.#gl.FLOAT, false, 0, 0);\n      this.#vaoHash = hash;\n      this.#vaoInstances = instances.bind(program);\n    }\n\n    const instanceCount = instances.getInstanceCount();\n    scope({\n      draw: () => {\n        this.#gl.drawArraysInstanced(\n          this.#gl.TRIANGLE_STRIP,\n          0,\n          4,\n          instanceCount\n        );\n      },\n    });\n    this.#gl.bindVertexArray(null);\n  }\n}\n", "import {\n  ReadonlyVec2,\n  ReadonlyVec3,\n  ReadonlyVec4,\n  ReadonlyMat2,\n  ReadonlyMat3,\n  ReadonlyMat4,\n} from \"gl-matrix\";\n\ntype TypeMap = {\n  float: number;\n  vec2: ReadonlyVec2;\n  vec3: ReadonlyVec3;\n  vec4: ReadonlyVec4;\n  mat2: ReadonlyMat2;\n  mat3: ReadonlyMat3;\n  mat4: ReadonlyMat4;\n};\n\ntype UniformTypeMap = TypeMap & {\n  int: number;\n  sampler2D: WebGLTexture;\n};\n\nexport type AttributeType<T extends ShaderSource, K> = {\n  [P in keyof T[\"inAttributes\"]]: T[\"inAttributes\"][P][\"type\"] extends K\n    ? P\n    : never;\n}[keyof T[\"inAttributes\"]];\n\nexport interface Geometry {\n  draw: () => void;\n}\n\nexport interface ShaderSource {\n  src: string;\n  name: string;\n  inAttributes: { [name: string]: { type: keyof TypeMap; layout?: number } };\n  outAttributes: { [name: string]: { type: keyof TypeMap; layout?: number } };\n  uniforms: { [name: string]: keyof UniformTypeMap };\n}\n\nexport class ShaderProgram<\n  TVert extends ShaderSource,\n  TFrag extends ShaderSource\n> {\n  #gl: WebGL2RenderingContext;\n  #program: WebGLProgram;\n  inAttributes: Record<\n    keyof TVert[\"inAttributes\"],\n    { location: number; type: keyof TypeMap }\n  >;\n  outAttributes: Record<\n    keyof TFrag[\"outAttributes\"],\n    { location: number; type: keyof TypeMap }\n  >;\n  uniforms: Record<\n    keyof (TVert[\"uniforms\"] & TFrag[\"uniforms\"]),\n    { location: WebGLUniformLocation; type: keyof UniformTypeMap }\n  >;\n\n  constructor(\n    gl: WebGL2RenderingContext,\n    vertexShaderSource: TVert,\n    fragmentShaderSource: TFrag\n  ) {\n    this.#gl = gl;\n    this.#program = gl.createProgram()!;\n    this.inAttributes = {} as Record<\n      keyof TVert[\"inAttributes\"],\n      { location: number; type: keyof TypeMap; layout?: number }\n    >;\n    this.outAttributes = {} as Record<\n      keyof TVert[\"outAttributes\"],\n      { location: number; type: keyof TypeMap; layout?: number }\n    >;\n    this.uniforms = {} as Record<\n      keyof TVert[\"uniforms\"],\n      { location: WebGLUniformLocation; type: keyof UniformTypeMap }\n    >;\n\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER)!;\n    gl.shaderSource(vertexShader, vertexShaderSource.src);\n    gl.compileShader(vertexShader);\n\n    let output = \"\";\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      let error = gl.getShaderInfoLog(vertexShader);\n      if (error) {\n        if (process.env.NODE_ENV !== \"production\") {\n          output += decorateError(\n            `\\nVertex Shader: ${vertexShaderSource.name}`,\n            vertexShaderSource.src,\n            error\n          );\n        } else {\n          output += error + \"\\n\";\n        }\n      }\n    }\n\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)!;\n    gl.shaderSource(fragmentShader, fragmentShaderSource.src);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      let error = gl.getShaderInfoLog(fragmentShader);\n      if (error) {\n        if (process.env.NODE_ENV !== \"production\") {\n          output += decorateError(\n            `\\nFragment Shader: ${fragmentShaderSource.name}`,\n            fragmentShaderSource.src,\n            error\n          );\n        } else {\n          output += error + \"\\n\";\n        }\n      }\n    }\n\n    gl.attachShader(this.#program, vertexShader);\n    gl.attachShader(this.#program, fragmentShader);\n    gl.linkProgram(this.#program);\n    if (!gl.getProgramParameter(this.#program, gl.LINK_STATUS)) {\n      const error = gl.getProgramInfoLog(this.#program);\n      if (error) {\n        output += `\\nLinker: (${vertexShaderSource.name}, ${fragmentShaderSource.name}): ${error}`;\n      }\n    }\n\n    if (output !== \"\") {\n      throw new Error(\n        `Shader compilation of [${vertexShaderSource.name}, ${fragmentShaderSource.name}] failed:\\n${output}`\n      );\n    }\n\n    const attributeCount = gl.getProgramParameter(\n      this.#program,\n      gl.ACTIVE_ATTRIBUTES\n    );\n    for (let i = 0; i < attributeCount; ++i) {\n      const info = gl.getActiveAttrib(this.#program, i);\n      if (info) {\n        const key = info.name;\n        if (key in vertexShaderSource.inAttributes) {\n          this.inAttributes[key as unknown as keyof TVert[\"inAttributes\"]] = {\n            location: gl.getAttribLocation(this.#program, info.name),\n            type: vertexShaderSource.inAttributes[key].type,\n          };\n        }\n      }\n    }\n\n    Object.keys(fragmentShaderSource.outAttributes).forEach((key) => {\n      const location = gl.getFragDataLocation(this.#program, key);\n      this.outAttributes[key as unknown as keyof TFrag[\"outAttributes\"]] = {\n        location,\n        type: fragmentShaderSource.outAttributes[key].type,\n      };\n    });\n\n    const uniformCount = gl.getProgramParameter(\n      this.#program,\n      gl.ACTIVE_UNIFORMS\n    );\n    for (let i = 0; i < uniformCount; ++i) {\n      const info = gl.getActiveUniform(this.#program, i);\n      if (info) {\n        const key = info.name;\n        if (\n          key in vertexShaderSource.uniforms ||\n          key in fragmentShaderSource.uniforms\n        ) {\n          this.uniforms[\n            info.name as unknown as\n              | keyof TVert[\"uniforms\"]\n              | keyof TFrag[\"uniforms\"]\n          ] = {\n            location: gl.getUniformLocation(this.#program, info.name)!,\n            type: (vertexShaderSource.uniforms[key] ||\n              fragmentShaderSource.uniforms[key]) as keyof UniformTypeMap,\n          };\n        }\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      for (let key in vertexShaderSource.uniforms) {\n        if (!this.uniforms[key]) {\n          console.warn(\n            `Unused uniform ${key} in vertex shader ${vertexShaderSource.name}`\n          );\n        }\n      }\n      for (let key in fragmentShaderSource.uniforms) {\n        if (!this.uniforms[key]) {\n          console.warn(\n            `Unused uniform ${key} in vertex shader ${vertexShaderSource.name}`\n          );\n        }\n      }\n    }\n  }\n\n  use(scope: (program: ShaderProgram<TVert, TFrag>) => void): void {\n    this.#gl.useProgram(this.#program);\n    scope(this);\n    this.#gl.useProgram(null);\n  }\n\n  setUniforms(\n    uniforms: Partial<{\n      [K in keyof (TVert[\"uniforms\"] &\n        TFrag[\"uniforms\"])]: UniformTypeMap[(TVert[\"uniforms\"] &\n        TFrag[\"uniforms\"])[K]];\n    }>\n  ): ShaderProgram<TVert, TFrag> {\n    let index = 0;\n    for (let u in uniforms) {\n      const value = uniforms[u] as any;\n      const metadata = this.uniforms[u as keyof typeof uniforms];\n      if (!metadata) {\n        // if a uniform isn't being used in the shader, it'll get\n        // optimized out, so there won't be any runtime metadata\n        // for it. we can safely ignore it.\n        continue;\n      } else if (metadata.type === \"sampler2D\") {\n        // @ts-ignore\n        this.#gl.activeTexture(this.#gl[`TEXTURE${index}`]);\n        this.#gl.bindTexture(this.#gl.TEXTURE_2D, value as WebGLTexture);\n        this.#gl.uniform1i(metadata.location, index++);\n      } else if (metadata.type === \"float\") {\n        this.#gl.uniform1f(metadata.location, value);\n      } else if (metadata.type === \"vec2\") {\n        this.#gl.uniform2fv(metadata.location, value);\n      } else if (metadata.type === \"vec3\") {\n        this.#gl.uniform3fv(metadata.location, value);\n      } else if (metadata.type === \"vec4\") {\n        this.#gl.uniform4fv(metadata.location, value);\n      } else if (metadata.type === \"mat2\") {\n        this.#gl.uniformMatrix2fv(metadata.location, false, value);\n      } else if (metadata.type === \"mat3\") {\n        this.#gl.uniformMatrix3fv(metadata.location, false, value);\n      } else if (metadata.type === \"mat4\") {\n        this.#gl.uniformMatrix4fv(metadata.location, false, value);\n      } else if (metadata.type === \"int\") {\n        this.#gl.uniform1i(metadata.location, value);\n      }\n    }\n    return this;\n  }\n}\n\nexport class InstanceBuffer<TVertParams extends ShaderSource, T> {\n  #buffer: WebGLBuffer | null;\n  #gl: WebGL2RenderingContext;\n  #instanceSize: number;\n  #instanceCount: number;\n  #attributeLayouts: Array<{\n    col: number;\n    row: number;\n    size: number;\n    name: keyof TVertParams[\"inAttributes\"];\n    load: (buffer: Float32Array, offset: number, instance: T) => void;\n  }> = [];\n\n  constructor(\n    gl: WebGL2RenderingContext,\n    program: ShaderProgram<TVertParams, any>,\n    attributes: Partial<{\n      [K in keyof TVertParams[\"inAttributes\"]]: (\n        instance: T\n      ) => TypeMap[TVertParams[\"inAttributes\"][K][\"type\"]];\n    }>\n  ) {\n    this.#gl = gl;\n    this.#buffer = this.#gl.createBuffer()!;\n    this.#instanceCount = 0;\n    this.#instanceSize = 0;\n    this.#attributeLayouts = [];\n\n    for (let [attr, loader] of Object.entries(attributes)) {\n      const attributeType = program.inAttributes[attr].type;\n      if (attributeType === \"float\") {\n        this.#attributeLayouts.push({\n          col: 1,\n          row: 1,\n          size: 1,\n          name: attr,\n          load: (b, o, i) => {\n            b[o] = loader(i) as number;\n          },\n        });\n      } else {\n        const partialLayout: {\n          name: keyof TVertParams[\"inAttributes\"];\n          load: (buffer: Float32Array, offset: number, instance: T) => void;\n        } = {\n          name: attr,\n          load: (b, o, i) => b.set(loader(i) as Float32Array, o),\n        };\n        switch (attributeType) {\n          case \"vec2\":\n            this.#attributeLayouts.push({\n              col: 1,\n              row: 2,\n              size: 2,\n              ...partialLayout,\n            });\n            break;\n          case \"vec3\":\n            this.#attributeLayouts.push({\n              col: 1,\n              row: 3,\n              size: 3,\n              ...partialLayout,\n            });\n            break;\n          case \"vec4\":\n            this.#attributeLayouts.push({\n              col: 1,\n              row: 4,\n              size: 4,\n              ...partialLayout,\n            });\n            break;\n          case \"mat2\":\n            this.#attributeLayouts.push({\n              col: 2,\n              row: 2,\n              size: 4,\n              ...partialLayout,\n            });\n            break;\n          case \"mat3\":\n            this.#attributeLayouts.push({\n              col: 3,\n              row: 3,\n              size: 9,\n              ...partialLayout,\n            });\n            break;\n          case \"mat4\":\n            this.#attributeLayouts.push({\n              col: 4,\n              row: 4,\n              size: 16,\n              ...partialLayout,\n            });\n            break;\n          default:\n            throw new Error(\"Unknown instance buffer attribute type\");\n        }\n      }\n      this.#instanceSize +=\n        this.#attributeLayouts[this.#attributeLayouts.length - 1].size;\n    }\n  }\n\n  load(instances: Array<T>): InstanceBuffer<TVertParams, T> {\n    this.#instanceCount = instances.length;\n    const b = new Float32Array(instances.length * this.#instanceSize);\n    let offset = 0;\n    for (let i = 0; i < instances.length; ++i) {\n      for (let j = 0; j < this.#attributeLayouts.length; ++j) {\n        this.#attributeLayouts[j].load(b, offset, instances[i]);\n        offset += this.#attributeLayouts[j].size;\n      }\n    }\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, this.#buffer);\n    this.#gl.bufferData(this.#gl.ARRAY_BUFFER, b, this.#gl.STREAM_DRAW);\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, null);\n    return this;\n  }\n\n  getInstanceCount(): number {\n    return this.#instanceCount;\n  }\n\n  getAttributesHash(program: ShaderProgram<TVertParams, any>): string {\n    return this.#attributeLayouts\n      .map((a) => program.inAttributes[a.name].location)\n      .join(\"-\");\n  }\n\n  bind(\n    program: ShaderProgram<TVertParams, any>\n  ): InstanceBuffer<TVertParams, T> {\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, this.#buffer);\n\n    let offset = 0;\n    for (let i = 0; i < this.#attributeLayouts.length; ++i) {\n      const attrPtr =\n        program.inAttributes[this.#attributeLayouts[i].name].location;\n      for (let col = 0; col < this.#attributeLayouts[i].col; ++col) {\n        this.#gl.enableVertexAttribArray(attrPtr + col);\n        this.#gl.vertexAttribPointer(\n          attrPtr + col,\n          this.#attributeLayouts[i].row,\n          this.#gl.FLOAT,\n          false,\n          this.#instanceSize * 4,\n          offset\n        );\n        this.#gl.vertexAttribDivisor(attrPtr + col, 1);\n        offset += this.#attributeLayouts[i].row * 4;\n      }\n    }\n    return this;\n  }\n}\n\nexport class FrameBuffer<TFrag extends ShaderSource> {\n  #gl: WebGL2RenderingContext;\n  #frameBuffer: WebGLFramebuffer;\n  static #activeStack: Array<WebGLFramebuffer> = [];\n\n  constructor(\n    gl: WebGL2RenderingContext,\n    program: ShaderProgram<any, TFrag>,\n    attachments: { [K in keyof TFrag[\"outAttributes\"]]: WebGLTexture | null }\n  ) {\n    this.#gl = gl;\n    this.#frameBuffer = this.#gl.createFramebuffer()!;\n    this.#gl.bindFramebuffer(this.#gl.FRAMEBUFFER, this.#frameBuffer);\n\n    const attachmentList: Array<number> = [];\n    Object.entries(attachments).forEach(([key, value]) => {\n      const location =\n        program.outAttributes[key as keyof TFrag[\"outAttributes\"]].location;\n      this.#gl.framebufferTexture2D(\n        this.#gl.FRAMEBUFFER,\n        // @ts-ignore\n        this.#gl[`COLOR_ATTACHMENT${location}`] as any,\n        this.#gl.TEXTURE_2D,\n        value,\n        0\n      );\n      // @ts-ignore\n      attachmentList.push(this.#gl[`COLOR_ATTACHMENT${location}`]);\n    });\n    this.#gl.drawBuffers(attachmentList.sort((a, b) => a - b));\n    this.#gl.bindFramebuffer(this.#gl.FRAMEBUFFER, null);\n  }\n\n  bind(scope: () => void): void {\n    FrameBuffer.#activeStack.push(this.#frameBuffer);\n    this.#gl.bindFramebuffer(this.#gl.FRAMEBUFFER, this.#frameBuffer);\n    scope();\n    FrameBuffer.#activeStack.pop();\n    if (FrameBuffer.#activeStack.length) {\n      this.#gl.bindFramebuffer(\n        this.#gl.FRAMEBUFFER,\n        FrameBuffer.#activeStack[FrameBuffer.#activeStack.length - 1]\n      );\n    } else {\n      this.#gl.bindFramebuffer(this.#gl.FRAMEBUFFER, null);\n    }\n  }\n}\n\nexport function createTexture(\n  gl: WebGL2RenderingContext,\n  internalFormat: number,\n  format: number,\n  type: number,\n  width: number,\n  height: number,\n  opts?: {\n    filter?: number;\n    wrap?: number;\n  }\n): WebGLTexture {\n  const texture = gl.createTexture();\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(\n    gl.TEXTURE_2D,\n    gl.TEXTURE_WRAP_S,\n    opts?.wrap || gl.CLAMP_TO_EDGE\n  );\n  gl.texParameteri(\n    gl.TEXTURE_2D,\n    gl.TEXTURE_WRAP_T,\n    opts?.wrap || gl.CLAMP_TO_EDGE\n  );\n  gl.texParameteri(\n    gl.TEXTURE_2D,\n    gl.TEXTURE_MIN_FILTER,\n    opts?.filter || gl.LINEAR\n  );\n  gl.texParameteri(\n    gl.TEXTURE_2D,\n    gl.TEXTURE_MAG_FILTER,\n    opts?.filter || gl.LINEAR\n  );\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    internalFormat,\n    width,\n    height,\n    0,\n    format,\n    type,\n    null\n  );\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture!;\n}\n\nfunction decorateError(section: string, src: string, error: string): string {\n  const lines = error.split(\"\\n\");\n  let output = \"\";\n  for (let line of lines) {\n    const match = line.match(/ERROR: (\\d+):(\\d+): (.*)/);\n    if (!match) {\n      line = line.trim();\n      if (line.length && line.codePointAt(0) !== 0) {\n        output += `${section} ${line}\\n`;\n      }\n    } else {\n      const location = {\n        start: { line: parseInt(match[2], 10), column: parseInt(match[1], 10) },\n      };\n      output += codeFrameColumns(section, src, location, match[3]);\n    }\n  }\n  return output;\n}\n\nfunction codeFrameColumns(\n  section: string,\n  src: string,\n  location: { start: { line: number; column: number } },\n  message: string\n): string {\n  let output = `${section}\\n`;\n  const lines = src.split(\"\\n\");\n  const start = Math.max(location.start.line - 2, 0);\n  const end = Math.min(start + 6, lines.length);\n  const digits = String(end).length;\n\n  for (let i = start; i < end; ++i) {\n    const isCurrentLine = i === location.start.line - 1;\n    output += `${isCurrentLine ? \">\" : \" \"} ${(i + 1)\n      .toString()\n      .padEnd(digits, \" \")} | ${lines[i]}\\n`;\n\n    if (i === location.start.line - 1) {\n      let s = \"\";\n      for (let j = 0; j < location.start.column; ++j) {\n        s += \" \";\n      }\n      output += `  ${\"\".padEnd(digits, \" \")} | ${s}^ ${message}\\n`;\n    }\n  }\n  return output;\n}\n", "\ntype InAttributeTypes = {\n   a_position: {type: \"vec2\"};\n   a_uv: {type: \"mat3\"};\n   a_mvp: {type: \"mat3\"}\n}\n\ntype OutAttributeTypes = {\n\n}\n\ntype UniformTypes = {\n\n}\n\nexport const enum Constants {\n\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nin vec2 a_position;in mat3 a_uv;in mat3 a_mvp;out vec2 v_texCoord;void main(){vec3 A=a_uv*vec3(a_position,1.);vec3 B=a_mvp*vec3(a_position,1.);v_texCoord=A.xy;gl_Position=vec4(B.xy,0.,1.);}`,\n  name: \"deferred-sprite.vert\",\n  inAttributes: {\n   a_position: {type: \"vec2\"},\n   a_uv: {type: \"mat3\"},\n   a_mvp: {type: \"mat3\"}\n  },\n  outAttributes: {\n\n  },\n  uniforms: {\n\n  },\n};\nexport default value;\n", "\ntype InAttributeTypes = {\n\n}\n\ntype OutAttributeTypes = {\n   o_normal: {type: \"vec4\",location:0};\n   o_albedo: {type: \"vec4\",location:1};\n   o_specular: {type: \"vec4\",location:2};\n   o_lighting: {type: \"vec4\",location:3};\n   o_mask: {type: \"vec4\",location:4}\n}\n\ntype UniformTypes = {\n   u_diffuseTexture: \"sampler2D\";\n   u_normalTexture: \"sampler2D\";\n   u_specularTexture: \"sampler2D\";\n   u_emissiveTexture: \"sampler2D\"\n}\n\nexport const enum Constants {\n\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nprecision mediump float;in vec2 v_texCoord;uniform sampler2D u_diffuseTexture;uniform sampler2D u_normalTexture;uniform sampler2D u_specularTexture;uniform sampler2D u_emissiveTexture;layout(location=0)out vec4 o_normal;layout(location=1)out vec4 o_albedo;layout(location=2)out vec4 o_specular;layout(location=3)out vec4 o_lighting;layout(location=4)out vec4 o_mask;void main(){vec4 A=texture(u_diffuseTexture,v_texCoord);vec3 B=texture(u_normalTexture,v_texCoord).xyz;float C=texture(u_specularTexture,v_texCoord).x;vec3 D=texture(u_emissiveTexture,v_texCoord).xyz;float E=A.w<0.99?0.:1.;o_albedo=vec4(A.xyz*E,E);o_mask=o_albedo;o_normal=vec4(B,E);o_specular=vec4(C,C,C,E);o_lighting=vec4(D,E);}`,\n  name: \"deferred-sprite.frag\",\n  inAttributes: {\n\n  },\n  outAttributes: {\n   o_normal: {type: \"vec4\",location:0},\n   o_albedo: {type: \"vec4\",location:1},\n   o_specular: {type: \"vec4\",location:2},\n   o_lighting: {type: \"vec4\",location:3},\n   o_mask: {type: \"vec4\",location:4}\n  },\n  uniforms: {\n   u_diffuseTexture: \"sampler2D\",\n   u_normalTexture: \"sampler2D\",\n   u_specularTexture: \"sampler2D\",\n   u_emissiveTexture: \"sampler2D\"\n  },\n};\nexport default value;\n", "\ntype InAttributeTypes = {\n   a_position: {type: \"vec2\"};\n   a_mvp: {type: \"mat3\"};\n   a_uv: {type: \"mat3\"};\n   a_ambient: {type: \"vec3\"};\n   a_diffuse: {type: \"vec3\"};\n   a_direction: {type: \"vec3\"};\n   a_radius: {type: \"float\"}\n}\n\ntype OutAttributeTypes = {\n\n}\n\ntype UniformTypes = {\n\n}\n\nexport const enum Constants {\n\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nin vec2 a_position;in mat3 a_mvp;in mat3 a_uv;in vec3 a_ambient;in vec3 a_diffuse;in vec3 a_direction;in float a_radius;out vec3 v_ambient;out vec3 v_diffuse;out vec3 v_direction;out float v_radius;out vec2 v_texCoord;void main(){vec3 A=a_uv*vec3(a_position,1.);v_texCoord=A.xy;v_ambient=a_ambient;v_diffuse=a_diffuse;v_direction=a_direction;v_radius=a_radius;vec3 B=a_mvp*vec3(a_position,1.);gl_Position=vec4(B.xy,0.,1.);}`,\n  name: \"deferred-lighting.vert\",\n  inAttributes: {\n   a_position: {type: \"vec2\"},\n   a_mvp: {type: \"mat3\"},\n   a_uv: {type: \"mat3\"},\n   a_ambient: {type: \"vec3\"},\n   a_diffuse: {type: \"vec3\"},\n   a_direction: {type: \"vec3\"},\n   a_radius: {type: \"float\"}\n  },\n  outAttributes: {\n\n  },\n  uniforms: {\n\n  },\n};\nexport default value;\n", "\ntype InAttributeTypes = {\n\n}\n\ntype OutAttributeTypes = {\n   o_lighting: {type: \"vec4\",location:0}\n}\n\ntype UniformTypes = {\n   u_viewDirection: \"vec3\";\n   u_lightingMode: \"int\";\n   u_albedoTexture: \"sampler2D\";\n   u_normalTexture: \"sampler2D\";\n   u_specularTexture: \"sampler2D\";\n   u_toTangentSpace: \"mat3\"\n}\n\nexport const enum Constants {\n   LIGHTING_MODE_DIRECTIONAL = 0,\n   LIGHTING_MODE_POINT = 1\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nprecision mediump float;in vec2 v_texCoord;in vec3 v_ambient;in vec3 v_diffuse;in vec3 v_direction;in float v_radius;uniform vec3 u_viewDirection;uniform int u_lightingMode;uniform sampler2D u_albedoTexture;uniform sampler2D u_normalTexture;uniform sampler2D u_specularTexture;uniform mat3 u_toTangentSpace;const int A=0;const int B=1;const float C=2.;const float D=32.;layout(location=0)out vec4 o_lighting;void main(){vec3 E=normalize(texture(u_normalTexture,v_texCoord).rgb*2.-1.);vec3 F=texture(u_albedoTexture,v_texCoord).rgb;vec3 G=texture(u_specularTexture,v_texCoord).rgb;vec3 H=v_ambient*F;vec3 I=u_lightingMode==A?v_direction:vec3(v_texCoord,0.)-v_direction;I.y*=u_lightingMode==A?1.:-1.;float J=u_lightingMode==A?1.:pow(1.-min(v_radius,length(I))/v_radius,C);vec3 K=normalize(I*-1.)*u_toTangentSpace;float L=max(dot(E,K),0.);vec3 M=F*v_diffuse*L*J;vec3 N=normalize(K+(u_viewDirection*-1.*u_toTangentSpace));float O=max(dot(E,N),0.);float P=pow(O,D);vec3 Q=v_diffuse*P*G*J;o_lighting=vec4(H+M+Q,1.);}`,\n  name: \"deferred-lighting.frag\",\n  inAttributes: {\n\n  },\n  outAttributes: {\n   o_lighting: {type: \"vec4\",location:0}\n  },\n  uniforms: {\n   u_viewDirection: \"vec3\",\n   u_lightingMode: \"int\",\n   u_albedoTexture: \"sampler2D\",\n   u_normalTexture: \"sampler2D\",\n   u_specularTexture: \"sampler2D\",\n   u_toTangentSpace: \"mat3\"\n  },\n};\nexport default value;\n", "import { ReadonlyVec4, mat3, vec2, vec3 } from \"gl-matrix\";\nimport { TEXTURE, GPUTexture, loadTextureFromUrl } from \"./images\";\nimport { GameContext } from \"./game-runner\";\nimport {\n  SpriteEffect,\n  SpriteSheet,\n  SpriteAnimator,\n  SpriteSheetConfig,\n} from \"./sprite-common\";\nimport { SpriteViewProjection, Quad } from \"./geometry\";\nimport {\n  ShaderProgram,\n  createTexture,\n  InstanceBuffer,\n  FrameBuffer,\n} from \"./gl-utils\";\nimport { ToTangentSpace } from \"./sprite-common\";\nimport vertexShader from \"./generated/shaders/deferred-sprite.vert\";\nimport fragmentShader from \"./generated/shaders/deferred-sprite.frag\";\nimport lightingVertexShader from \"./generated/shaders/deferred-lighting.vert\";\nimport lightingFragmentShader, {\n  Constants as LightingConstants,\n} from \"./generated/shaders/deferred-lighting.frag\";\n\nexport type DeferredSpriteTextures = {\n  diffuseTexture: GPUTexture;\n  normalTexture: GPUTexture;\n  specularTexture: GPUTexture;\n  emissiveTexture: GPUTexture;\n};\nexport type DeferredSpriteSheet = SpriteSheet<DeferredSpriteTextures>;\nexport class DeferredSpriteAnimator extends SpriteAnimator<DeferredSpriteTextures> {}\n\nconst BLACK: vec3 = vec3.fromValues(0, 0, 0);\nconst FULL_MVP = mat3.create();\nmat3.scale(FULL_MVP, FULL_MVP, [1, -1]);\nmat3.mul(FULL_MVP, FULL_MVP, SpriteViewProjection);\nconst FULL_UV = mat3.create();\nmat3.translate(FULL_UV, FULL_UV, [0, 0]);\nmat3.scale(FULL_UV, FULL_UV, [1, 1]);\n\nexport async function deferredTextureLoader(\n  ctx: GameContext,\n  sheet: SpriteSheetConfig\n): Promise<DeferredSpriteTextures> {\n  const [diffuseTexture, normalTexture, specularTexture, emissiveTexture] =\n    await Promise.all([\n      loadTextureFromUrl(ctx, sheet.urls.diffuse),\n      loadTextureFromUrl(ctx, sheet.urls.normal),\n      loadTextureFromUrl(ctx, sheet.urls.specular),\n      loadTextureFromUrl(ctx, sheet.urls.emissive),\n    ]);\n  return {\n    diffuseTexture,\n    normalTexture,\n    specularTexture,\n    emissiveTexture,\n  };\n}\n\nexport type ScreenSpaceDirectionalLight = {\n  diffuse: vec3;\n  ambient: vec3;\n  direction: vec3;\n};\n\nexport type ScreenSpacePointLight = {\n  diffuse: vec3;\n  position: vec3;\n  radius: number;\n};\n\ntype SpriteInstance = {\n  mvp: mat3;\n  uv: mat3;\n};\n\ntype LightInstance = {\n  mvp: mat3;\n  uv: mat3;\n  ambient: vec3;\n  diffuse: vec3;\n  direction: vec3;\n  radius: number;\n};\n\nexport class DeferredSpriteEffect\n  implements SpriteEffect<DeferredSpriteTextures>\n{\n  #gl: WebGL2RenderingContext;\n  #gBufferProgram: ShaderProgram<typeof vertexShader, typeof fragmentShader>;\n  #instanceBuffer: InstanceBuffer<typeof vertexShader, SpriteInstance>;\n  #pending: Array<SpriteInstance>;\n\n  #lightingProgram: ShaderProgram<\n    typeof lightingVertexShader,\n    typeof lightingFragmentShader\n  >;\n  #lightBuffer: InstanceBuffer<typeof lightingVertexShader, LightInstance>;\n  #pendingDirectionalLights: Array<LightInstance>;\n  #pendingPointLights: Array<LightInstance>;\n\n  #texture: DeferredSpriteTextures | null;\n  #quad: Quad;\n\n  #gBuffer: {\n    normal: WebGLTexture;\n    albedo: WebGLTexture;\n    specular: WebGLTexture;\n    lighting: GPUTexture;\n    mask: GPUTexture;\n    maskFrameBuffer: FrameBuffer<typeof fragmentShader>;\n    noMaskFrameBuffer: FrameBuffer<typeof fragmentShader>;\n    lightingFrameBuffer: FrameBuffer<typeof lightingFragmentShader>;\n  } | null;\n  #gBufferWidth: number;\n  #gBufferHeight: number;\n\n  constructor(gl: WebGL2RenderingContext) {\n    this.#gl = gl;\n    this.#gBufferProgram = new ShaderProgram(gl, vertexShader, fragmentShader);\n    this.#instanceBuffer = new InstanceBuffer(gl, this.#gBufferProgram, {\n      a_mvp: (instance) => instance.mvp,\n      a_uv: (instance) => instance.uv,\n    });\n    this.#pending = [];\n    this.#lightingProgram = new ShaderProgram(\n      gl,\n      lightingVertexShader,\n      lightingFragmentShader\n    );\n    this.#lightBuffer = new InstanceBuffer(gl, this.#lightingProgram, {\n      a_mvp: (instance) => instance.mvp,\n      a_uv: (instance) => instance.uv,\n      a_ambient: (instance) => instance.ambient,\n      a_diffuse: (instance) => instance.diffuse,\n      a_direction: (instance) => instance.direction,\n      a_radius: (instance) => instance.radius,\n    });\n    this.#pendingDirectionalLights = [];\n    this.#pendingPointLights = [];\n\n    this.#quad = new Quad(gl);\n    this.#texture = null;\n    this.#gBuffer = null;\n    this.#gBufferWidth = this.#gBufferHeight = 0;\n  }\n\n  use(\n    opts: {\n      width: number;\n      height: number;\n    },\n    fillScope: (s: DeferredSpriteEffect, pass: number) => void,\n    maskScope: (mask: GPUTexture) => void\n  ) {\n    if (\n      !this.#gBuffer ||\n      opts.width !== this.#gBufferWidth ||\n      opts.height !== this.#gBufferHeight\n    ) {\n      this.#gBufferHeight = opts.height;\n      this.#gBufferWidth = opts.width;\n      const gBuffer = {\n        normal: createTexture(\n          this.#gl,\n          this.#gl.RGBA,\n          this.#gl.RGBA,\n          this.#gl.UNSIGNED_BYTE,\n          opts.width,\n          opts.height\n        ),\n        albedo: createTexture(\n          this.#gl,\n          this.#gl.RGBA,\n          this.#gl.RGBA,\n          this.#gl.UNSIGNED_BYTE,\n          opts.width,\n          opts.height\n        ),\n        specular: createTexture(\n          this.#gl,\n          this.#gl.RGBA,\n          this.#gl.RGBA,\n          this.#gl.UNSIGNED_BYTE,\n          opts.width,\n          opts.height\n        ),\n        lighting: {\n          [TEXTURE]: createTexture(\n            this.#gl,\n            this.#gl.RGBA,\n            this.#gl.RGBA,\n            this.#gl.UNSIGNED_BYTE,\n            opts.width,\n            opts.height\n          ),\n          width: opts.width,\n          height: opts.height,\n        },\n        mask: {\n          [TEXTURE]: createTexture(\n            this.#gl,\n            this.#gl.RGBA,\n            this.#gl.RGBA,\n            this.#gl.UNSIGNED_BYTE,\n            opts.width,\n            opts.height\n          ),\n          width: opts.width,\n          height: opts.height,\n        },\n      };\n\n      this.#gBuffer = {\n        ...gBuffer,\n        maskFrameBuffer: new FrameBuffer(this.#gl, this.#gBufferProgram, {\n          o_normal: gBuffer.normal,\n          o_albedo: gBuffer.albedo,\n          o_specular: gBuffer.specular,\n          o_lighting: gBuffer.lighting[TEXTURE],\n          o_mask: gBuffer.mask[TEXTURE],\n        }),\n        noMaskFrameBuffer: new FrameBuffer(this.#gl, this.#gBufferProgram, {\n          o_normal: gBuffer.normal,\n          o_albedo: gBuffer.albedo,\n          o_specular: gBuffer.specular,\n          o_lighting: gBuffer.lighting[TEXTURE],\n          o_mask: null,\n        }),\n        lightingFrameBuffer: new FrameBuffer(this.#gl, this.#lightingProgram, {\n          o_lighting: gBuffer.lighting[TEXTURE],\n        }),\n      };\n    }\n\n    const g = this.#gBuffer!;\n\n    // render the base sprite layer\n    g.maskFrameBuffer.bind(() => {\n      this.#gl.viewport(0, 0, this.#gBufferWidth, this.#gBufferHeight);\n      this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n      this.#gBufferProgram.use(() => {\n        // only the base layer textures contribute to the mask\n        fillScope(this, 0);\n        this.#end();\n      });\n    });\n\n    // finally, render the mask overlay & top layer of sprites\n    g.noMaskFrameBuffer.bind(() => {\n      maskScope(g.mask);\n      this.#gBufferProgram.use(() => {\n        fillScope(this, 1);\n        this.#end();\n      });\n    });\n\n    g.lightingFrameBuffer.bind(() => {\n      const previousBlend = this.#gl.getParameter(this.#gl.BLEND);\n      const previousBlendSrcFunc = this.#gl.getParameter(\n        this.#gl.BLEND_SRC_ALPHA\n      );\n      const previousBlendDestFunc = this.#gl.getParameter(\n        this.#gl.BLEND_DST_ALPHA\n      );\n      this.#gl.enable(this.#gl.BLEND);\n      this.#gl.blendFunc(this.#gl.ONE, this.#gl.ONE);\n\n      this.#lightingProgram.use((p) => {\n        p.setUniforms({\n          u_albedoTexture: g.albedo,\n          u_normalTexture: g.normal,\n          u_specularTexture: g.specular,\n          u_toTangentSpace: ToTangentSpace,\n          u_viewDirection: vec3.fromValues(0, 0, -1),\n        });\n\n        if (this.#pendingDirectionalLights.length) {\n          p.setUniforms({\n            u_lightingMode: LightingConstants.LIGHTING_MODE_DIRECTIONAL,\n          });\n          this.#quad.bindInstances(\n            p,\n            { position: \"a_position\" },\n            this.#lightBuffer.load(this.#pendingDirectionalLights),\n            (q) => q.draw()\n          );\n          this.#pendingDirectionalLights.length = 0;\n        }\n        if (this.#pendingPointLights.length) {\n          p.setUniforms({\n            u_lightingMode: LightingConstants.LIGHTING_MODE_POINT,\n          });\n          this.#quad.bindInstances(\n            p,\n            { position: \"a_position\" },\n            this.#lightBuffer.load(this.#pendingPointLights),\n            (q) => q.draw()\n          );\n          this.#pendingPointLights.length = 0;\n        }\n      });\n\n      if (!previousBlend) {\n        this.#gl.disable(this.#gl.BLEND);\n      }\n      this.#gl.blendFunc(previousBlendSrcFunc, previousBlendDestFunc);\n    });\n  }\n\n  addDirectionalLight(\n    light: ScreenSpaceDirectionalLight\n  ): DeferredSpriteEffect {\n    this.#pendingDirectionalLights.push({\n      mvp: FULL_MVP,\n      uv: FULL_UV,\n      ambient: light.ambient,\n      diffuse: light.diffuse,\n      direction: light.direction,\n      radius: 0,\n    });\n    return this;\n  }\n\n  addPointLight(light: ScreenSpacePointLight): DeferredSpriteEffect {\n    if (light.position[2] >= light.radius) {\n      // doesn't intersect the ground plane, so disregard the light\n      return this;\n    }\n\n    const intersectingRadius = Math.sqrt(\n      light.radius * light.radius - light.position[2] * light.position[2]\n    );\n\n    const mvp = mat3.create();\n    mat3.translate(mvp, mvp, [\n      light.position[0] - intersectingRadius,\n      light.position[1] - intersectingRadius,\n    ]);\n    mat3.scale(mvp, mvp, [intersectingRadius * 2, intersectingRadius * 2]);\n    mat3.mul(mvp, SpriteViewProjection, mvp);\n    const uv = mat3.create();\n    mat3.translate(uv, uv, [\n      light.position[0] - intersectingRadius,\n      // OpenGL has the origin at the bottom left, so we need to flip the Y axis\n      // to match the UV coordinates which have the origin at the top left\n      1.0 - light.position[1] + intersectingRadius,\n    ]);\n    mat3.scale(uv, uv, [intersectingRadius * 2, intersectingRadius * 2]);\n    mat3.scale(uv, uv, [1, -1]);\n\n    this.#pendingPointLights.push({\n      mvp,\n      uv,\n      ambient: BLACK,\n      diffuse: light.diffuse,\n      direction: vec3.fromValues(\n        light.position[0],\n        1.0 - light.position[1],\n        light.position[2]\n      ),\n      radius: light.radius,\n    });\n    return this;\n  }\n\n  getLightingTexture(): GPUTexture | undefined {\n    return this.#gBuffer?.lighting;\n  }\n\n  setTextures(param: DeferredSpriteTextures): DeferredSpriteEffect {\n    if (param === this.#texture) {\n      return this;\n    } else if (this.#pending.length) {\n      this.#end();\n    }\n    this.#texture = param;\n\n    this.#gBufferProgram.setUniforms({\n      u_diffuseTexture: param.diffuseTexture[TEXTURE],\n      u_normalTexture: param.normalTexture[TEXTURE],\n      u_specularTexture: param.specularTexture[TEXTURE],\n      u_emissiveTexture: param.emissiveTexture[TEXTURE],\n    });\n\n    return this;\n  }\n\n  draw(\n    screenSpaceRect: ReadonlyVec4,\n    textureCoords: ReadonlyVec4\n  ): DeferredSpriteEffect {\n    if (this.#texture) {\n      const mvp = mat3.create();\n      mat3.translate(mvp, mvp, [screenSpaceRect[3], screenSpaceRect[0]]);\n      mat3.scale(mvp, mvp, [\n        screenSpaceRect[1] - screenSpaceRect[3],\n        screenSpaceRect[2] - screenSpaceRect[0],\n      ]);\n      mat3.multiply(mvp, SpriteViewProjection, mvp);\n\n      const uv = mat3.create();\n      mat3.translate(uv, uv, [\n        textureCoords[3] / this.#texture.diffuseTexture.width,\n        textureCoords[0] / this.#texture.diffuseTexture.height,\n      ]);\n      mat3.scale(uv, uv, [\n        (textureCoords[1] - textureCoords[3]) /\n          this.#texture.diffuseTexture.width,\n        (textureCoords[2] - textureCoords[0]) /\n          this.#texture.diffuseTexture.height,\n      ]);\n\n      this.#pending.push({ mvp, uv });\n    }\n    return this;\n  }\n\n  #end() {\n    if (!this.#pending.length) {\n      return;\n    }\n\n    this.#quad.bindInstances(\n      this.#gBufferProgram,\n      { position: \"a_position\" },\n      this.#instanceBuffer.load(this.#pending),\n      (q) => q.draw()\n    );\n\n    this.#pending.length = 0;\n    this.#texture = null;\n  }\n}\n", "\ntype InAttributeTypes = {\n   a_position: {type: \"vec2\"};\n   a_uv: {type: \"mat3\"};\n   a_mvp: {type: \"mat3\"};\n   a_alpha: {type: \"float\"}\n}\n\ntype OutAttributeTypes = {\n\n}\n\ntype UniformTypes = {\n\n}\n\nexport const enum Constants {\n\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nin vec2 a_position;in mat3 a_uv;in mat3 a_mvp;in float a_alpha;out vec2 v_texCoord;out float v_alpha;void main(){vec3 A=a_uv*vec3(a_position,1.);vec3 B=a_mvp*vec3(a_position,1.);v_alpha=a_alpha;v_texCoord=A.xy;gl_Position=vec4(B.xy,0.,1.);}`,\n  name: \"sprite.vert\",\n  inAttributes: {\n   a_position: {type: \"vec2\"},\n   a_uv: {type: \"mat3\"},\n   a_mvp: {type: \"mat3\"},\n   a_alpha: {type: \"float\"}\n  },\n  outAttributes: {\n\n  },\n  uniforms: {\n\n  },\n};\nexport default value;\n", "\ntype InAttributeTypes = {\n\n}\n\ntype OutAttributeTypes = {\n   outColor: {type: \"vec4\"}\n}\n\ntype UniformTypes = {\n   u_texture: \"sampler2D\"\n}\n\nexport const enum Constants {\n\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nprecision mediump float;in vec2 v_texCoord;in float v_alpha;uniform sampler2D u_texture;out vec4 outColor;void main(){outColor=texture(u_texture,v_texCoord);outColor.a*=v_alpha;}`,\n  name: \"sprite.frag\",\n  inAttributes: {\n\n  },\n  outAttributes: {\n   outColor: {type: \"vec4\"}\n  },\n  uniforms: {\n   u_texture: \"sampler2D\"\n  },\n};\nexport default value;\n", "import { ReadonlyVec4, mat3 } from \"gl-matrix\";\nimport { GPUTexture, TEXTURE } from \"./images\";\nimport { GameContext } from \"./game-runner\";\nimport { loadTextureFromUrl } from \"./images\";\nimport {\n  SpriteSheet,\n  SpriteAnimator,\n  SpriteSheetConfig,\n  SpriteEffect,\n} from \"./sprite-common\";\nimport { SpriteViewProjection, Quad } from \"./geometry\";\nimport { ShaderProgram, InstanceBuffer } from \"./gl-utils\";\nimport vertexShader from \"./generated/shaders/sprite.vert\";\nimport fragmentShader from \"./generated/shaders/sprite.frag\";\n\nexport type SimpleSpriteTextures = GPUTexture;\nexport type SimpleSpriteSheet = SpriteSheet<SimpleSpriteTextures>;\nexport class SimpleSpriteAnimator extends SpriteAnimator<SimpleSpriteTextures> {}\n\nexport async function simpleTextureLoader(\n  ctx: GameContext,\n  sheet: SpriteSheetConfig\n): Promise<SimpleSpriteTextures> {\n  return await loadTextureFromUrl(ctx, sheet.urls.diffuse);\n}\n\ntype SpriteInstance = {\n  mvp: mat3;\n  uv: mat3;\n  alpha: number;\n};\n\nexport class SimpleSpriteEffect implements SpriteEffect<SimpleSpriteTextures> {\n  #gl: WebGL2RenderingContext;\n  #program: ShaderProgram<typeof vertexShader, typeof fragmentShader>;\n  #instanceBuffer: InstanceBuffer<typeof vertexShader, SpriteInstance>;\n  #quad: Quad;\n  #texture: GPUTexture | null;\n  #pending: Array<SpriteInstance>;\n  #alpha: number;\n\n  constructor(gl: WebGL2RenderingContext) {\n    this.#gl = gl;\n    this.#program = new ShaderProgram(this.#gl, vertexShader, fragmentShader)!;\n    this.#instanceBuffer = new InstanceBuffer(this.#gl, this.#program, {\n      a_mvp: (instance) => instance.mvp,\n      a_uv: (instance) => instance.uv,\n      a_alpha: (instance) => instance.alpha,\n    });\n    this.#quad = new Quad(this.#gl);\n    this.#pending = [];\n    this.#texture = null;\n    this.#alpha = 1.0;\n  }\n\n  use(scope: (s: SimpleSpriteEffect) => void) {\n    this.#program.use(() => {\n      this.#alpha = 1.0;\n      scope(this);\n      this.#end();\n    });\n  }\n\n  setTextures(param: SimpleSpriteTextures): SimpleSpriteEffect {\n    if (param === this.#texture) {\n      return this;\n    } else if (this.#pending.length) {\n      this.#end();\n    }\n\n    this.#texture = param;\n    this.#program.setUniforms({\n      u_texture: param[TEXTURE],\n    });\n    return this;\n  }\n\n  setAlpha(alpha: number): SimpleSpriteEffect {\n    this.#alpha = alpha;\n    return this;\n  }\n\n  draw(rect: ReadonlyVec4, textureCoords: ReadonlyVec4): SimpleSpriteEffect {\n    if (this.#texture) {\n      const mvp = mat3.create();\n      mat3.translate(mvp, mvp, [rect[3], rect[0]]);\n      mat3.scale(mvp, mvp, [rect[1] - rect[3], rect[2] - rect[0]]);\n      mat3.multiply(mvp, SpriteViewProjection, mvp);\n\n      const uv = mat3.create();\n      mat3.translate(uv, uv, [\n        textureCoords[3] / this.#texture.width,\n        textureCoords[0] / this.#texture.height,\n      ]);\n      mat3.scale(uv, uv, [\n        (textureCoords[1] - textureCoords[3]) / this.#texture.width,\n        (textureCoords[2] - textureCoords[0]) / this.#texture.height,\n      ]);\n\n      this.#pending.push({ mvp, uv, alpha: this.#alpha });\n    }\n    return this;\n  }\n\n  #end() {\n    this.#quad.bindInstances(\n      this.#program,\n      { position: \"a_position\" },\n      this.#instanceBuffer.load(this.#pending),\n      (q) => {\n        q.draw();\n      }\n    );\n    this.#pending = [];\n    this.#texture = null;\n  }\n}\n", "\ntype InAttributeTypes = {\n   a_position: {type: \"vec2\"}\n}\n\ntype OutAttributeTypes = {\n\n}\n\ntype UniformTypes = {\n\n}\n\nexport const enum Constants {\n\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nin vec2 a_position;out vec2 v_texCoord;void main(){v_texCoord=a_position;gl_Position=vec4(a_position*2.-1.,0.,1.);}`,\n  name: \"quad.vert\",\n  inAttributes: {\n   a_position: {type: \"vec2\"}\n  },\n  outAttributes: {\n\n  },\n  uniforms: {\n\n  },\n};\nexport default value;\n", "\ntype InAttributeTypes = {\n\n}\n\ntype OutAttributeTypes = {\n   o_normal: {type: \"vec4\",location:0};\n   o_albedo: {type: \"vec4\",location:1};\n   o_specular: {type: \"vec4\",location:2};\n   o_lighting: {type: \"vec4\",location:3};\n   o_mask: {type: \"vec4\",location:4}\n}\n\ntype UniformTypes = {\n   u_mask: \"sampler2D\";\n   u_depth: \"sampler2D\";\n   u_time: \"float\";\n   u_offset: \"vec2\";\n   u_normal: \"vec3\";\n   u_tangent: \"vec3\";\n   u_binormal: \"vec3\";\n   u_toTangentSpace: \"mat3\"\n}\n\nexport const enum Constants {\n   nwaves = 12\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nprecision mediump float;layout(location=0)out vec4 o_normal;layout(location=1)out vec4 o_albedo;layout(location=2)out vec4 o_specular;layout(location=3)out vec4 o_lighting;layout(location=4)out vec4 o_mask;in vec2 v_texCoord;uniform sampler2D u_mask;uniform sampler2D u_depth;uniform float u_time;uniform vec2 u_offset;uniform vec3 u_normal;uniform vec3 u_tangent;uniform vec3 u_binormal;uniform mat3 u_toTangentSpace;const float A=acos(-1.);const vec2 B=vec2(1.,0.);const int C=12;const float D=1000.;float E(vec2 F){return fract(sin(dot(F.xy,vec2(12.9898,78.233)))*43758.5453);}void G(in int H,out float I,out float J,out vec2 K,out float L,out float M){I=abs(0.05*E(vec2(H,H)));J=.02+.01*E(vec2(float(H+5)));K=(vec2(E(vec2(H,H+1)),E(vec2(H-2,H+2))));L=30.+82.*E(vec2(float(H+5)));M=(2.5+4.2*E(vec2(float(H+4))))*0.00045;}float N(float O){return round(O*D)/D;}void P(in vec2 Q,in float R,in float S,out vec3 T,out vec3 U){T=vec3(Q,0.);U=B.yyy;float I,L,M,J;vec2 K;for(int H=0;H<C;++H){G(H,I,J,K,L,M);I+=R*0.1;J+=R*0.3;float V=dot(K,Q);T+=vec3(I*J*K*cos(L*V+N(M)*S*A*2.),J*sin(L*V+N(M)*S*A*2.));}for(int H=0;H<C;++H){G(H,I,J,K,L,M);U+=vec3(-K*L*J*cos(L*dot(K,T.xy)+N(M)*S*A*2.),1.-I*L*J*sin(L*dot(K,T.xy)+N(M)*S*A*2.));}U=normalize(U);}void main(){vec4 W=texture(u_mask,v_texCoord);vec4 X=texture(u_depth,v_texCoord);float R=smoothstep(0.,1.,X.a);float Y=1.-W.a;vec3 Z=B.yyx,a=1.*B.xyy,b=1.*B.yxy+B.yyx,V=normalize(cross(b,a)),c=Z+(v_texCoord.x+u_offset.x)*a+(v_texCoord.y-u_offset.y)*b;vec3 d=(B.yyx-3.*B.yxy),e=mat3(B.yxy,B.yyx,1./V.z,-V.x/V.z,-V.y/V.z)*c,f,T;P(e.xy,R,u_time,T,f);vec3 g=normalize(cross(f.x*u_normal+u_binormal,f.y*u_normal+u_tangent))*u_toTangentSpace;o_albedo=vec4(50./255.+R*0.5,124./255.+R*0.5,T.z/255.+224./255.+R,Y);if(R<0.99){vec4 h=texture(u_depth,v_texCoord-f.xy*4.);if(h.r>0.001){o_albedo=vec4(h.rgb*R/2.+o_albedo.rgb*(1.-R/2.),Y);}}o_normal=vec4(g,Y);o_specular=vec4(1.,1.,1.,Y);o_lighting=vec4(0.,0.,0.,0.);o_mask=vec4(0.,0.,0.,0.);}`,\n  name: \"water.frag\",\n  inAttributes: {\n\n  },\n  outAttributes: {\n   o_normal: {type: \"vec4\",location:0},\n   o_albedo: {type: \"vec4\",location:1},\n   o_specular: {type: \"vec4\",location:2},\n   o_lighting: {type: \"vec4\",location:3},\n   o_mask: {type: \"vec4\",location:4}\n  },\n  uniforms: {\n   u_mask: \"sampler2D\",\n   u_depth: \"sampler2D\",\n   u_time: \"float\",\n   u_offset: \"vec2\",\n   u_normal: \"vec3\",\n   u_tangent: \"vec3\",\n   u_binormal: \"vec3\",\n   u_toTangentSpace: \"mat3\"\n  },\n};\nexport default value;\n", "import { vec2 } from \"gl-matrix\";\nimport { GPUTexture, TEXTURE } from \"./images\";\nimport { ShaderProgram } from \"./gl-utils\";\nimport { Quad } from \"./geometry\";\nimport vertexShader from \"./generated/shaders/quad.vert\";\nimport fragmentShader from \"./generated/shaders/water.frag\";\nimport { ToTangentSpace, Tangent, Binormal, Normal } from \"./sprite-common\";\n\nexport class WaterEffect {\n  #gl: WebGL2RenderingContext;\n  #program: ShaderProgram<typeof vertexShader, typeof fragmentShader>;\n  #quad: Quad;\n\n  constructor(gl: WebGL2RenderingContext) {\n    this.#gl = gl;\n    this.#program = new ShaderProgram(this.#gl, vertexShader, fragmentShader)!;\n    this.#quad = new Quad(this.#gl);\n  }\n\n  draw(\n    time: number,\n    offset: vec2,\n    mask: GPUTexture,\n    depth: GPUTexture\n  ): WaterEffect {\n    this.#program.use((p) => {\n      p.setUniforms({\n        u_normal: Normal,\n        u_tangent: Tangent,\n        u_binormal: Binormal,\n        u_toTangentSpace: ToTangentSpace,\n        u_time: time,\n        u_offset: offset,\n        u_mask: mask[TEXTURE],\n        u_depth: depth[TEXTURE],\n      });\n      this.#quad.bind(this.#program, { position: \"a_position\" }, (q) => {\n        q.draw();\n      });\n    });\n    return this;\n  }\n}\n", "\ntype InAttributeTypes = {\n\n}\n\ntype OutAttributeTypes = {\n   o_color: {type: \"vec4\"}\n}\n\ntype UniformTypes = {\n   u_blur: \"sampler2D\";\n   u_blurSize: \"vec2\";\n   u_blurDirection: \"vec2\";\n   u_blurStrength: \"float\"\n}\n\nexport const enum Constants {\n   offset = 16\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nprecision mediump float;uniform sampler2D u_blur;uniform vec2 u_blurSize;uniform vec2 u_blurDirection;uniform float u_blurStrength;in vec2 v_texCoord;out vec4 o_color;const int A=16;void main(){float B=texture(u_blur,v_texCoord).a;vec3 C=vec3(0.);for(int D=0;D<A;++D){vec2 E=v_texCoord+((vec2(-D,-D)*u_blurDirection)/u_blurSize);vec4 F=texture(u_blur,E);float G=F.a*pow(float(A-D)/float(A),u_blurStrength);B=max(B,G);C=length(C)<length(F.rgb)?F.rgb:C;vec2 H=v_texCoord+((vec2(D,D)*u_blurDirection)/u_blurSize);vec4 I=texture(u_blur,H);float J=I.a*pow(float(A-D)/float(A),u_blurStrength);B=max(B,J);C=length(C)<length(I.rgb)?I.rgb:C;}o_color=vec4(C,B);}`,\n  name: \"nearest-blur.frag\",\n  inAttributes: {\n\n  },\n  outAttributes: {\n   o_color: {type: \"vec4\"}\n  },\n  uniforms: {\n   u_blur: \"sampler2D\",\n   u_blurSize: \"vec2\",\n   u_blurDirection: \"vec2\",\n   u_blurStrength: \"float\"\n  },\n};\nexport default value;\n", "import { GPUTexture, TEXTURE } from \"./images\";\nimport { ShaderProgram, FrameBuffer, createTexture } from \"./gl-utils\";\nimport { Quad } from \"./geometry\";\nimport vertexShader from \"./generated/shaders/quad.vert\";\nimport fragmentShader from \"./generated/shaders/nearest-blur.frag\";\n\nexport class NearestBlurEffect {\n  #gl: WebGL2RenderingContext;\n  #program: ShaderProgram<typeof vertexShader, typeof fragmentShader>;\n  #quad: Quad;\n  #blurBuffer: {\n    frameBuffers: Array<FrameBuffer<typeof fragmentShader>>;\n    textures: Array<GPUTexture>;\n  } | null;\n\n  constructor(gl: WebGL2RenderingContext) {\n    this.#gl = gl;\n    this.#program = new ShaderProgram(this.#gl, vertexShader, fragmentShader)!;\n    this.#quad = new Quad(this.#gl);\n    this.#blurBuffer = null;\n  }\n\n  draw(input: GPUTexture, blurStrength: number): NearestBlurEffect {\n    if (\n      !this.#blurBuffer ||\n      this.#blurBuffer.textures[0].width !== input.width ||\n      this.#blurBuffer.textures[0].height !== input.height\n    ) {\n      const textures: Array<GPUTexture> = [];\n      for (let i = 0; i < 2; i++) {\n        textures.push({\n          [TEXTURE]: createTexture(\n            this.#gl,\n            this.#gl.RGBA,\n            this.#gl.RGBA,\n            this.#gl.UNSIGNED_BYTE,\n            input.width,\n            input.height\n          ),\n          width: input.width,\n          height: input.height,\n        });\n      }\n      this.#blurBuffer = {\n        textures,\n        frameBuffers: [\n          new FrameBuffer(this.#gl, this.#program, {\n            o_color: textures[0][TEXTURE],\n          }),\n          new FrameBuffer(this.#gl, this.#program, {\n            o_color: textures[1][TEXTURE],\n          }),\n        ],\n      };\n    }\n    \n    const previousBlend = this.#gl.getParameter(this.#gl.BLEND);\n    this.#gl.disable(this.#gl.BLEND);\n\n    const b = this.#blurBuffer;\n    this.#program.use((p) => {\n      this.#gl.viewport(0, 0, input.width, input.height);\n      // y axis blur, input as input, set output to textures 0\n      p.setUniforms({\n        u_blur: input[TEXTURE],\n        u_blurSize: [input.width, input.height],\n        u_blurDirection: [0, 1],\n        u_blurStrength: blurStrength,\n      });\n      b.frameBuffers[0].bind(() => {\n        this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n        this.#quad.bind(this.#program, { position: \"a_position\" }, (q) => {\n          q.draw();\n        });\n      });\n      // x axis blur, textures 0 as input, set output to textures 1\n      p.setUniforms({\n        u_blur: b.textures[0][TEXTURE],\n        u_blurSize: [b.textures[0].width, b.textures[0].height],\n        u_blurDirection: [1, 0],\n      });\n      b.frameBuffers[1].bind(() => {\n        this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n        this.#quad.bind(this.#program, { position: \"a_position\" }, (q) => {\n          q.draw();\n        });\n      });\n      this.#gl.viewport(0, 0, input.width, input.height);\n    });\n\n    if (previousBlend) {\n    this.#gl.enable(this.#gl.BLEND);\n    }\n    return this;\n  }\n\n  getBlurTexture(): GPUTexture {\n    return this.#blurBuffer!.textures[1];\n  }\n}\n", "\ntype InAttributeTypes = {\n   a_position: {type: \"vec2\"};\n   a_color: {type: \"vec4\"};\n   a_mvp: {type: \"mat3\"}\n}\n\ntype OutAttributeTypes = {\n\n}\n\ntype UniformTypes = {\n\n}\n\nexport const enum Constants {\n\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nin vec2 a_position;in vec4 a_color;in mat3 a_mvp;out vec4 v_color;void main(){v_color=a_color;vec3 A=a_mvp*vec3(a_position,1.);gl_Position=vec4(A.xy,0.,1.);}`,\n  name: \"solid.vert\",\n  inAttributes: {\n   a_position: {type: \"vec2\"},\n   a_color: {type: \"vec4\"},\n   a_mvp: {type: \"mat3\"}\n  },\n  outAttributes: {\n\n  },\n  uniforms: {\n\n  },\n};\nexport default value;\n", "\ntype InAttributeTypes = {\n\n}\n\ntype OutAttributeTypes = {\n   outColor: {type: \"vec4\"}\n}\n\ntype UniformTypes = {\n\n}\n\nexport const enum Constants {\n\n}\n\ntype ShaderSource = {\n  src: string;\n  name: string;\n  inAttributes: InAttributeTypes;\n  outAttributes: OutAttributeTypes;\n  uniforms: UniformTypes;\n};\n\nconst value: ShaderSource = {\n  src: `#version 300 es\nprecision mediump float;in vec4 v_color;out vec4 outColor;void main(){outColor=v_color;}`,\n  name: \"solid.frag\",\n  inAttributes: {\n\n  },\n  outAttributes: {\n   outColor: {type: \"vec4\"}\n  },\n  uniforms: {\n\n  },\n};\nexport default value;\n", "import { mat3, ReadonlyVec4 } from \"gl-matrix\";\nimport { ShaderProgram, InstanceBuffer } from \"./gl-utils\";\nimport { SpriteViewProjection, Quad } from \"./geometry\";\n\nimport vertexShader from \"./generated/shaders/solid.vert\";\nimport fragmentShader from \"./generated/shaders/solid.frag\";\n\ntype SpriteInstance = { mvp: mat3; color: ReadonlyVec4 };\n\nexport class SolidEffect {\n  #gl: WebGL2RenderingContext;\n  #program: ShaderProgram<typeof vertexShader, typeof fragmentShader>;\n  #instanceBuffer: InstanceBuffer<typeof vertexShader, SpriteInstance>;\n  #quad: Quad;\n  #pending: Array<SpriteInstance>;\n\n  constructor(gl: WebGL2RenderingContext) {\n    this.#gl = gl;\n    this.#program = new ShaderProgram(this.#gl, vertexShader, fragmentShader);\n    this.#instanceBuffer = new InstanceBuffer(this.#gl, this.#program, {\n      a_mvp: (instance) => instance.mvp,\n      a_color: (instance) => instance.color,\n    });\n    this.#quad = new Quad(this.#gl);\n    this.#pending = [];\n  }\n\n  use(scope: (s: SolidEffect) => void) {\n    this.#program.use(() => {\n      scope(this);\n    this.#end();\n    });\n  }\n\n  draw(bounds: ReadonlyVec4, color: ReadonlyVec4): SolidEffect {\n    const mvp = mat3.create();\n    mat3.translate(mvp, mvp, [bounds[3], bounds[0]]);\n    mat3.scale(mvp, mvp, [bounds[1] - bounds[3], bounds[2] - bounds[0]]);\n    mat3.multiply(mvp, SpriteViewProjection, mvp);\n\n    this.#pending.push({ mvp, color });\n    return this;\n  }\n\n  #end() {\n    this.#quad.bindInstances(\n      this.#program,\n      { position: \"a_position\" },\n      this.#instanceBuffer.load(this.#pending),\n      (q) => q.draw()\n    );\n    this.#pending = [];\n  }\n}\n", "const Sheet = { \n  sprites: {\n   grass_b: {\"index\":1,\"width\":16,\"height\":16,\"frames\":[{\"top\":0,\"left\":0,\"bottom\":16,\"right\":16}]},\n   grass_bl: {\"index\":2,\"width\":16,\"height\":16,\"frames\":[{\"top\":16,\"left\":0,\"bottom\":32,\"right\":16}]},\n   grass_br: {\"index\":3,\"width\":16,\"height\":16,\"frames\":[{\"top\":32,\"left\":0,\"bottom\":48,\"right\":16}]},\n   grass_i_bl: {\"index\":4,\"width\":16,\"height\":16,\"frames\":[{\"top\":48,\"left\":0,\"bottom\":64,\"right\":16}]},\n   grass_i_br: {\"index\":5,\"width\":16,\"height\":16,\"frames\":[{\"top\":64,\"left\":0,\"bottom\":80,\"right\":16}]},\n   grass_t: {\"index\":6,\"width\":16,\"height\":16,\"frames\":[{\"top\":80,\"left\":0,\"bottom\":96,\"right\":16}]},\n   grass_tl: {\"index\":7,\"width\":16,\"height\":16,\"frames\":[{\"top\":96,\"left\":0,\"bottom\":112,\"right\":16}]},\n   grass_tr: {\"index\":8,\"width\":16,\"height\":16,\"frames\":[{\"top\":112,\"left\":0,\"bottom\":128,\"right\":16}]},\n   grass_i_tl: {\"index\":9,\"width\":16,\"height\":16,\"frames\":[{\"top\":128,\"left\":0,\"bottom\":144,\"right\":16}]},\n   grass_i_tr: {\"index\":10,\"width\":16,\"height\":16,\"frames\":[{\"top\":144,\"left\":0,\"bottom\":160,\"right\":16}]},\n   grass_l: {\"index\":11,\"width\":16,\"height\":16,\"frames\":[{\"top\":160,\"left\":0,\"bottom\":176,\"right\":16}]},\n   grass_r: {\"index\":12,\"width\":16,\"height\":16,\"frames\":[{\"top\":176,\"left\":0,\"bottom\":192,\"right\":16}]},\n   grass: {\"index\":13,\"width\":16,\"height\":16,\"frames\":[{\"top\":192,\"left\":0,\"bottom\":208,\"right\":16},{\"top\":192,\"left\":16,\"bottom\":208,\"right\":32},{\"top\":192,\"left\":32,\"bottom\":208,\"right\":48},{\"top\":192,\"left\":48,\"bottom\":208,\"right\":64}]},\n   water: {\"index\":14,\"width\":16,\"height\":16,\"frames\":[{\"top\":208,\"left\":0,\"bottom\":224,\"right\":16},{\"top\":208,\"left\":16,\"bottom\":224,\"right\":32},{\"top\":208,\"left\":32,\"bottom\":224,\"right\":48},{\"top\":208,\"left\":48,\"bottom\":224,\"right\":64},{\"top\":208,\"left\":64,\"bottom\":224,\"right\":80},{\"top\":208,\"left\":80,\"bottom\":224,\"right\":96},{\"top\":208,\"left\":96,\"bottom\":224,\"right\":112},{\"top\":208,\"left\":112,\"bottom\":224,\"right\":128}]},\n  },\n  indexes: [\n    \"\",\n    \"grass_b\",\n\"grass_bl\",\n\"grass_br\",\n\"grass_i_bl\",\n\"grass_i_br\",\n\"grass_t\",\n\"grass_tl\",\n\"grass_tr\",\n\"grass_i_tl\",\n\"grass_i_tr\",\n\"grass_l\",\n\"grass_r\",\n\"grass\",\n\"water\",\n  ],\n  urls: {\n    diffuse: \"./sprites/overworld-diffuse.png\",\nemissive: \"./sprites/overworld-emissive.png\",\nnormal: \"./sprites/overworld-normal.png\",\nspecular: \"./sprites/overworld-specular.png\",\n  }\n};\nexport default Sheet;", "\n    import SpriteSheet from \"../sprites/overworld\";\n    const Map = {...{\"width\":100,\"height\":100,\"startPosition\":{\"x\":10,\"y\":10},\"spriteSheet\":\"overworld\",\"url\":\"/maps/overworld.png\"}, spriteSheet: SpriteSheet,\n    };\nexport default Map;", "const Sheet = { \n  sprites: {\n   walk_d: {\"index\":1,\"width\":16,\"height\":32,\"frames\":[{\"top\":0,\"left\":0,\"bottom\":32,\"right\":16},{\"top\":0,\"left\":16,\"bottom\":32,\"right\":32},{\"top\":0,\"left\":32,\"bottom\":32,\"right\":48},{\"top\":0,\"left\":48,\"bottom\":32,\"right\":64}]},\n   walk_u: {\"index\":2,\"width\":16,\"height\":32,\"frames\":[{\"top\":32,\"left\":0,\"bottom\":64,\"right\":16},{\"top\":32,\"left\":16,\"bottom\":64,\"right\":32},{\"top\":32,\"left\":32,\"bottom\":64,\"right\":48},{\"top\":32,\"left\":48,\"bottom\":64,\"right\":64}]},\n   walk_l: {\"index\":3,\"width\":16,\"height\":32,\"frames\":[{\"top\":64,\"left\":0,\"bottom\":96,\"right\":16},{\"top\":64,\"left\":16,\"bottom\":96,\"right\":32},{\"top\":64,\"left\":32,\"bottom\":96,\"right\":48},{\"top\":64,\"left\":48,\"bottom\":96,\"right\":64}]},\n   walk_r: {\"index\":4,\"width\":16,\"height\":32,\"frames\":[{\"top\":96,\"left\":0,\"bottom\":128,\"right\":16},{\"top\":96,\"left\":16,\"bottom\":128,\"right\":32},{\"top\":96,\"left\":32,\"bottom\":128,\"right\":48},{\"top\":96,\"left\":48,\"bottom\":128,\"right\":64}]},\n  },\n  indexes: [\n    \"\",\n    \"walk_d\",\n\"walk_u\",\n\"walk_l\",\n\"walk_r\",\n  ],\n  urls: {\n    diffuse: \"./sprites/character-diffuse.png\",\nemissive: \"./sprites/character-emissive.png\",\nnormal: \"./sprites/character-normal.png\",\nspecular: \"./sprites/character-specular.png\",\n  }\n};\nexport default Sheet;", "const Sheet = { \n  sprites: {\n   touch: {\"index\":1,\"width\":64,\"height\":64,\"frames\":[{\"top\":0,\"left\":0,\"bottom\":64,\"right\":64}]},\n  },\n  indexes: [\n    \"\",\n    \"touch\",\n  ],\n  urls: {\n    diffuse: \"./sprites/ui-diffuse.png\",\nemissive: \"./sprites/ui-emissive.png\",\nnormal: \"./sprites/ui-normal.png\",\nspecular: \"./sprites/ui-specular.png\",\n  }\n};\nexport default Sheet;", "import { vec2, vec4, ReadonlyVec4 } from \"gl-matrix\";\n\nexport const TILE_SIZE = 16;\n\nexport function toAbsoluteFromRelative(\n  out: vec2,\n  relative: vec2,\n  screen: { absolutePosition: vec2 }\n): vec2 {\n  return vec2.add(out, relative, screen.absolutePosition);\n}\n\nexport function toRelativeFromAbsolute(\n  out: vec2,\n  absolute: vec2,\n  screen: { absolutePosition: vec2 }\n): vec2 {\n  return vec2.subtract(out, absolute, screen.absolutePosition);\n}\n\nexport function toAbsoluteTileFromAbsolute(out: vec4, absolute: vec2): vec4 {\n  return vec4.set(\n    out,\n    Math.floor(absolute[0] / TILE_SIZE),\n    Math.floor(absolute[1] / TILE_SIZE),\n    Math.floor(absolute[0]) % TILE_SIZE,\n    Math.floor(absolute[1]) % TILE_SIZE\n  );\n}\n\nexport function pickAbsoluteTileFromRelative(\n  out: vec4,\n  relative: vec2,\n  screen: { absolutePosition: vec2 }\n): vec4 {\n  const absolute = vec2.create();\n  toAbsoluteFromRelative(absolute, relative, screen);\n  return vec4.set(\n    out,\n    Math.floor(absolute[0] / TILE_SIZE),\n    Math.floor(absolute[1] / TILE_SIZE),\n    Math.floor(absolute[0]) % TILE_SIZE,\n    Math.floor(absolute[1]) % TILE_SIZE\n  );\n}\n\nexport function toScreenSpaceFromAbsoluteTile(\n  out: vec4,\n  absoluteTile: vec4,\n  screen: {\n    absolutePosition: vec2;\n    toScreenSpace: (out: vec4, relativeRect: ReadonlyVec4) => vec4;\n  }\n) {\n  toRelativeTileFromAbsoluteTile(out, absoluteTile, screen);\n  return screen.toScreenSpace(out, toRelativeFromRelativeTile(out, out));\n}\n\nexport function toRelativeTileFromAbsolute(\n  out: vec4,\n  absolute: vec2,\n  screen: { absolutePosition: vec2 }\n): vec4 {\n  const relative = vec2.create();\n  toRelativeFromAbsolute(relative, absolute, screen);\n  return vec4.set(\n    out,\n    Math.floor(relative[0] / TILE_SIZE),\n    Math.floor(relative[1] / TILE_SIZE),\n    Math.floor(relative[0]) % TILE_SIZE,\n    Math.floor(relative[1]) % TILE_SIZE\n  );\n}\n\nexport function toRelativeTileFromAbsoluteTile(\n  out: vec4,\n  absoluteTile: vec4,\n  screen: { absolutePosition: vec2 }\n): vec4 {\n  const ssp = toAbsoluteTileFromAbsolute(\n    vec4.create(),\n    screen.absolutePosition\n  );\n\n  return vec4.set(\n    out,\n    absoluteTile[0] - ssp[0],\n    absoluteTile[1] - ssp[1],\n    ssp[2],\n    ssp[3]\n  );\n}\n\nexport function toRelativeTileFromRelative(\n  out: vec4,\n  relative: vec2,\n  screen: { absolutePosition: vec2 }\n): vec4 {\n  const ssp = toAbsoluteTileFromAbsolute(\n    vec4.create(),\n    screen.absolutePosition\n  );\n\n  pickAbsoluteTileFromRelative(out, relative, screen);\n\n  return vec4.set(out, out[0] - ssp[0], out[1] - ssp[1], ssp[2], ssp[3]);\n}\n\nexport function toRelativeFromRelativeTile(\n  out: vec4,\n  relativeTile: vec4,\n  scale: number = 1\n): vec4 {\n  return vec4.set(\n    out,\n    relativeTile[1] * TILE_SIZE - relativeTile[3],\n    relativeTile[0] * TILE_SIZE + TILE_SIZE * scale - relativeTile[2],\n    relativeTile[1] * TILE_SIZE + TILE_SIZE * scale - relativeTile[3],\n    relativeTile[0] * TILE_SIZE - relativeTile[2]\n  );\n}\n", "export interface MapTile {\n  index: number; // 0-255\n  walkable: boolean;\n  spatialHash: boolean;\n  animated: boolean;\n  triggerId: number;\n}\n\nexport interface MapTileSource {\n  sprite: string;\n  walkable: boolean;\n  spatialHash: boolean;\n  animated: boolean;\n  triggerId: number;\n}\n\nexport function decodeMapTile(\n  buffer: Uint8ClampedArray | Buffer,\n  index: number\n): MapTile {\n  return {\n    index: buffer[index],\n    triggerId: buffer[index + 1],\n    walkable: (buffer[index + 2] & 1) === 1,\n    spatialHash: (buffer[index + 2] & 2) === 2,\n    animated: (buffer[index + 2] & 4) === 4,\n  };\n}\n\nexport function encodeMapTile(\n  buffer: Uint8ClampedArray | Buffer,\n  index: number,\n  value: MapTile\n) {\n  buffer[index] = value.index;\n  buffer[index + 1] = value.triggerId;\n  buffer[index + 2] =\n    (value.walkable ? 1 : 0) |\n    (value.spatialHash ? 2 : 0) |\n    (value.animated ? 4 : 0);\n}\n", "import { GameContext } from \"./game-runner\";\nimport { vec2, vec4 } from \"gl-matrix\";\nimport * as coords from \"./coordinates\";\nimport { CPUReadableTexture } from \"./images\";\nimport { MapTile, decodeMapTile, encodeMapTile } from \"../shared/map-format\";\n\nexport default class MapData {\n  buffer: ImageData;\n  width: number;\n  height: number;\n  tileSize: number;\n  bufferPosition: vec4;\n  lastScreenPosition: vec2;\n  lastScreenWidth: number;\n  lastScreenHeight: number;\n  offscreen: CanvasRenderingContext2D;\n\n  constructor(ctx: GameContext, tileSize: number, map: CPUReadableTexture) {\n    this.offscreen = ctx.createOffscreenCanvas(map.width, map.height, {\n      willReadFrequently: true,\n    });\n    this.offscreen.drawImage(map.image, 0, 0, map.width, map.height);\n    this.width = map.width;\n    this.height = map.height;\n    this.tileSize = tileSize;\n    this.buffer = new ImageData(\n      ctx.screen.width / tileSize + 3,\n      ctx.screen.height / tileSize + 3\n    );\n\n    this.bufferPosition = vec4.create();\n    this.lastScreenPosition = vec2.create();\n    this.lastScreenWidth = 0;\n    this.lastScreenHeight = 0;\n  }\n\n  updateScreenBuffer(ctx: GameContext, screenAbsolutePosition: vec2) {\n    if (\n      this.lastScreenWidth !== ctx.screen.width ||\n      this.lastScreenHeight !== ctx.screen.height ||\n      this.lastScreenPosition[0] !== screenAbsolutePosition[0] ||\n      this.lastScreenPosition[1] !== screenAbsolutePosition[1]\n    ) {\n      const ssp = coords.toAbsoluteTileFromAbsolute(\n        vec4.create(),\n        screenAbsolutePosition\n      );\n\n      this.bufferPosition = vec4.fromValues(\n        ssp[0] - 1,\n        ssp[1] - 1,\n        ctx.screen.width / this.tileSize + 3,\n        ctx.screen.height / this.tileSize + 3\n      );\n\n      // read in all the onscreen tiles\n      this.buffer = this.offscreen.getImageData(\n        this.bufferPosition[0],\n        this.bufferPosition[1],\n        this.bufferPosition[2],\n        this.bufferPosition[3]\n      );\n\n      this.lastScreenPosition = vec2.clone(screenAbsolutePosition);\n      this.lastScreenWidth = ctx.screen.width;\n      this.lastScreenHeight = ctx.screen.height;\n    }\n  }\n\n  read(x: number, y: number): MapTile {\n    if (\n      x >= this.bufferPosition[0] &&\n      x < this.bufferPosition[0] + this.bufferPosition[2] &&\n      y >= this.bufferPosition[1] &&\n      y < this.bufferPosition[1] + this.bufferPosition[3]\n    ) {\n      // reading inside the visible screen buffer, fast case\n      x -= this.bufferPosition[0];\n      y -= this.bufferPosition[1];\n      const index = 4 * (this.buffer.width * y + x);\n      return decodeMapTile(this.buffer.data, index);\n    } else {\n      // reading outside of the visible screen, slower, but less common\n      const buff = this.offscreen.getImageData(x, y, 1, 1);\n      return decodeMapTile(buff.data, 0);\n    }\n  }\n\n  write(x: number, y: number, value: MapTile) {\n    if (\n      x >= this.bufferPosition[0] &&\n      x < this.bufferPosition[0] + this.bufferPosition[2] &&\n      y >= this.bufferPosition[1] &&\n      y < this.bufferPosition[1] + this.bufferPosition[3]\n    ) {\n      x -= this.bufferPosition[0];\n      y -= this.bufferPosition[1];\n      const index = 4 * (this.buffer.width * y + x);\n      encodeMapTile(this.buffer.data, index, value);\n      this.offscreen.putImageData(\n        this.buffer,\n        this.bufferPosition[0],\n        this.bufferPosition[1]\n      );\n    } else {\n      const buff = new ImageData(1, 1);\n      encodeMapTile(buff.data, 0, value);\n      this.offscreen.putImageData(buff, x, y);\n    }\n  }\n}\n", "import { GameContext } from \"./game-runner\";\nimport { vec4, vec3, ReadonlyVec2 } from \"gl-matrix\";\nimport { loadCPUReadableTextureFromUrl } from \"./images\";\nimport { loadSpriteSheet } from \"./sprite-common\";\nimport {\n  deferredTextureLoader,\n  DeferredSpriteSheet,\n  DeferredSpriteAnimator,\n  DeferredSpriteEffect,\n} from \"./deferred-sprite-effect\";\nimport {\n  SimpleSpriteEffect,\n  SimpleSpriteSheet,\n  simpleTextureLoader,\n} from \"./sprite-effect\";\nimport { WaterEffect } from \"./water-effect\";\nimport { NearestBlurEffect } from \"./nearest-blur\";\nimport { SolidEffect } from \"./solid-effect\";\nimport overworldMap from \"../shared/generated/maps/overworld\";\nimport characterSprite from \"../shared/generated/sprites/character\";\nimport uiSprite from \"../shared/generated/sprites/ui\";\nimport { MapTileSource } from \"../shared/map-format\";\nimport * as coords from \"./coordinates\";\nimport { vec2 } from \"gl-matrix\";\nimport { EditorAction } from \"../shared/editor-actions\";\nimport MapData from \"./map\";\n\nconst CONTROLLER_DEADZONE = 0.25;\nconst TOUCH_DEADZONE = 5;\nconst CURRENT_SERIALIZATION_VERSION = 1;\nconst MAX_TIME = 1000;\n\nexport interface SerializedGameState {\n  version: number;\n  character: {\n    position: [number, number];\n    direction: string;\n  };\n}\n\nexport interface GameState {\n  spriteEffect: DeferredSpriteEffect;\n  simpleSpriteEffect: SimpleSpriteEffect;\n  solidEffect: SolidEffect;\n  map: MapData;\n  overworld: DeferredSpriteSheet;\n  ui: SimpleSpriteSheet;\n  character: {\n    sprite: DeferredSpriteSheet;\n    animator: DeferredSpriteAnimator;\n    position: vec2;\n    relativePosition: vec2;\n    speed: number;\n    boundingBox: vec4;\n  };\n  screen: {\n    absolutePosition: vec2;\n  };\n  animationTimer: number;\n  waterEffect: WaterEffect;\n  blurEffect: NearestBlurEffect;\n  editor?: EditorState;\n  moveTouch: { id: number; startPosition: ReadonlyVec2 } | null;\n}\n\nexport interface EditorState {\n  active: boolean;\n  newValue: MapTileSource | null;\n  queued: Array<EditorAction>;\n  pending: Array<EditorAction>;\n  isUpdating: boolean;\n}\n\nexport function onSave(state: GameState): SerializedGameState {\n  return {\n    version: 1,\n    character: {\n      position: [state.character.position[0], state.character.position[1]],\n      direction: state.character.animator.getSpriteName(),\n    },\n  };\n}\n\nexport async function onStart(\n  ctx: GameContext,\n  previousState?: SerializedGameState\n): Promise<GameState> {\n  if (\n    previousState &&\n    previousState.version !== CURRENT_SERIALIZATION_VERSION\n  ) {\n    // if its possible to gracefully handle loading a previous version, do so\n    // otherwise, throw an error\n    throw new Error(`Invalid save version ${previousState.version}`);\n  }\n\n  const overworld = await loadSpriteSheet(\n    ctx,\n    overworldMap.spriteSheet,\n    deferredTextureLoader\n  );\n  const character = await loadSpriteSheet(\n    ctx,\n    characterSprite,\n    deferredTextureLoader\n  );\n  const map = await loadCPUReadableTextureFromUrl(ctx, overworldMap.url);\n\n  const state: GameState = {\n    spriteEffect: new DeferredSpriteEffect(ctx.gl),\n    simpleSpriteEffect: new SimpleSpriteEffect(ctx.gl),\n    solidEffect: new SolidEffect(ctx.gl),\n    map: new MapData(ctx, coords.TILE_SIZE, map),\n    ui: await loadSpriteSheet(ctx, uiSprite, simpleTextureLoader),\n    overworld: overworld,\n    character: {\n      sprite: character,\n      animator: new DeferredSpriteAnimator(\n        character,\n        previousState ? previousState.character.direction : \"walk_d\",\n        8 / 1000\n      ),\n      position: previousState\n        ? vec2.fromValues(\n            previousState.character.position[0],\n            previousState.character.position[1]\n          )\n        : vec2.fromValues(ctx.screen.width / 2, ctx.screen.height / 2),\n      relativePosition: vec2.create(),\n      boundingBox: vec4.fromValues(\n        character.walk_u.height - 14,\n        character.walk_u.width - 2,\n        character.walk_u.height - 4,\n        2\n      ),\n      speed: 1,\n    },\n    waterEffect: new WaterEffect(ctx.gl),\n    blurEffect: new NearestBlurEffect(ctx.gl),\n    animationTimer: 0,\n    screen: {\n      absolutePosition: vec2.create(),\n    },\n    moveTouch: null,\n  };\n\n  if (process.env.NODE_ENV === \"development\") {\n    state.editor = {\n      active: false,\n      newValue: null,\n      queued: [],\n      pending: [],\n      isUpdating: false,\n    };\n    setInterval(() => {\n      if (!state.editor) {\n        return;\n      }\n      pushEdits(state.editor);\n    }, 1000);\n  }\n\n  return state;\n}\n\nfunction pushEdits(editor: EditorState) {\n  if (editor.queued.length && !editor.isUpdating) {\n    fetch(\"/edit\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(editor.queued),\n    })\n      .then((r) => {\n        if (!r.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return r.json();\n      })\n      .then((_data) => {\n        editor.pending = [];\n        editor.isUpdating = false;\n      })\n      .catch((_err) => {\n        // re-queue events that failed\n        editor.queued = editor.pending.concat(editor.queued);\n        editor.pending = [];\n        editor.isUpdating = false;\n      });\n    editor.pending = editor.queued;\n    editor.queued = [];\n  }\n}\n\nexport function onUpdate(\n  ctx: GameContext,\n  state: GameState,\n  fixedDelta: number\n) {\n  const direction: { [key: string]: boolean } = {};\n\n  // gamepad input\n  const gp = ctx.getGamepad();\n  if (gp) {\n    if (\n      gp.buttons[12].pressed ||\n      Math.min(0.0, gp.axes[1] + CONTROLLER_DEADZONE) < 0\n    ) {\n      direction.up = true;\n    }\n    if (\n      gp.buttons[13].pressed ||\n      Math.max(0.0, gp.axes[1] - CONTROLLER_DEADZONE) > 0\n    ) {\n      direction.down = true;\n    }\n    if (\n      gp.buttons[14].pressed ||\n      Math.min(0.0, gp.axes[0] + CONTROLLER_DEADZONE) < 0\n    ) {\n      direction.left = true;\n    }\n    if (\n      gp.buttons[15].pressed ||\n      Math.max(0.0, gp.axes[0] - CONTROLLER_DEADZONE) > 0\n    ) {\n      direction.right = true;\n    }\n  }\n\n  // keyboard input\n  if (ctx.keys.pressed.has(\"f\") && ctx.keys.down.has(\"Control\")) {\n    if (!document.fullscreenElement) {\n      ctx.canvas.requestFullscreen();\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n    }\n  }\n  if (ctx.keys.down.has(\"w\") || ctx.keys.down.has(\"ArrowUp\")) {\n    direction.up = true;\n  }\n  if (ctx.keys.down.has(\"s\") || ctx.keys.down.has(\"ArrowDown\")) {\n    direction.down = true;\n  }\n  if (ctx.keys.down.has(\"a\") || ctx.keys.down.has(\"ArrowLeft\")) {\n    direction.left = true;\n  }\n  if (ctx.keys.down.has(\"d\") || ctx.keys.down.has(\"ArrowRight\")) {\n    direction.right = true;\n  }\n\n  // touch input\n  for (let [k, v] of ctx.touches.down) {\n    if (state.moveTouch === null && Date.now() - v.started > 250) {\n      state.moveTouch = { id: k, startPosition: vec2.clone(v.position) };\n    }\n  }\n  for (let [k, _] of ctx.touches.ended) {\n    if (state.moveTouch !== null && k === state.moveTouch.id) {\n      state.moveTouch = null;\n    }\n  }\n  if (state.moveTouch !== null) {\n    const currentTouch = ctx.touches.down.get(state.moveTouch.id);\n    if (currentTouch) {\n      if (\n        currentTouch.position[0] - state.moveTouch.startPosition[0] <\n        -TOUCH_DEADZONE\n      ) {\n        direction.left = true;\n      }\n      if (\n        currentTouch.position[0] - state.moveTouch.startPosition[0] >\n        TOUCH_DEADZONE\n      ) {\n        direction.right = true;\n      }\n      if (\n        currentTouch.position[1] - state.moveTouch.startPosition[1] <\n        -TOUCH_DEADZONE\n      ) {\n        direction.up = true;\n      }\n      if (\n        currentTouch.position[1] - state.moveTouch.startPosition[1] >\n        TOUCH_DEADZONE\n      ) {\n        direction.down = true;\n      }\n    } else {\n      state.moveTouch = null;\n    }\n  }\n\n  let newDirection: keyof typeof characterSprite.sprites | null = null;\n  // direction animations are mutually exclusive\n  if (direction.left) {\n    newDirection = \"walk_l\";\n  } else if (direction.right) {\n    newDirection = \"walk_r\";\n  } else if (direction.up) {\n    newDirection = \"walk_u\";\n  } else if (direction.down) {\n    newDirection = \"walk_d\";\n  }\n\n  if (newDirection) {\n    state.character.animator.setSpriteOrTick(newDirection, fixedDelta);\n  }\n\n  // provide a stable looping animation\n  state.animationTimer += fixedDelta / 10;\n  if (state.animationTimer > MAX_TIME) {\n    state.animationTimer -= MAX_TIME;\n  }\n\n  // but movement is not\n  const movement = vec2.create();\n  if (direction.left) {\n    movement[0]--;\n  }\n  if (direction.right) {\n    movement[0]++;\n  }\n  if (direction.up) {\n    movement[1]--;\n  }\n  if (direction.down) {\n    movement[1]++;\n  }\n  // make sure angular movement isn't faster than up/down/left/right\n  vec2.normalize(movement, movement);\n  vec2.scale(movement, movement, state.character.speed);\n  vec2.add(movement, movement, state.character.position);\n\n  const renderOffset = vec2.fromValues(\n    state.character.animator.getSprite().width / 2,\n    state.character.animator.getSprite().height / 2\n  );\n\n  // check the characters bounding box against the map\n  // top left\n  const isWalkable =\n    state.map.read(\n      Math.floor(\n        (movement[0] - renderOffset[0] + state.character.boundingBox[3]) /\n          coords.TILE_SIZE\n      ),\n      Math.floor(\n        (movement[1] - renderOffset[1] + state.character.boundingBox[0]) /\n          coords.TILE_SIZE\n      )\n    ).walkable &&\n    // top right\n    state.map.read(\n      Math.floor(\n        (movement[0] - renderOffset[0] + state.character.boundingBox[1]) /\n          coords.TILE_SIZE\n      ),\n      Math.floor(\n        (movement[1] - renderOffset[1] + state.character.boundingBox[0]) /\n          coords.TILE_SIZE\n      )\n    ).walkable &&\n    // bottom left\n    state.map.read(\n      Math.floor(\n        (movement[0] - renderOffset[0] + state.character.boundingBox[3]) /\n          coords.TILE_SIZE\n      ),\n      Math.floor(\n        (movement[1] - renderOffset[1] + state.character.boundingBox[2]) /\n          coords.TILE_SIZE\n      )\n    ).walkable &&\n    // bottom right\n    state.map.read(\n      Math.floor(\n        (movement[0] - renderOffset[0] + state.character.boundingBox[1]) /\n          coords.TILE_SIZE\n      ),\n      Math.floor(\n        (movement[1] - renderOffset[1] + state.character.boundingBox[2]) /\n          coords.TILE_SIZE\n      )\n    ).walkable;\n\n  if (isWalkable) {\n    const renderOffset = vec2.fromValues(\n      state.character.animator.getSprite().width / 2,\n      state.character.animator.getSprite().height / 2\n    );\n    const mapSize = vec2.fromValues(\n      state.map.width * coords.TILE_SIZE,\n      state.map.height * coords.TILE_SIZE\n    );\n    vec2.subtract(mapSize, mapSize, renderOffset);\n    vec2.min(state.character.position, movement, mapSize);\n    vec2.max(state.character.position, state.character.position, renderOffset);\n  }\n\n  // character position relative to the top left of the screen\n  state.character.relativePosition[0] =\n    state.character.position[0] < ctx.screen.width / 2\n      ? state.character.position[0]\n      : state.character.position[0] >\n        state.map.width * coords.TILE_SIZE - ctx.screen.width / 2\n      ? state.character.position[0] -\n        state.map.width * coords.TILE_SIZE +\n        ctx.screen.width\n      : ctx.screen.width / 2;\n  state.character.relativePosition[1] =\n    state.character.position[1] < ctx.screen.height / 2\n      ? state.character.position[1]\n      : state.character.position[1] >\n        state.map.height * coords.TILE_SIZE - ctx.screen.height / 2\n      ? state.character.position[1] -\n        state.map.height * coords.TILE_SIZE +\n        ctx.screen.height\n      : ctx.screen.height / 2;\n\n  // Record the scroll offset of the screen\n  vec2.subtract(\n    state.screen.absolutePosition,\n    state.character.position,\n    state.character.relativePosition\n  );\n\n  state.map.updateScreenBuffer(ctx, state.screen.absolutePosition);\n\n  if (process.env.NODE_ENV === \"development\") {\n    updateEditor(ctx, state, fixedDelta);\n  }\n}\n\nfunction smoothstep(edge0: number, edge1: number, x: number): number {\n  x = Math.max(0, Math.min(1, (x - edge0) / (edge1 - edge0)));\n  return x * x * (3 - 2 * x);\n}\n\nexport function onDraw(ctx: GameContext, state: GameState, delta: number) {\n  ctx.gl.enable(ctx.gl.BLEND);\n  ctx.gl.blendFunc(ctx.gl.SRC_ALPHA, ctx.gl.ONE_MINUS_SRC_ALPHA);\n\n  const ssp = coords.toAbsoluteTileFromAbsolute(\n    vec4.create(),\n    state.screen.absolutePosition\n  );\n\n  let sin = Math.sin(state.animationTimer);\n  sin = Math.min(1.0, sin + 0.5);\n\n  const day =\n    state.animationTimer < MAX_TIME * 0.25\n      ? smoothstep(0, MAX_TIME * 0.25, state.animationTimer)\n      : state.animationTimer < MAX_TIME * 0.5\n      ? 1.0\n      : state.animationTimer < MAX_TIME * 0.75\n      ? 1.0 - smoothstep(MAX_TIME * 0.5, MAX_TIME * 0.75, state.animationTimer)\n      : 0.0;\n  const sunDirection = Math.cos(\n    (Math.min(state.animationTimer, MAX_TIME * 0.75) * Math.PI) /\n      (MAX_TIME * 0.75)\n  );\n\n  state.spriteEffect\n    .addDirectionalLight({\n      ambient: vec3.fromValues(\n        0.2 + day * 0.3,\n        0.2 + day * 0.3,\n        0.4 + day * 0.1\n      ),\n      direction: vec3.fromValues(sunDirection, day * 0.3 + 0.2, -1.0),\n      diffuse: vec3.fromValues(\n        Math.pow(day, 0.25) * (1 - day) + day * 0.5,\n        day * 0.5,\n        day * 0.45\n      ),\n    })\n    .addDirectionalLight({\n      ambient: vec3.create(),\n      direction: vec3.fromValues(0.0, (1 - day) * 0.5, -1.0),\n      diffuse: vec3.fromValues(\n        (1 - day) * 0.2,\n        (1 - day) * 0.2,\n        (1 - day) * 0.2\n      ),\n    })\n    .addPointLight({\n      diffuse: vec3.fromValues(\n        0.6 * (1 - day),\n        0.6 * (1 - day),\n        0.3 * (1 - day)\n      ),\n      position: vec3.fromValues(\n        ctx.mouse.position[0] / ctx.screen.width,\n        ctx.mouse.position[1] / ctx.screen.height,\n        0.1\n      ),\n      radius: 0.5,\n    })\n    .use(\n      {\n        width: ctx.screen.width,\n        height: ctx.screen.height,\n      },\n      (s, pass) => {\n        if (pass === 0) {\n          // overdraw the screen by 1 tile at each edge to prevent tile pop-in\n          for (\n            let x = -1;\n            x <= (ctx.screen.width + 2) / coords.TILE_SIZE;\n            ++x\n          ) {\n            for (\n              let y = -1;\n              y <= (ctx.screen.height + 2) / coords.TILE_SIZE;\n              ++y\n            ) {\n              const mapX = x + ssp[0];\n              const mapY = y + ssp[1];\n              const spatialHash = hash(mapX, mapY);\n\n              const position = ctx.screen.toScreenSpace(\n                vec4.create(),\n                vec4.fromValues(\n                  y * coords.TILE_SIZE - ssp[3],\n                  x * coords.TILE_SIZE + coords.TILE_SIZE - ssp[2],\n                  y * coords.TILE_SIZE + coords.TILE_SIZE - ssp[3],\n                  x * coords.TILE_SIZE - ssp[2]\n                )\n              );\n\n              if (state.map.read(mapX, mapY).index !== 0) {\n                // not water\n                const top = state.map.read(mapX, mapY - 1).index === 0;\n                const left = state.map.read(mapX - 1, mapY).index === 0;\n                const bottom = state.map.read(mapX, mapY + 1).index === 0;\n                const right = state.map.read(mapX + 1, mapY).index === 0;\n                const topLeft = state.map.read(mapX - 1, mapY - 1).index === 0;\n                const topRight = state.map.read(mapX + 1, mapY - 1).index === 0;\n                const bottomLeft =\n                  state.map.read(mapX - 1, mapY + 1).index === 0;\n                const bottomRight =\n                  state.map.read(mapX + 1, mapY + 1).index === 0;\n\n                if (top && left) {\n                  state.overworld.grass_tl.draw(s, position);\n                } else if (top && right) {\n                  state.overworld.grass_tr.draw(s, position);\n                } else if (top && !left && !right) {\n                  state.overworld.grass_t.draw(s, position);\n                } else if (topLeft && !left && !top) {\n                  state.overworld.grass_i_tl.draw(s, position);\n                } else if (topRight && !right && !top) {\n                  state.overworld.grass_i_tr.draw(s, position);\n                } else if (left && !top && !bottom) {\n                  state.overworld.grass_l.draw(s, position);\n                } else if (bottom && left) {\n                  state.overworld.grass_bl.draw(s, position);\n                } else if (bottom && right) {\n                  state.overworld.grass_br.draw(s, position);\n                } else if (bottom && !left && !right) {\n                  state.overworld.grass_b.draw(s, position);\n                } else if (bottomLeft && !left && !bottom) {\n                  state.overworld.grass_i_bl.draw(s, position);\n                } else if (bottomRight && !right && !bottom) {\n                  state.overworld.grass_i_br.draw(s, position);\n                } else if (right && !top && !bottom) {\n                  state.overworld.grass_r.draw(s, position);\n                } else {\n                  state.overworld.grass.draw(s, position, spatialHash);\n                }\n              }\n            }\n          }\n        } else {\n          const offset = vec2.fromValues(\n            state.character.animator.getSprite().width / 2,\n            state.character.animator.getSprite().height / 2\n          );\n\n          state.character.animator.draw(\n            s,\n            ctx.screen.toScreenSpace(\n              vec4.create(),\n              vec4.fromValues(\n                Math.floor(state.character.relativePosition[1]) - offset[1],\n                Math.floor(state.character.relativePosition[0]) + offset[0],\n                Math.floor(state.character.relativePosition[1]) + offset[1],\n                Math.floor(state.character.relativePosition[0]) - offset[0]\n              )\n            )\n          );\n        }\n      },\n      (mask) => {\n        const pos = vec2.clone(state.screen.absolutePosition);\n        vec2.div(\n          pos,\n          pos,\n          vec2.fromValues(ctx.screen.width, ctx.screen.height)\n        );\n        state.blurEffect.draw(mask, 3.0);\n        state.waterEffect.draw(\n          state.animationTimer,\n          pos,\n          mask,\n          state.blurEffect.getBlurTexture()\n        );\n      }\n    );\n\n  // draw the accumulated deferred lighting texture to the screen\n  state.simpleSpriteEffect.use((s) => {\n    const lightingTexture = state.spriteEffect.getLightingTexture();\n    if (lightingTexture) {\n      s.setTextures(lightingTexture);\n      s.draw(\n        vec4.fromValues(1.0, 1.0, 0, 0),\n        vec4.fromValues(0, lightingTexture.width, lightingTexture.height, 0)\n      );\n    }\n\n    if (state.moveTouch !== null) {\n      s.setAlpha(0.5);\n      state.ui.touch.draw(\n        s,\n        ctx.screen.toScreenSpace(\n          vec4.create(),\n          vec4.fromValues(\n            Math.round(state.moveTouch.startPosition[1]) - 32,\n            Math.round(state.moveTouch.startPosition[0]) + 32,\n            Math.round(state.moveTouch.startPosition[1]) + 32,\n            Math.round(state.moveTouch.startPosition[0]) - 32\n          )\n        )\n      );\n    }\n  });\n\n  if (process.env.NODE_ENV === \"development\") {\n    drawEditor(ctx, state, delta);\n  }\n}\n\nfunction updateEditor(ctx: GameContext, state: GameState, _fixedDelta: number) {\n  if (!state.editor) return;\n\n  if (ctx.keys.pressed.has(\"m\") && ctx.keys.down.has(\"Control\")) {\n    state.editor.active = !state.editor.active;\n  }\n\n  if (!state.editor.active) {\n    return;\n  }\n\n  if (ctx.mouse.down[0]) {\n    const ap = coords.pickAbsoluteTileFromRelative(\n      vec4.create(),\n      ctx.mouse.position,\n      state.screen\n    );\n\n    if (state.editor.newValue === null) {\n      const oldValue = state.map.read(ap[0], ap[1]);\n      state.editor.newValue = {\n        sprite: oldValue.index === 0 ? \"grass\" : \"\",\n        triggerId: 0,\n        walkable: oldValue.index === 0,\n        spatialHash: oldValue.index === 0,\n        animated: false,\n      };\n    }\n    state.map.write(ap[0], ap[1], {\n      ...state.editor.newValue,\n      index: state.editor.newValue.sprite\n        ? state.overworld[state.editor.newValue.sprite].index\n        : 0,\n    });\n\n    const found = rfind(\n      state.editor.queued,\n      (e) => e.type === \"TILE_CHANGE\" && e.x === ap[0] && e.y === ap[1]\n    );\n\n    if (found && found.type === \"TILE_CHANGE\") {\n      found.value = state.editor.newValue;\n    } else {\n      state.editor.queued.push({\n        type: \"TILE_CHANGE\",\n        x: ap[0],\n        y: ap[1],\n        map: \"overworld\",\n        value: state.editor.newValue,\n      });\n    }\n  } else {\n    state.editor.newValue = null;\n  }\n}\n\nfunction rfind<T>(\n  arr: Array<T>,\n  predicate: (value: T, index: number, arr: Array<T>) => boolean\n): T | null {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i], i, arr)) {\n      return arr[i];\n    }\n  }\n  return null;\n}\n\nfunction drawEditor(ctx: GameContext, state: GameState, _delta: number) {\n  if (!state.editor) return;\n\n  if (state.editor.active) {\n    const ap = coords.pickAbsoluteTileFromRelative(\n      vec4.create(),\n      ctx.mouse.position,\n      state.screen\n    );\n\n    state.solidEffect.use((s) => {\n      // editor cursor\n      s.draw(\n        coords.toScreenSpaceFromAbsoluteTile(vec4.create(), ap, {\n          ...state.screen,\n          ...ctx.screen,\n        }),\n        vec4.fromValues(1.0, 0, 0, 0.5)\n      );\n\n      // character bounding box\n      const offset = vec2.fromValues(\n        state.character.animator.getSprite().width / 2,\n        state.character.animator.getSprite().height / 2\n      );\n      s.draw(\n        ctx.screen.toScreenSpace(\n          vec4.create(),\n          vec4.fromValues(\n            Math.floor(state.character.relativePosition[1]) -\n              offset[1] +\n              state.character.boundingBox[0],\n            Math.floor(state.character.relativePosition[0]) -\n              offset[0] +\n              state.character.boundingBox[1],\n            Math.floor(state.character.relativePosition[1]) -\n              offset[1] +\n              state.character.boundingBox[2],\n            Math.floor(state.character.relativePosition[0]) -\n              offset[0] +\n              state.character.boundingBox[3]\n          )\n        ),\n        vec4.fromValues(0.0, 0, 1.0, 0.5)\n      );\n    });\n  }\n}\n\nfunction hash(x: number, y: number): number {\n  const A = 48271;\n  const M = 2147483647;\n  const Q = M / A;\n  const R = M % A;\n\n  let temp = A * (x % Q) - R * Math.floor(x / Q);\n  if (temp >= 0) x = temp;\n  else x = temp + M;\n\n  temp = A * (y % Q) - R * Math.floor(y / Q);\n  if (temp >= 0) y = temp;\n  else y = temp + M;\n\n  return x ^ y;\n}\n", "import GameRunner from \"./game-runner\";\nimport { onSave, onStart, onUpdate, onDraw } from \"./game\";\n\nconst gameCanvas = GameRunner({\n  fixedUpdate: 1000 / 60,\n  saveKey: \"pixelheart\",\n  save: onSave,\n  start: onStart,\n  update: onUpdate,\n  draw: onDraw,\n  screen: {\n    incrementSize: 16,\n    preferredWidthIncrements: 20,\n    preferredHeightIncrements: 13,\n  },\n});\n\nif (gameCanvas) {\n  const root = document.getElementById(\"root\");\n  root?.appendChild(gameCanvas);\n}\n"],
  "mappings": "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",
  "names": []
}
